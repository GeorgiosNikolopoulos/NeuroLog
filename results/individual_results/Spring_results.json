[{"severity": "debug", "msg": "\"PointcutExpression matching rejected target class - trying fallback expression\",ex", "lineLoc": 278, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java"}, {"severity": "debug", "msg": "\"PointcutExpression matching rejected target class\",ex", "lineLoc": 287, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java"}, {"severity": "debug", "msg": "\"Could not access current invocation - matching with limited context: \" + ex", "lineLoc": 352, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java"}, {"severity": "debug", "msg": "\"Failed to evaluate join point for arguments \" + Arrays.asList(args) + \" - falling back to non-match\",ex", "lineLoc": 381, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java"}, {"severity": "debug", "msg": "\"Failed to create fallback PointcutExpression\",ex", "lineLoc": 406, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java"}, {"severity": "debug", "msg": "makeMessageFor(message)", "lineLoc": 56, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.java"}, {"severity": "info", "msg": "makeMessageFor(message)", "lineLoc": 62, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.java"}, {"severity": "warn", "msg": "makeMessageFor(message)", "lineLoc": 68, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.java"}, {"severity": "error", "msg": "makeMessageFor(message)", "lineLoc": 74, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.java"}, {"severity": "fatal", "msg": "makeMessageFor(message)", "lineLoc": 80, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJWeaverMessageHandler.java"}, {"severity": "debug", "msg": "\"Found AspectJ method: \" + candidateAdviceMethod", "lineLoc": 243, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java"}, {"severity": "debug", "msg": "\"Processing pointcut '\" + candidateAdviceMethod.getName() + \"'\"", "lineLoc": 251, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/aspectj/annotation/ReflectiveAspectJAdvisorFactory.java"}, {"severity": "trace", "msg": "\"Creating CGLIB proxy: \" + this.advised.getTargetSource()", "lineLoc": 161, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "info", "msg": "\"Unable to proxy interface-implementing method [\" + method + \"] because \" + \"it is marked as final: Consider using interface-based JDK proxies instead!\"", "lineLoc": 262, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "debug", "msg": "\"Final method [\" + method + \"] cannot get proxied via CGLIB: \" + \"Calls to this method will NOT be routed to the target instance and \" + \"might lead to NPEs against uninitialized fields in the proxy instance.\"", "lineLoc": 265, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "debug", "msg": "\"Method [\" + method + \"] is package-visible across different ClassLoaders \" + \"and cannot get proxied via CGLIB: Declare this method as public or protected \" + \"if you need to support invocations through the proxy.\"", "lineLoc": 271, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Found finalize() method - using NO_OVERRIDE\"", "lineLoc": 816, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Method is declared on Advised interface: \" + method", "lineLoc": 822, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Found 'equals' method: \" + method", "lineLoc": 829, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Found 'hashCode' method: \" + method", "lineLoc": 836, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Must expose proxy on advised method: \" + method", "lineLoc": 851, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Method has advice and optimizations are enabled: \" + method", "lineLoc": 860, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Unable to apply any optimizations to advised method: \" + method", "lineLoc": 868, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Method return type is assignable from target type and \" + \"may therefore return 'this' - using INVOKE_TARGET: \" + method", "lineLoc": 885, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Method return type ensures 'this' cannot be returned - \" + \"using DISPATCH_TARGET: \" + method", "lineLoc": 892, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"}, {"severity": "trace", "msg": "\"Creating JDK dynamic proxy: \" + this.advised.getTargetSource()", "lineLoc": 119, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/JdkDynamicAopProxy.java"}, {"severity": "debug", "msg": "\"Unable to instantiate proxy using Objenesis, \" + \"falling back to regular proxy construction\",ex", "lineLoc": 66, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ObjenesisCglibAopProxy.java"}, {"severity": "info", "msg": "\"Using non-singleton proxies with singleton targets is often undesirable. \" + \"Enable prototype proxies by setting the 'targetName' property.\"", "lineLoc": 258, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "trace", "msg": "\"Creating copy of prototype ProxyFactoryBean config: \" + this", "lineLoc": 346, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "trace", "msg": "\"Using ProxyCreatorSupport copy: \" + copy", "lineLoc": 363, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "debug", "msg": "\"Bean with name '\" + finalName + \"' concluding interceptor chain \" + \"is not an advisor class: treating it as a target or TargetSource\"", "lineLoc": 395, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "debug", "msg": "\"Could not determine type of bean with name '\" + beanName + \"' - assuming it is neither an Advisor nor an Advice\"", "lineLoc": 421, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "trace", "msg": "\"Configuring advisor or advice '\" + name + \"'\"", "lineLoc": 453, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "debug", "msg": "\"Refreshing bean named '\" + pa.getBeanName() + \"'\"", "lineLoc": 499, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "trace", "msg": "\"Adding advisor with name '\" + name + \"'\"", "lineLoc": 562, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "trace", "msg": "\"Not refreshing target: Bean name not specified in 'interceptorNames'.\"", "lineLoc": 576, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "debug", "msg": "\"Refreshing target with name '\" + this.targetName + \"'\"", "lineLoc": 586, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "debug", "msg": "\"Advice has changed; recaching singleton instance\"", "lineLoc": 617, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/ProxyFactoryBean.java"}, {"severity": "debug", "msg": "\"Found exception handler method on throws advice: \" + method", "lineLoc": 88, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptor.java"}, {"severity": "trace", "msg": "\"Trying to find handler for exception of type [\" + exceptionClass.getName() + \"]\"", "lineLoc": 132, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptor.java"}, {"severity": "trace", "msg": "\"Found handler for exception of type [\" + exceptionClass.getName() + \"]: \" + handler", "lineLoc": 140, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptor.java"}, {"severity": "trace", "msg": "\"Did not attempt to auto-proxy infrastructure class [\" + beanClass.getName() + \"]\"", "lineLoc": 378, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java"}, {"severity": "trace", "msg": "\"TargetSourceCreator [\" + tsc + \"] found custom TargetSource for bean with name '\" + beanName + \"'\"", "lineLoc": 419, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java"}, {"severity": "trace", "msg": "\"Creating implicit proxy for bean '\" + beanName + \"' with \" + nrOfCommonInterceptors + \" common interceptors and \" + nrOfSpecificInterceptors + \" specific interceptors\"", "lineLoc": 529, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.java"}, {"severity": "trace", "msg": "\"Skipping currently created advisor '\" + name + \"'\"", "lineLoc": 86, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.java"}, {"severity": "trace", "msg": "\"Skipping advisor '\" + name + \"' with dependency on currently created bean: \" + ex.getMessage()", "lineLoc": 100, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/BeanFactoryAdvisorRetrievalHelper.java"}, {"severity": "debug", "msg": "\"Configuring AbstractBeanFactoryBasedTargetSource: \" + targetSource", "lineLoc": 99, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java"}, {"severity": "trace", "msg": "message,ex", "lineLoc": 219, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/AbstractTraceInterceptor.java"}, {"severity": "trace", "msg": "message", "lineLoc": 222, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/AbstractTraceInterceptor.java"}, {"severity": "debug", "msg": "\"Could not find unique TaskExecutor bean\",ex", "lineLoc": 236, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java"}, {"severity": "info", "msg": "\"More than one TaskExecutor bean found within the context, and none is named \" + \"'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly \" + \"as an alias) in order to use it for async processing: \" + ex.getBeanNamesFound()", "lineLoc": 242, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java"}, {"severity": "debug", "msg": "\"Could not find default TaskExecutor bean\",ex", "lineLoc": 249, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java"}, {"severity": "info", "msg": "\"No task executor bean found for async processing: \" + \"no bean of type TaskExecutor and no bean named 'taskExecutor' either\"", "lineLoc": 254, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java"}, {"severity": "warn", "msg": "\"Exception handler for async method '\" + method.toGenericString() + \"' threw unexpected exception itself\",ex2", "lineLoc": 317, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/AsyncExecutionAspectSupport.java"}, {"severity": "error", "msg": "\"Unexpected exception occurred invoking async method: \" + method,ex", "lineLoc": 39, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/interceptor/SimpleAsyncUncaughtExceptionHandler.java"}, {"severity": "trace", "msg": "\"Getting bean with name '\" + this.targetBeanName + \"' for type determination\"", "lineLoc": 136, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java"}, {"severity": "debug", "msg": "\"Initializing lazy target object\"", "lineLoc": 87, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/AbstractLazyCreationTargetSource.java"}, {"severity": "debug", "msg": "\"Creating new instance of bean '\" + getTargetBeanName() + \"'\"", "lineLoc": 67, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java"}, {"severity": "debug", "msg": "\"Destroying instance of bean '\" + getTargetBeanName() + \"'\"", "lineLoc": 78, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java"}, {"severity": "warn", "msg": "\"Destroy method on bean with name '\" + getTargetBeanName() + \"' threw an exception\",ex", "lineLoc": 88, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java"}, {"severity": "debug", "msg": "\"Disconnecting TargetSource [\" + this + \"]\"", "lineLoc": 113, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java"}, {"severity": "error", "msg": "msg,ex", "lineLoc": 123, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/AbstractPrototypeBasedTargetSource.java"}, {"severity": "debug", "msg": "\"Creating Commons object pool\"", "lineLoc": 204, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java"}, {"severity": "debug", "msg": "\"Closing Commons ObjectPool\"", "lineLoc": 265, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/CommonsPool2TargetSource.java"}, {"severity": "debug", "msg": "\"No target for prototype '\" + getTargetBeanName() + \"' bound to thread: \" + \"creating one and binding it to thread '\" + Thread.currentThread().getName() + \"'\"", "lineLoc": 84, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java"}, {"severity": "debug", "msg": "\"Destroying ThreadLocalTargetSource bindings\"", "lineLoc": 106, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/ThreadLocalTargetSource.java"}, {"severity": "debug", "msg": "\"Attempting to refresh target\"", "lineLoc": 103, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.java"}, {"severity": "debug", "msg": "\"Target refreshed successfully\"", "lineLoc": 109, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.java"}, {"severity": "debug", "msg": "\"Refresh check delay elapsed - checking whether refresh is required\"", "lineLoc": 133, "fileLoc": "spring-framework/spring-aop/src/main/java/org/springframework/aop/target/dynamic/AbstractRefreshableTargetSource.java"}, {"severity": "trace", "msg": "\"Adding cacheable method '\" + method.getName() + \"' with attribute: \" + cacheOps", "lineLoc": 102, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/cache/interceptor/AbstractFallbackCacheOperationSource.java"}, {"severity": "trace", "msg": "\"Invalidating \" + (keyBANGEQnullQUES\"cache key [\" + key + \"]\":\"entire cache\") + \" for operation \" + operation + \" on method \" + context.metadata.method", "lineLoc": 502, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java"}, {"severity": "trace", "msg": "\"No cache entry for key '\" + key + \"' in cache(s) \" + context.getCacheNames()", "lineLoc": 525, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java"}, {"severity": "trace", "msg": "\"Cache entry for key '\" + key + \"' found in cache '\" + cache.getName() + \"'\"", "lineLoc": 557, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java"}, {"severity": "trace", "msg": "\"Cache condition failed on method \" + context.metadata.method + \" for operation \" + context.metadata.operation", "lineLoc": 568, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java"}, {"severity": "trace", "msg": "\"Computed cache key '\" + key + \"' for operation \" + context.metadata.operation", "lineLoc": 581, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/cache/interceptor/CacheAspectSupport.java"}, {"severity": "debug", "msg": "\"Adding method [\" + methodName + \"] with cache operations [\" + ops + \"]\"", "lineLoc": 72, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/cache/interceptor/NameMatchCacheOperationSource.java"}, {"severity": "info", "msg": "String.format(\"%s was imported but no annotations were found \" + \"having both 'mode' and 'proxyTargetClass' attributes of type \" + \"AdviceMode and boolean respectively. This means that auto proxy \" + \"creator registration and configuration may not have occurred as \" + \"intended, and components may not be proxied as expected. Check to \" + \"ensure that %s has been @Import'ed on the same class where these \" + \"annotations are declared; otherwise remove the import of %s \" + \"altogether.\",name,name,name)", "lineLoc": 82, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/AutoProxyRegistrar.java"}, {"severity": "trace", "msg": "\"JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning\"", "lineLoc": 212, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "trace", "msg": "\"JSR-330 'javax.inject.Named' annotation found and supported for component scanning\"", "lineLoc": 220, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "debug", "msg": "\"Using candidate component class from index: \" + type", "lineLoc": 393, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "debug", "msg": "\"Ignored because not a concrete top-level class: \" + type", "lineLoc": 399, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "trace", "msg": "\"Ignored because matching an exclude filter: \" + type", "lineLoc": 405, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "trace", "msg": "\"Scanning \" + resource", "lineLoc": 426, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "debug", "msg": "\"Identified candidate component class: \" + resource", "lineLoc": 437, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "debug", "msg": "\"Ignored because not a concrete top-level class: \" + resource", "lineLoc": 443, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "trace", "msg": "\"Ignored because not matching any filter: \" + resource", "lineLoc": 449, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "trace", "msg": "\"Ignored because not readable: \" + resource", "lineLoc": 460, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"}, {"severity": "trace", "msg": "\"Registered bean definition for imported class '\" + configBeanName + \"'\"", "lineLoc": 166, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java"}, {"severity": "trace", "msg": "String.format(\"Registering bean definition for @Bean method %s.%s()\",configClass.getMetadata().getClassName(),beanName)", "lineLoc": 271, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java"}, {"severity": "debug", "msg": "String.format(\"Skipping bean definition for %s: a definition for bean '%s' \" + \"already exists. This top-level bean definition is considered as an override.\",beanMethod,beanName)", "lineLoc": 313, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassBeanDefinitionReader.java"}, {"severity": "debug", "msg": "String.format(\"Ignoring request to enhance %s as it has \" + \"already been enhanced. This usually indicates that more than one \" + \"ConfigurationClassPostProcessor has been registered (e.g. via \" + \"<context:annotation-config>). This is harmless, but you may \" + \"want check your configuration and remove one CCPP if possible\",configClass.getName())", "lineLoc": 100, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"}, {"severity": "trace", "msg": "String.format(\"Successfully enhanced %s; enhanced class name is: %s\",configClass.getName(),enhancedClass.getName())", "lineLoc": 111, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"}, {"severity": "info", "msg": "String.format(\"@Bean method %s.%s is non-static and returns an object \" + \"assignable to Spring's BeanFactoryPostProcessor interface. This will \" + \"result in a failure to process annotations such as @Autowired, \" + \"@Resource and @PostConstruct within the method's declaring \" + \"@Configuration class. Add the 'static' modifier to this method to avoid \" + \"these container lifecycle issues; see @Bean javadoc for complete details.\",beanMethod.getDeclaringClass().getSimpleName(),beanMethod.getName())", "lineLoc": 355, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"}, {"severity": "debug", "msg": "String.format(\"@Bean method %s.%s called as bean reference \" + \"for type [%s] returned null bean; resolving to null value.\",beanMethod.getDeclaringClass().getSimpleName(),beanMethod.getName(),beanMethod.getReturnType().getName())", "lineLoc": 399, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"}, {"severity": "trace", "msg": "\"Creating interface proxy for FactoryBean '\" + beanName + \"' of type [\" + clazz.getName() + \"] for use within another @Bean method because its \" + (finalClassQUES\"implementation class\":\"getObject() method\") + \" is final: Otherwise a getObject() call would not be routed to the factory.\"", "lineLoc": 498, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"}, {"severity": "debug", "msg": "\"Unable to proxy FactoryBean '\" + beanName + \"' of type [\" + clazz.getName() + \"] for use within another @Bean method because its \" + (finalClassQUES\"implementation class\":\"getObject() method\") + \" is final: A getObject() call will NOT be routed to the factory. \" + \"Consider declaring the return type as a FactoryBean interface.\"", "lineLoc": 507, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"}, {"severity": "debug", "msg": "\"Unable to instantiate enhanced FactoryBean using Objenesis, \" + \"falling back to regular construction\",ex", "lineLoc": 555, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"}, {"severity": "info", "msg": "\"Ignoring @PropertySource annotation on [\" + sourceClass.getMetadata().getClassName() + \"]. Reason: Environment must implement ConfigurableEnvironment\"", "lineLoc": 274, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java"}, {"severity": "debug", "msg": "\"Failed to read class file via ASM for determining @Bean method order\",ex", "lineLoc": 418, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java"}, {"severity": "info", "msg": "\"Properties location [\" + location + \"] not resolvable: \" + ex.getMessage()", "lineLoc": 458, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java"}, {"severity": "debug", "msg": "\"Failed to resolve member class [\" + memberClassName + \"] - not considering it as a configuration class candidate\"", "lineLoc": 986, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java"}, {"severity": "debug", "msg": "\"Bean definition has already been processed as a configuration class: \" + beanDef", "lineLoc": 270, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java"}, {"severity": "info", "msg": "\"Cannot enhance @Configuration bean definition '\" + beanName + \"' since its singleton instance has been created too early. The typical cause \" + \"is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor \" + \"return type: Consider declaring such methods as 'static'.\"", "lineLoc": 380, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java"}, {"severity": "trace", "msg": "String.format(\"Replacing bean definition '%s' existing class '%s' with \" + \"enhanced class '%s'\",entry.getKey(),configClass.getName(),enhancedClass.getName())", "lineLoc": 405, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java"}, {"severity": "debug", "msg": "\"Could not find class file for introspecting configuration annotations: \" + className,ex", "lineLoc": 108, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassUtils.java"}, {"severity": "debug", "msg": "\"Failed to introspect @Bean methods on class [\" + metadata.getClassName() + \"]: \" + ex", "lineLoc": 183, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassUtils.java"}, {"severity": "trace", "msg": "\"No result object given - no result to handle\"", "lineLoc": 184, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java"}, {"severity": "debug", "msg": "\"Could not resolve target class for bean with name '\" + beanName + \"'\",ex", "lineLoc": 113, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java"}, {"severity": "debug", "msg": "\"Could not resolve target bean for scoped proxy '\" + beanName + \"'\",ex", "lineLoc": 128, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java"}, {"severity": "debug", "msg": "\"Could not resolve methods for bean with name '\" + beanName + \"'\",ex", "lineLoc": 155, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java"}, {"severity": "trace", "msg": "\"No @EventListener annotations found on bean class: \" + targetType.getName()", "lineLoc": 161, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java"}, {"severity": "debug", "msg": "annotatedMethods.size() + \" @EventListener methods processed on bean '\" + beanName + \"': \" + annotatedMethods", "lineLoc": 185, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/event/EventListenerMethodProcessor.java"}, {"severity": "debug", "msg": "\"Non-matching event type for listener: \" + listener,ex", "lineLoc": 181, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/event/SimpleApplicationEventMulticaster.java"}, {"severity": "debug", "msg": "\"Loaded \" + result.size() + \"] index(es)\"", "lineLoc": 110, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/index/CandidateComponentsIndexLoader.java"}, {"severity": "warn", "msg": "\"Exception encountered during context initialization - \" + \"cancelling refresh attempt: \" + ex", "lineLoc": 557, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"Refreshing \" + this", "lineLoc": 591, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "debug", "msg": "\"Refreshing \" + getDisplayName()", "lineLoc": 594, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"Using MessageSource [\" + this.messageSource + \"]\"", "lineLoc": 742, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"No '\" + MESSAGE_SOURCE_BEAN_NAME + \"' bean, using [\" + this.messageSource + \"]\"", "lineLoc": 752, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"Using ApplicationEventMulticaster [\" + this.applicationEventMulticaster + \"]\"", "lineLoc": 768, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"No '\" + APPLICATION_EVENT_MULTICASTER_BEAN_NAME + \"' bean, using \" + \"[\" + this.applicationEventMulticaster.getClass().getSimpleName() + \"]\"", "lineLoc": 775, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"Using LifecycleProcessor [\" + this.lifecycleProcessor + \"]\"", "lineLoc": 792, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"No '\" + LIFECYCLE_PROCESSOR_BEAN_NAME + \"' bean, using \" + \"[\" + this.lifecycleProcessor.getClass().getSimpleName() + \"]\"", "lineLoc": 801, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "debug", "msg": "\"Closing \" + this", "lineLoc": 1002, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "warn", "msg": "\"Exception thrown from ApplicationListener handling ContextClosedEvent\",ex", "lineLoc": 1012, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "warn", "msg": "\"Exception thrown from LifecycleProcessor on context close\",ex", "lineLoc": 1021, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"}, {"severity": "trace", "msg": "\"Starting bean '\" + beanName + \"' of type [\" + bean.getClass().getName() + \"]\"", "lineLoc": 179, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "debug", "msg": "\"Successfully started bean '\" + beanName + \"'\"", "lineLoc": 188, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "trace", "msg": "\"Asking bean '\" + beanName + \"' of type [\" + bean.getClass().getName() + \"] to stop\"", "lineLoc": 234, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "debug", "msg": "\"Bean '\" + beanName + \"' completed its stop procedure\"", "lineLoc": 242, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "trace", "msg": "\"Stopping bean '\" + beanName + \"' of type [\" + bean.getClass().getName() + \"]\"", "lineLoc": 248, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "debug", "msg": "\"Successfully stopped bean '\" + beanName + \"'\"", "lineLoc": 253, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "warn", "msg": "\"Failed to stop bean '\" + beanName + \"'\",ex", "lineLoc": 264, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "debug", "msg": "\"Starting beans in phase \" + this.phase", "lineLoc": 356, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "debug", "msg": "\"Stopping beans in phase \" + this.phase", "lineLoc": 369, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "info", "msg": "\"Failed to shut down \" + countDownBeanNames.size() + \" bean\" + (countDownBeanNames.size()GT1QUES\"s\":\"\") + \" with phase value \" + this.phase + \" within timeout of \" + this.timeout + \": \" + countDownBeanNames", "lineLoc": 387, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"}, {"severity": "info", "msg": "\"Bean '\" + beanName + \"' of type [\" + bean.getClass().getName() + \"] is not eligible for getting processed by all BeanPostProcessors \" + \"(for example: not eligible for auto-proxying)\"", "lineLoc": 330, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/PostProcessorRegistrationDelegate.java"}, {"severity": "debug", "msg": "\"Re-caching properties for filename [\" + filename + \"] - file hasn't been modified\"", "lineLoc": 415, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "debug", "msg": "resource + \" could not be resolved in the file system - assuming that it hasn't changed\",ex", "lineLoc": 424, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "warn", "msg": "\"Could not parse properties file [\" + resource.getFilename() + \"]\",ex", "lineLoc": 435, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "debug", "msg": "\"No properties file found for [\" + filename + \"] - neither plain properties nor XML\"", "lineLoc": 445, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "debug", "msg": "\"Loading properties [\" + resource.getFilename() + \"]\"", "lineLoc": 469, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "debug", "msg": "\"Loading properties [\" + resource.getFilename() + \"] with encoding '\" + encoding + \"'\"", "lineLoc": 483, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "debug", "msg": "\"Loading properties [\" + resource.getFilename() + \"]\"", "lineLoc": 489, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "debug", "msg": "\"Clearing entire resource bundle cache\"", "lineLoc": 517, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ReloadableResourceBundleMessageSource.java"}, {"severity": "warn", "msg": "\"ResourceBundle [\" + basename + \"] not found for MessageSource: \" + ex.getMessage()", "lineLoc": 223, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ResourceBundleMessageSource.java"}, {"severity": "info", "msg": "\"ResourceBundleMessageSource is configured to read resources with encoding '\" + encoding + \"' but ResourceBundle.Control not supported in current system environment: \" + ex.getMessage() + \" - falling back to plain ResourceBundle.getBundle retrieval with the \" + \"platform default encoding. Consider setting the 'defaultEncoding' property to 'null' \" + \"for participating in the platform default and therefore avoiding this log message.\"", "lineLoc": 255, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/ResourceBundleMessageSource.java"}, {"severity": "warn", "msg": "\"SimpleThreadScope does not support destruction callbacks. \" + \"Consider using RequestScope in a web environment.\"", "lineLoc": 88, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/SimpleThreadScope.java"}, {"severity": "debug", "msg": "\"Added message [\" + msg + \"] for code [\" + code + \"] and Locale [\" + locale + \"]\"", "lineLoc": 80, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/support/StaticMessageSource.java"}, {"severity": "debug", "msg": "\"Determined server-specific load-time weaver: \" + serverSpecificLoadTimeWeaver.getClass().getName()", "lineLoc": 79, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.java"}, {"severity": "debug", "msg": "\"Found Spring's JVM agent for instrumentation\"", "lineLoc": 85, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.java"}, {"severity": "debug", "msg": "\"Using reflective load-time weaver for class loader: \" + this.loadTimeWeaver.getInstrumentableClassLoader().getClass().getName()", "lineLoc": 92, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.java"}, {"severity": "info", "msg": "\"Could not obtain server-specific LoadTimeWeaver: \" + ex.getMessage()", "lineLoc": 131, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.java"}, {"severity": "debug", "msg": "\"Removing all registered transformers for class loader: \" + this.loadTimeWeaver.getInstrumentableClassLoader().getClass().getName()", "lineLoc": 141, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/context/weaving/DefaultContextLoadTimeWeaver.java"}, {"severity": "debug", "msg": "\"Could not connect to remote EJB [\" + getJndiName() + \"] - retrying\",ex", "lineLoc": 131, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.java"}, {"severity": "warn", "msg": "\"Could not connect to remote EJB [\" + getJndiName() + \"] - retrying\"", "lineLoc": 134, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.java"}, {"severity": "debug", "msg": "\"Trying to create reference to remote EJB\"", "lineLoc": 186, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.java"}, {"severity": "debug", "msg": "\"Obtained reference to remote EJB: \" + ejbInstance", "lineLoc": 190, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.java"}, {"severity": "warn", "msg": "\"Could not invoke 'remove' on remote EJB proxy\",ex", "lineLoc": 207, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/AbstractRemoteSlsbInvokerInterceptor.java"}, {"severity": "debug", "msg": "\"Method of local EJB [\" + getJndiName() + \"] threw exception\",targetEx", "lineLoc": 84, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/LocalSlsbInvokerInterceptor.java"}, {"severity": "debug", "msg": "\"Trying to create reference to local EJB\"", "lineLoc": 153, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/LocalSlsbInvokerInterceptor.java"}, {"severity": "debug", "msg": "\"Obtained reference to local EJB: \" + ejbInstance", "lineLoc": 157, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/LocalSlsbInvokerInterceptor.java"}, {"severity": "warn", "msg": "\"Could not invoke 'remove' on local EJB proxy\",ex", "lineLoc": 173, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ejb/access/LocalSlsbInvokerInterceptor.java"}, {"severity": "debug", "msg": "\"The ClassLoader [\" + classLoader.getClass().getName() + \"] does NOT provide a \" + \"'getThrowawayClassLoader()' method; SimpleThrowawayClassLoader will be used instead.\"", "lineLoc": 116, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/instrument/classloading/ReflectiveLoadTimeWeaver.java"}, {"severity": "debug", "msg": "\"Connecting to remote MBeanServer at URL [\" + serviceUrl + \"]\"", "lineLoc": 59, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java"}, {"severity": "debug", "msg": "\"Attempting to locate local MBeanServer\"", "lineLoc": 70, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java"}, {"severity": "debug", "msg": "\"Could not close JMX connector\",ex", "lineLoc": 84, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/access/ConnectorDelegate.java"}, {"severity": "warn", "msg": "msg,ex", "lineLoc": 390, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java"}, {"severity": "warn", "msg": "msg", "lineLoc": 393, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/access/MBeanClientInterceptor.java"}, {"severity": "debug", "msg": "\"Registering NotificationListener for MBeans \" + Arrays.asList(this.actualObjectNames)", "lineLoc": 145, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/access/NotificationListenerRegistrar.java"}, {"severity": "debug", "msg": "\"Unable to unregister NotificationListener\",ex", "lineLoc": 176, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/access/NotificationListenerRegistrar.java"}, {"severity": "debug", "msg": "\"MBeanExporter not running in a ListableBeanFactory: autodetection of MBeans not available.\"", "lineLoc": 408, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Registering beans for JMX exposure on startup\"", "lineLoc": 433, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Unregistering JMX-exposed beans on shutdown\"", "lineLoc": 451, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Located MBean '\" + beanKey + \"': registering with JMX server as MBean [\" + objectName + \"]\"", "lineLoc": 668, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Located managed bean '\" + beanKey + \"': registering with JMX server as MBean [\" + objectName + \"]\"", "lineLoc": 675, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Located MBean '\" + beanKey + \"': registering with JMX server as lazy-init MBean [\" + objectName + \"]\"", "lineLoc": 711, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Located simple bean '\" + beanKey + \"': registering with JMX server as lazy-init MBean [\" + objectName + \"]\"", "lineLoc": 728, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "info", "msg": "\"Bean with key '\" + beanKey + \"' has been registered as an MBean but has no exposed attributes or operations\"", "lineLoc": 850, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Bean with name '\" + beanName + \"' has been autodetected for JMX exposure\"", "lineLoc": 895, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "trace", "msg": "\"Bean with name '\" + beanName + \"' is already registered for JMX exposure\"", "lineLoc": 900, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Unable to unregister NotificationListener\",ex", "lineLoc": 992, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "info", "msg": "\"Failed to retrieve target for JMX-exposed bean [\" + this.objectName + \"]: \" + ex", "lineLoc": 1107, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/MBeanExporter.java"}, {"severity": "debug", "msg": "\"Loading JMX object name mappings file from \" + location", "lineLoc": 122, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/export/naming/KeyNamingStrategy.java"}, {"severity": "info", "msg": "\"JMX connector server started: \" + this.connectorServer", "lineLoc": 196, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/ConnectorServerFactoryBean.java"}, {"severity": "info", "msg": "\"Stopping JMX connector server: \" + this.connectorServer", "lineLoc": 235, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/ConnectorServerFactoryBean.java"}, {"severity": "info", "msg": "\"Found more than one MBeanServer instance\" + (agentIdBANGEQnullQUES\" with agent id [\" + agentId + \"]\":\"\") + \". Returning first from list.\"", "lineLoc": 100, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java"}, {"severity": "debug", "msg": "\"Found MBeanServer: \" + server", "lineLoc": 126, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/JmxUtils.java"}, {"severity": "debug", "msg": "\"Ignoring existing MBean at [\" + objectName + \"]\"", "lineLoc": 142, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java"}, {"severity": "debug", "msg": "\"Replacing existing MBean at [\" + objectName + \"]\"", "lineLoc": 148, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java"}, {"severity": "info", "msg": "\"Unable to replace existing MBean at [\" + objectName + \"]\",ex2", "lineLoc": 155, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java"}, {"severity": "debug", "msg": "\"Unregistering JMX-exposed beans\"", "lineLoc": 185, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java"}, {"severity": "info", "msg": "\"Could not unregister MBean [\" + objectName + \"] as said MBean \" + \"is not registered (perhaps already unregistered by an external process)\"", "lineLoc": 210, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java"}, {"severity": "info", "msg": "\"Could not unregister MBean [\" + objectName + \"]\",ex", "lineLoc": 217, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/MBeanRegistrationSupport.java"}, {"severity": "debug", "msg": "\"No existing MBeanServer found - creating new one\"", "lineLoc": 138, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jmx/support/MBeanServerFactoryBean.java"}, {"severity": "debug", "msg": "\"Converted JNDI name [\" + convertedName + \"] not found - trying original name [\" + jndiName + \"]. \" + ex", "lineLoc": 102, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiLocatorSupport.java"}, {"severity": "debug", "msg": "\"Located object with JNDI name [\" + convertedName + \"]\"", "lineLoc": 112, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiLocatorSupport.java"}, {"severity": "trace", "msg": "\"JNDI lookup failed - returning specified default object instead\",ex", "lineLoc": 248, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiObjectFactoryBean.java"}, {"severity": "debug", "msg": "\"JNDI lookup failed - returning specified default object instead: \" + ex", "lineLoc": 251, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiObjectFactoryBean.java"}, {"severity": "debug", "msg": "\"JNDI lookup for name [\" + name + \"] returned: [\" + value + \"]\"", "lineLoc": 95, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiPropertySource.java"}, {"severity": "debug", "msg": "\"JNDI lookup for name [\" + name + \"] threw NamingException \" + \"with message: \" + ex.getMessage() + \". Returning null.\"", "lineLoc": 101, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiPropertySource.java"}, {"severity": "debug", "msg": "\"Could not close JNDI InitialContext\",ex", "lineLoc": 121, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiTemplate.java"}, {"severity": "debug", "msg": "\"Looking up JNDI object with name [\" + name + \"]\"", "lineLoc": 154, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiTemplate.java"}, {"severity": "debug", "msg": "\"Binding JNDI object with name [\" + name + \"]\"", "lineLoc": 193, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiTemplate.java"}, {"severity": "debug", "msg": "\"Rebinding JNDI object with name [\" + name + \"]\"", "lineLoc": 210, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiTemplate.java"}, {"severity": "debug", "msg": "\"Unbinding JNDI object with name [\" + name + \"]\"", "lineLoc": 225, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/jndi/JndiTemplate.java"}, {"severity": "debug", "msg": "\"JNDI RMI object [\" + getJndiName() + \"] is an RMI invoker\"", "lineLoc": 197, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java"}, {"severity": "debug", "msg": "\"Using service interface [\" + getServiceInterface().getName() + \"] for JNDI RMI object [\" + getJndiName() + \"] - \" + (BANGisImplQUES\"not \":\"\") + \"directly implemented\"", "lineLoc": 201, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java"}, {"severity": "debug", "msg": "\"Could not connect to RMI service [\" + getJndiName() + \"] - retrying\",ex", "lineLoc": 322, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java"}, {"severity": "info", "msg": "\"Could not connect to RMI service [\" + getJndiName() + \"] - retrying\"", "lineLoc": 325, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiClientInterceptor.java"}, {"severity": "debug", "msg": "\"Binding RMI service to JNDI location [\" + this.jndiName + \"]\"", "lineLoc": 155, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Unbinding RMI service from JNDI location [\" + this.jndiName + \"]\"", "lineLoc": 166, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java"}, {"severity": "debug", "msg": "\"RMI service [\" + getService() + \"] is an RMI invoker\"", "lineLoc": 59, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiBasedExporter.java"}, {"severity": "debug", "msg": "\"RMI stub [\" + getServiceUrl() + \"] is an RMI invoker\"", "lineLoc": 151, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java"}, {"severity": "debug", "msg": "\"Using service interface [\" + getServiceInterface().getName() + \"] for RMI stub [\" + getServiceUrl() + \"] - \" + (BANGisImplQUES\"not \":\"\") + \"directly implemented\"", "lineLoc": 155, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java"}, {"severity": "debug", "msg": "\"Located RMI stub with URL [\" + getServiceUrl() + \"]\"", "lineLoc": 204, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java"}, {"severity": "warn", "msg": "msg,ex", "lineLoc": 304, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java"}, {"severity": "warn", "msg": "msg", "lineLoc": 307, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptor.java"}, {"severity": "debug", "msg": "message,ex", "lineLoc": 103, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptorUtils.java"}, {"severity": "debug", "msg": "\"Remote service [\" + serviceName + \"] threw exception\",ex", "lineLoc": 141, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiClientInterceptorUtils.java"}, {"severity": "debug", "msg": "\"Looking for RMI registry at port '\" + registryPort + \"' of host [\" + registryHost + \"]\"", "lineLoc": 187, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Creating new RMI registry\"", "lineLoc": 213, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Looking for RMI registry at port '\" + registryPort + \"', using custom socket factory\"", "lineLoc": 218, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "trace", "msg": "\"RMI registry access threw exception\",ex", "lineLoc": 228, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Could not detect RMI registry - creating new one\"", "lineLoc": 229, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Creating new RMI registry\"", "lineLoc": 250, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Looking for RMI registry at port '\" + registryPort + \"'\"", "lineLoc": 255, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "trace", "msg": "\"RMI registry access threw exception\",ex", "lineLoc": 265, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Could not detect RMI registry - creating new one\"", "lineLoc": 266, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Unexporting RMI registry\"", "lineLoc": 310, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiRegistryFactoryBean.java"}, {"severity": "debug", "msg": "\"Binding service '\" + this.serviceName + \"' to RMI registry: \" + this.registry", "lineLoc": 277, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Looking for RMI registry at port '\" + registryPort + \"' of host [\" + registryHost + \"]\"", "lineLoc": 329, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Creating new RMI registry\"", "lineLoc": 355, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Looking for RMI registry at port '\" + registryPort + \"', using custom socket factory\"", "lineLoc": 359, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "trace", "msg": "\"RMI registry access threw exception\",ex", "lineLoc": 369, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Could not detect RMI registry - creating new one\"", "lineLoc": 370, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Creating new RMI registry\"", "lineLoc": 390, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Looking for RMI registry at port '\" + registryPort + \"'\"", "lineLoc": 394, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "trace", "msg": "\"RMI registry access threw exception\",ex", "lineLoc": 404, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Could not detect RMI registry - creating new one\"", "lineLoc": 405, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "debug", "msg": "\"Unbinding RMI service '\" + this.serviceName + \"' from registry\" + (this.createdRegistryQUES(\" at port '\" + this.registryPort + \"'\"):\"\")", "lineLoc": 431, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "info", "msg": "\"RMI service '\" + this.serviceName + \"' is not bound to registry\" + (this.createdRegistryQUES(\" at port '\" + this.registryPort + \"' anymore\"):\"\"),ex", "lineLoc": 439, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "info", "msg": "\"RMI object for service '\" + this.serviceName + \"' is not exported anymore\",ex", "lineLoc": 457, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/rmi/RmiServiceExporter.java"}, {"severity": "trace", "msg": "\"Executing \" + invocation", "lineLoc": 75, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationBasedExporter.java"}, {"severity": "debug", "msg": "\"Could not find target method for \" + invocation,ex", "lineLoc": 82, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationBasedExporter.java"}, {"severity": "debug", "msg": "\"Could not access target method for \" + invocation,ex", "lineLoc": 88, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationBasedExporter.java"}, {"severity": "debug", "msg": "\"Target method failed for \" + invocation,ex.getTargetException()", "lineLoc": 94, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationBasedExporter.java"}, {"severity": "debug", "msg": "\"Incoming \" + this.exporterNameClause + \"remote call: \" + ClassUtils.getQualifiedMethodName(method)", "lineLoc": 74, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.java"}, {"severity": "debug", "msg": "\"Finished processing of \" + this.exporterNameClause + \"remote call: \" + ClassUtils.getQualifiedMethodName(method)", "lineLoc": 80, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.java"}, {"severity": "warn", "msg": "\"Processing of \" + this.exporterNameClause + \"remote call resulted in fatal exception: \" + ClassUtils.getQualifiedMethodName(method),ex", "lineLoc": 88, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.java"}, {"severity": "info", "msg": "\"Processing of \" + this.exporterNameClause + \"remote call resulted in exception: \" + ClassUtils.getQualifiedMethodName(method),ex", "lineLoc": 94, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/RemoteInvocationTraceInterceptor.java"}, {"severity": "info", "msg": "\"Starting HttpServer at address \" + address", "lineLoc": 168, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/SimpleHttpServerFactoryBean.java"}, {"severity": "info", "msg": "\"Stopping HttpServer\"", "lineLoc": 190, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/remoting/support/SimpleHttpServerFactoryBean.java"}, {"severity": "trace", "msg": "\"Could not find unique TaskScheduler bean\",ex", "lineLoc": 257, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "info", "msg": "\"More than one TaskScheduler bean exists within the context, and \" + \"none is named 'taskScheduler'. Mark one of them as primary or name it 'taskScheduler' \" + \"(possibly as an alias); or implement the SchedulingConfigurer interface and call \" + \"ScheduledTaskRegistrar#setScheduler explicitly within the configureTasks() callback: \" + ex.getBeanNamesFound()", "lineLoc": 263, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "trace", "msg": "\"Could not find default TaskScheduler bean\",ex", "lineLoc": 272, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "trace", "msg": "\"Could not find unique ScheduledExecutorService bean\",ex2", "lineLoc": 278, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "info", "msg": "\"More than one ScheduledExecutorService bean exists within the context, and \" + \"none is named 'taskScheduler'. Mark one of them as primary or name it 'taskScheduler' \" + \"(possibly as an alias); or implement the SchedulingConfigurer interface and call \" + \"ScheduledTaskRegistrar#setScheduler explicitly within the configureTasks() callback: \" + ex2.getBeanNamesFound()", "lineLoc": 284, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "trace", "msg": "\"Could not find default ScheduledExecutorService bean\",ex2", "lineLoc": 293, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "trace", "msg": "\"No @Scheduled annotations found on bean class: \" + targetClass", "lineLoc": 353, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "trace", "msg": "annotatedMethods.size() + \" @Scheduled methods processed on bean '\" + beanName + \"': \" + annotatedMethods", "lineLoc": 361, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"}, {"severity": "trace", "msg": "\"Failed to retrieve [\" + this.jndiName + \"] from JNDI\",ex", "lineLoc": 107, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/DefaultManagedAwareThreadFactory.java"}, {"severity": "info", "msg": "\"Could not find default managed thread factory in JNDI - \" + \"proceeding with default local thread factory\"", "lineLoc": 109, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/DefaultManagedAwareThreadFactory.java"}, {"severity": "info", "msg": "\"Initializing ExecutorService\" + (this.beanNameBANGEQnullQUES\" '\" + this.beanName + \"'\":\"\")", "lineLoc": 171, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java"}, {"severity": "info", "msg": "\"Shutting down ExecutorService\" + (this.beanNameBANGEQnullQUES\" '\" + this.beanName + \"'\":\"\")", "lineLoc": 208, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java"}, {"severity": "warn", "msg": "\"Timed out while waiting for executor\" + (this.beanNameBANGEQnullQUES\" '\" + this.beanName + \"'\":\"\") + \" to terminate\"", "lineLoc": 246, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java"}, {"severity": "warn", "msg": "\"Interrupted while waiting for executor\" + (this.beanNameBANGEQnullQUES\" '\" + this.beanName + \"'\":\"\") + \" to terminate\"", "lineLoc": 253, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java"}, {"severity": "debug", "msg": "\"Could not apply remove-on-cancel policy - not a ScheduledThreadPoolExecutor\"", "lineLoc": 160, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/ScheduledExecutorFactoryBean.java"}, {"severity": "debug", "msg": "\"Could not apply remove-on-cancel policy - not a ScheduledThreadPoolExecutor\"", "lineLoc": 102, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java"}, {"severity": "debug", "msg": "\"Could not apply remove-on-cancel policy - not a ScheduledThreadPoolExecutor\"", "lineLoc": 125, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java"}, {"severity": "error", "msg": "getInvocationFailureMessage(),ex.getTargetException()", "lineLoc": 72, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/support/MethodInvokingRunnable.java"}, {"severity": "error", "msg": "getInvocationFailureMessage(),ex", "lineLoc": 76, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/support/MethodInvokingRunnable.java"}, {"severity": "error", "msg": "\"Unexpected error occurred in scheduled task.\",t", "lineLoc": 96, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scheduling/support/TaskUtils.java"}, {"severity": "debug", "msg": "getResource() + \" could not be resolved in the file system - \" + \"current timestamp not available for script modification check\",ex", "lineLoc": 123, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scripting/support/ResourceScriptSource.java"}, {"severity": "trace", "msg": "\"Could not determine scripted object type for bean '\" + beanName + \"': \" + ex.getMessage()", "lineLoc": 287, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java"}, {"severity": "debug", "msg": "\"Could not determine scripted object type for bean '\" + beanName + \"'\",ex", "lineLoc": 293, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java"}, {"severity": "debug", "msg": "\"Theme created: name '\" + themeName + \"', basename [\" + basename + \"]\"", "lineLoc": 152, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ui/context/support/ResourceBundleThemeSource.java"}, {"severity": "debug", "msg": "\"Using ThemeSource [\" + themeSource + \"]\"", "lineLoc": 69, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ui/context/support/UiApplicationContextUtils.java"}, {"severity": "debug", "msg": "\"Unable to locate ThemeSource with name '\" + THEME_SOURCE_BEAN_NAME + \"': using default [\" + themeSource + \"]\"", "lineLoc": 85, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/ui/context/support/UiApplicationContextUtils.java"}, {"severity": "debug", "msg": "\"DataBinder requires binding of required fields [\" + StringUtils.arrayToCommaDelimitedString(requiredFields) + \"]\"", "lineLoc": 478, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/validation/DataBinder.java"}, {"severity": "debug", "msg": "\"Field [\" + field + \"] has been removed from PropertyValues \" + \"and will not be bound, because it has not been found in the list of allowed fields\"", "lineLoc": 762, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/validation/DataBinder.java"}, {"severity": "debug", "msg": "\"Invoking validator [\" + validator + \"]\"", "lineLoc": 78, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java"}, {"severity": "debug", "msg": "\"Validator found \" + errors.getErrorCount() + \" errors\"", "lineLoc": 94, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java"}, {"severity": "debug", "msg": "\"Validator found no errors\"", "lineLoc": 97, "fileLoc": "spring-framework/spring-context/src/main/java/org/springframework/validation/ValidationUtils.java"}, {"severity": "debug", "msg": "\"Using default EhCache CacheManager for cache region '\" + cacheName + \"'\"", "lineLoc": 219, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java"}, {"severity": "debug", "msg": "\"Using existing EhCache cache region '\" + cacheName + \"'\"", "lineLoc": 231, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java"}, {"severity": "debug", "msg": "\"Creating new EhCache cache region '\" + cacheName + \"'\"", "lineLoc": 237, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheFactoryBean.java"}, {"severity": "info", "msg": "\"Initializing EhCache CacheManager\" + (this.cacheManagerNameBANGEQnullQUES\" '\" + this.cacheManagerName + \"'\":\"\")", "lineLoc": 134, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java"}, {"severity": "info", "msg": "\"Shutting down EhCache CacheManager\" + (this.cacheManagerNameBANGEQnullQUES\" '\" + this.cacheManagerName + \"'\":\"\")", "lineLoc": 192, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/ehcache/EhCacheManagerFactoryBean.java"}, {"severity": "debug", "msg": "\"Adding cacheable method '\" + method.getName() + \"' with operation: \" + operation", "lineLoc": 69, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractFallbackJCacheOperationSource.java"}, {"severity": "trace", "msg": "\"Computed cache key \" + key + \" for operation \" + context.getOperation()", "lineLoc": 52, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/AbstractKeyCacheInterceptor.java"}, {"severity": "trace", "msg": "\"Invalidating entire cache '\" + cache.getName() + \"' for operation \" + context.getOperation()", "lineLoc": 70, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveAllInterceptor.java"}, {"severity": "trace", "msg": "\"Invalidating key [\" + key + \"] on cache '\" + cache.getName() + \"' for operation \" + context.getOperation()", "lineLoc": 71, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CacheRemoveEntryInterceptor.java"}, {"severity": "debug", "msg": "\"No bean of type [\" + type.getName() + \"] found in application context\",ex", "lineLoc": 185, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/DefaultJCacheOperationSource.java"}, {"severity": "debug", "msg": "\"Could not cancel CommonJ Timer\",ex", "lineLoc": 151, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/commonj/TimerManagerFactoryBean.java"}, {"severity": "error", "msg": "\"Task has been rejected by TaskExecutor\",ex", "lineLoc": 84, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool.java"}, {"severity": "warn", "msg": "\"Could not load \" + resource", "lineLoc": 100, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.java"}, {"severity": "warn", "msg": "\"Could not load \" + resource", "lineLoc": 121, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper.java"}, {"severity": "error", "msg": "\"Job registration exception overridden by rollback exception\",ex", "lineLoc": 256, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerAccessor.java"}, {"severity": "debug", "msg": "\"Unexpectedly encountered existing trigger on rescheduling, assumably due to \" + \"cluster race condition: \" + ex.getMessage() + \" - can safely be ignored\"", "lineLoc": 318, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerAccessor.java"}, {"severity": "debug", "msg": "\"Unexpectedly encountered existing trigger on job scheduling, assumably due to \" + \"cluster race condition: \" + ex.getMessage() + \" - can safely be ignored\"", "lineLoc": 336, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerAccessor.java"}, {"severity": "debug", "msg": "\"Scheduler shutdown exception after registration failure\",ex2", "lineLoc": 511, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java"}, {"severity": "debug", "msg": "\"Loading Quartz config from [\" + this.configLocation + \"]\"", "lineLoc": 565, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java"}, {"severity": "info", "msg": "\"Starting Quartz Scheduler now\"", "lineLoc": 726, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java"}, {"severity": "info", "msg": "\"Will start Quartz Scheduler [\" + scheduler.getSchedulerName() + \"] in \" + startupDelay + \" seconds\"", "lineLoc": 731, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java"}, {"severity": "info", "msg": "\"Starting Quartz Scheduler now, after delay of \" + startupDelay + \" seconds\"", "lineLoc": 747, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java"}, {"severity": "info", "msg": "\"Shutting down Quartz Scheduler\"", "lineLoc": 844, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/scheduling/quartz/SchedulerFactoryBean.java"}, {"severity": "debug", "msg": "\"Loading FreeMarker configuration from \" + this.configLocation", "lineLoc": 263, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.java"}, {"severity": "debug", "msg": "\"Template loader path [\" + path + \"] resolved to file path [\" + file.getAbsolutePath() + \"]\"", "lineLoc": 347, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.java"}, {"severity": "debug", "msg": "\"Cannot resolve template loader path [\" + templateLoaderPath + \"] to [java.io.File]: using SpringTemplateLoader as fallback\",ex", "lineLoc": 354, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.java"}, {"severity": "debug", "msg": "\"No FreeMarker TemplateLoaders specified\"", "lineLoc": 394, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/FreeMarkerConfigurationFactory.java"}, {"severity": "debug", "msg": "\"SpringTemplateLoader for FreeMarker: using resource loader [\" + this.resourceLoader + \"] and template loader path [\" + this.templateLoaderPath + \"]\"", "lineLoc": 62, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/SpringTemplateLoader.java"}, {"severity": "debug", "msg": "\"Looking for FreeMarker template with name [\" + name + \"]\"", "lineLoc": 72, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/SpringTemplateLoader.java"}, {"severity": "debug", "msg": "\"Could not find FreeMarker template: \" + resource", "lineLoc": 86, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/SpringTemplateLoader.java"}, {"severity": "debug", "msg": "\"Could not obtain last-modified timestamp for FreeMarker template in \" + resource + \": \" + ex", "lineLoc": 100, "fileLoc": "spring-framework/spring-context-support/src/main/java/org/springframework/ui/freemarker/SpringTemplateLoader.java"}, {"severity": "info", "msg": "\"Kotlin reflection implementation not found at runtime, related features won't be available.\"", "lineLoc": 57, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/KotlinDetector.java"}, {"severity": "debug", "msg": "\"Cannot find '.class' file for class [\" + clazz + \"] - unable to determine constructor/method parameter names\"", "lineLoc": 108, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java"}, {"severity": "debug", "msg": "\"Exception thrown while reading '.class' file for class [\" + clazz + \"] - unable to determine constructor/method parameter names\",ex", "lineLoc": 121, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java"}, {"severity": "debug", "msg": "\"ASM ClassReader failed to parse class file [\" + clazz + \"], probably due to a new Java class file version that isn't supported yet \" + \"- unable to determine constructor/method parameter names\",ex", "lineLoc": 127, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/LocalVariableTableParameterNameDiscoverer.java"}, {"severity": "debug", "msg": "\"Alias definition '\" + alias + \"' ignored since it points to same name\"", "lineLoc": 58, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java"}, {"severity": "debug", "msg": "\"Overriding alias '\" + alias + \"' definition for registered name '\" + registeredName + \"' with new target name '\" + name + \"'\"", "lineLoc": 73, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java"}, {"severity": "trace", "msg": "\"Alias definition '\" + alias + \"' registered for name '\" + name + \"'\"", "lineLoc": 80, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java"}, {"severity": "debug", "msg": "\"Found 'spring.properties' file in local classpath\"", "lineLoc": 64, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/SpringProperties.java"}, {"severity": "info", "msg": "\"Could not load 'spring.properties' file from local classpath: \" + ex", "lineLoc": 76, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/SpringProperties.java"}, {"severity": "debug", "msg": "\"Could not retrieve system property '\" + key + \"': \" + ex", "lineLoc": 116, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/SpringProperties.java"}, {"severity": "debug", "msg": "Hints.getLogPrefix(hints) + \"Read \" + result.length + \" bytes\"", "lineLoc": 55, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/ByteArrayDecoder.java"}, {"severity": "debug", "msg": "logPrefix + \"Writing \" + dataBuffer.readableByteCount() + \" bytes\"", "lineLoc": 59, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/ByteArrayEncoder.java"}, {"severity": "debug", "msg": "Hints.getLogPrefix(hints) + \"Read \" + byteCount + \" bytes\"", "lineLoc": 60, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/ByteBufferDecoder.java"}, {"severity": "debug", "msg": "logPrefix + \"Writing \" + dataBuffer.readableByteCount() + \" bytes\"", "lineLoc": 60, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/ByteBufferEncoder.java"}, {"severity": "debug", "msg": "Hints.getLogPrefix(hints) + \"Read \" + buffer.readableByteCount() + \" bytes\"", "lineLoc": 71, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/DataBufferDecoder.java"}, {"severity": "debug", "msg": "logPrefix + \"Writing \" + buffer.readableByteCount() + \" bytes\"", "lineLoc": 60, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/DataBufferEncoder.java"}, {"severity": "debug", "msg": "Hints.getLogPrefix(hints) + \"Read \" + bytes.length + \" bytes\"", "lineLoc": 71, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java"}, {"severity": "debug", "msg": "logPrefix + \"Writing [\" + resource + \"]\"", "lineLoc": 73, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/ResourceEncoder.java"}, {"severity": "debug", "msg": "Hints.getLogPrefix(hints) + \"Writing region \" + position + \"-\" + (position + count) + \" of [\" + resource + \"]\"", "lineLoc": 139, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/codec/ResourceRegionEncoder.java"}, {"severity": "debug", "msg": "\"Activating profiles \" + Arrays.asList(profiles)", "lineLoc": 252, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java"}, {"severity": "debug", "msg": "\"Activating profile '\" + profile + \"'\"", "lineLoc": 266, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java"}, {"severity": "info", "msg": "\"Caught AccessControlException when accessing system property '\" + attributeName + \"'; its value will be returned [null]. Reason: \" + ex.getMessage()", "lineLoc": 401, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java"}, {"severity": "info", "msg": "\"Caught AccessControlException when accessing system environment variable '\" + attributeName + \"'; its value will be returned [null]. Reason: \" + ex.getMessage()", "lineLoc": 430, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/AbstractEnvironment.java"}, {"severity": "trace", "msg": "\"Searching for key '\" + key + \"' in PropertySource '\" + propertySource.getName() + \"'\"", "lineLoc": 82, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/PropertySourcesPropertyResolver.java"}, {"severity": "trace", "msg": "\"Could not find key '\" + key + \"' in any property source\"", "lineLoc": 96, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/PropertySourcesPropertyResolver.java"}, {"severity": "debug", "msg": "\"Found key '\" + key + \"' in PropertySource '\" + propertySource.getName() + \"' with value of type \" + value.getClass().getSimpleName()", "lineLoc": 115, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/PropertySourcesPropertyResolver.java"}, {"severity": "debug", "msg": "\"PropertySource '\" + getName() + \"' does not contain property '\" + name + \"', but found equivalent '\" + actualName + \"'\"", "lineLoc": 95, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/env/SystemEnvironmentPropertySource.java"}, {"severity": "trace", "msg": "\"Found Equinox FileLocator for OSGi bundle URL resolution\"", "lineLoc": 196, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "trace", "msg": "\"Resolved classpath location [\" + location + \"] to resources \" + result", "lineLoc": 323, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Cannot search for matching files underneath [\" + url + \"] because it cannot be converted to a valid 'jar:' URL: \" + ex.getMessage()", "lineLoc": 384, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Cannot introspect jar files since ClassLoader [\" + classLoader + \"] does not support 'getURLs()': \" + ex", "lineLoc": 392, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Cannot introspect jar files in parent ClassLoader since [\" + classLoader + \"] does not support 'getParent()': \" + ex", "lineLoc": 410, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Cannot search for matching files underneath [\" + path + \"] because it cannot be converted to a valid 'jar:' URL: \" + ex.getMessage()", "lineLoc": 444, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Failed to evaluate 'java.class.path' manifest entries: \" + ex", "lineLoc": 452, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "trace", "msg": "\"Resolved location pattern [\" + locationPattern + \"] to resources \" + result", "lineLoc": 517, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Skipping invalid jar classpath entry [\" + urlFile + \"]\"", "lineLoc": 632, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "trace", "msg": "\"Looking for matching resources in jar file [\" + jarFileUrl + \"]\"", "lineLoc": 640, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Cannot search for matching files underneath \" + rootDirResource + \" in the file system: \" + ex.getMessage()", "lineLoc": 704, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "info", "msg": "\"Failed to resolve \" + rootDirResource + \" in the file system: \" + ex", "lineLoc": 711, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "trace", "msg": "\"Looking for matching resources in directory tree [\" + rootDir.getPath() + \"]\"", "lineLoc": 730, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Skipping [\" + rootDir.getAbsolutePath() + \"] because it does not exist\"", "lineLoc": 753, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "info", "msg": "\"Skipping [\" + rootDir.getAbsolutePath() + \"] because it does not denote a directory\"", "lineLoc": 760, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "info", "msg": "\"Skipping search for matching files underneath directory [\" + rootDir.getAbsolutePath() + \"] because the application is not allowed to read the directory\"", "lineLoc": 766, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "trace", "msg": "\"Searching directory [\" + dir.getAbsolutePath() + \"] for files matching pattern [\" + fullPattern + \"]\"", "lineLoc": 792, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Skipping subdirectory [\" + dir.getAbsolutePath() + \"] because the application is not allowed to read the directory\"", "lineLoc": 800, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "info", "msg": "\"Could not retrieve contents of directory [\" + dir.getAbsolutePath() + \"]\"", "lineLoc": 825, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"}, {"severity": "trace", "msg": "\"Loading properties file from \" + location", "lineLoc": 178, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PropertiesLoaderSupport.java"}, {"severity": "debug", "msg": "\"Properties resource not found: \" + ex.getMessage()", "lineLoc": 187, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/PropertiesLoaderSupport.java"}, {"severity": "debug", "msg": "\"Could not retrieve resources for pattern '\" + pattern + \"'\",ex", "lineLoc": 149, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/ResourceArrayPropertyEditor.java"}, {"severity": "trace", "msg": "\"Loaded [\" + factoryClass.getName() + \"] names: \" + factoryNames", "lineLoc": 100, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java"}, {"severity": "trace", "msg": "logMessage", "lineLoc": 87, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/log/LogFormatUtils.java"}, {"severity": "debug", "msg": "logMessage", "lineLoc": 90, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/log/LogFormatUtils.java"}, {"severity": "debug", "msg": "\"Failed to classload enum type while reading annotation metadata\",ex", "lineLoc": 94, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/type/classreading/AbstractRecursiveAnnotationVisitor.java"}, {"severity": "debug", "msg": "\"Could not access enum value while reading annotation metadata\",ex", "lineLoc": 97, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/type/classreading/AbstractRecursiveAnnotationVisitor.java"}, {"severity": "debug", "msg": "\"Failed to introspect meta-annotations on \" + annotationClass + \": \" + ex", "lineLoc": 94, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java"}, {"severity": "debug", "msg": "\"Failed to introspect meta-annotations on \" + annotation + \": \" + ex", "lineLoc": 119, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/type/classreading/AnnotationAttributesReadingVisitor.java"}, {"severity": "debug", "msg": "\"Could not read super class [\" + metadata.getSuperClassName() + \"] of type-filtered class [\" + metadata.getClassName() + \"]\"", "lineLoc": 88, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter.java"}, {"severity": "debug", "msg": "\"Could not read interface [\" + ifc + \"] for type-filtered class [\" + metadata.getClassName() + \"]\"", "lineLoc": 112, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter.java"}, {"severity": "debug", "msg": "this.buffer.toString()", "lineLoc": 48, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/CommonsLogWriter.java"}, {"severity": "debug", "msg": "this.buffer.toString()", "lineLoc": 61, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/CommonsLogWriter.java"}, {"severity": "debug", "msg": "\"Concurrency count \" + this.concurrencyCount + \" has reached limit \" + this.concurrencyLimit + \" - blocking\"", "lineLoc": 120, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/ConcurrencyThrottleSupport.java"}, {"severity": "debug", "msg": "\"Entering throttle at concurrency count \" + this.concurrencyCount", "lineLoc": 133, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/ConcurrencyThrottleSupport.java"}, {"severity": "debug", "msg": "\"Returning from throttle at concurrency count \" + this.concurrencyCount", "lineLoc": 149, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/ConcurrencyThrottleSupport.java"}, {"severity": "trace", "msg": "\"Resolved placeholder '\" + placeholder + \"'\"", "lineLoc": 163, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/PropertyPlaceholderHelper.java"}, {"severity": "warn", "msg": "\"Ignored XML validation warning\",ex", "lineLoc": 48, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/xml/SimpleSaxErrorHandler.java"}, {"severity": "warn", "msg": "\"XSLT transformation warning\",ex", "lineLoc": 48, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/xml/SimpleTransformErrorListener.java"}, {"severity": "error", "msg": "\"XSLT transformation error\",ex", "lineLoc": 53, "fileLoc": "spring-framework/spring-core/src/main/java/org/springframework/util/xml/SimpleTransformErrorListener.java"}, {"severity": "debug", "msg": "\"SpEL: compiling \" + expression.toStringAST()", "lineLoc": 103, "fileLoc": "spring-framework/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelCompiler.java"}, {"severity": "debug", "msg": "\"SpEL: unable to compile \" + expression.toStringAST()", "lineLoc": 117, "fileLoc": "spring-framework/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelCompiler.java"}, {"severity": "debug", "msg": "expressionToCompile.getClass().getSimpleName() + \".generateCode opted out of compilation: \" + ex.getMessage()", "lineLoc": 164, "fileLoc": "spring-framework/spring-expression/src/main/java/org/springframework/expression/spel/standard/SpelCompiler.java"}, {"severity": "error", "msg": "String.valueOf(message)", "lineLoc": 317, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "error", "msg": "String.valueOf(message),exception", "lineLoc": 323, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "warn", "msg": "String.valueOf(message)", "lineLoc": 329, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "warn", "msg": "String.valueOf(message),exception", "lineLoc": 335, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "info", "msg": "String.valueOf(message)", "lineLoc": 341, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "info", "msg": "String.valueOf(message),exception", "lineLoc": 347, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "debug", "msg": "String.valueOf(message)", "lineLoc": 353, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "debug", "msg": "String.valueOf(message),exception", "lineLoc": 359, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "trace", "msg": "String.valueOf(message)", "lineLoc": 365, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "trace", "msg": "String.valueOf(message),exception", "lineLoc": 371, "fileLoc": "spring-framework/spring-jcl/src/main/java/org/apache/commons/logging/LogAdapter.java"}, {"severity": "debug", "msg": "\"Mapping column '\" + column + \"' to property '\" + pd.getName() + \"' of type '\" + ClassUtils.getQualifiedName(pd.getPropertyType()) + \"'\"", "lineLoc": 301, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java"}, {"severity": "debug", "msg": "\"Intercepted TypeMismatchException for row \" + rowNumber + \" and column '\" + column + \"' with null value when setting property '\" + pd.getName() + \"' of type '\" + ClassUtils.getQualifiedName(pd.getPropertyType()) + \"' on object: \" + mappedObject,ex", "lineLoc": 310, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java"}, {"severity": "debug", "msg": "\"No property found for column '\" + column + \"' mapped to field '\" + field + \"'\"", "lineLoc": 333, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java"}, {"severity": "debug", "msg": "\"Executing SQL statement [\" + sql + \"]\"", "lineLoc": 399, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing SQL query [\" + sql + \"]\"", "lineLoc": 427, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing SQL update [\" + sql + \"]\"", "lineLoc": 502, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"SQL update affected \" + rows + \" rows\"", "lineLoc": 513, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing SQL batch update of \" + sql.length + \" statements\"", "lineLoc": 530, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing prepared SQL statement\" + (sqlBANGEQnullQUES\" [\" + sql + \"]\":\"\")", "lineLoc": 609, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing prepared SQL query\"", "lineLoc": 667, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing prepared SQL update\"", "lineLoc": 860, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"SQL update affected \" + rows + \" rows\"", "lineLoc": 869, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing SQL update and returning generated keys\"", "lineLoc": 891, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"SQL update affected \" + rows + \" rows and returned \" + generatedKeys.size() + \" keys\"", "lineLoc": 909, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing SQL batch update [\" + sql + \"]\"", "lineLoc": 933, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Executing SQL batch update [\" + sql + \"] with a batch size of \" + batchSize", "lineLoc": 1027, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"Sending SQL batch update #\" + batchIdx + \" with \" + items + \" items\"", "lineLoc": 1043, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Calling stored procedure\" + (sqlBANGEQnullQUES\" [\" + sql + \"]\":\"\")", "lineLoc": 1084, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"CallableStatement.execute() returned '\" + retVal + \"'\"", "lineLoc": 1150, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"CallableStatement.getUpdateCount() returned \" + updateCount", "lineLoc": 1151, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"Added default SqlReturnResultSet parameter named '\" + rsName + \"'\"", "lineLoc": 1193, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"Added default SqlReturnUpdateCount parameter named '\" + undeclaredName + \"'\"", "lineLoc": 1211, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"CallableStatement.getUpdateCount() returned \" + updateCount", "lineLoc": 1221, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "trace", "msg": "\"Added default SqlReturnResultSet parameter named '\" + rsName + \"'\"", "lineLoc": 1260, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"SQLWarning ignored: SQL state '\" + warningToLog.getSQLState() + \"', error code '\" + warningToLog.getErrorCode() + \"', message [\" + warningToLog.getMessage() + \"]\"", "lineLoc": 1411, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/JdbcTemplate.java"}, {"severity": "debug", "msg": "\"Overriding type info with runtime info from SqlParameterValue: column index \" + paramIndex + \", SQL type \" + parameterValue.getSqlType() + \", type name \" + parameterValue.getTypeName()", "lineLoc": 209, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"}, {"severity": "trace", "msg": "\"Setting SQL statement parameter value: column index \" + paramIndex + \", parameter value [\" + inValueToUse + \"], value class [\" + (inValueToUseBANGEQnullQUESinValueToUse.getClass().getName():\"null\") + \"], SQL type \" + (sqlTypeToUseEQEQSqlTypeValue.TYPE_UNKNOWNQUES\"unknown\":Integer.toString(sqlTypeToUse))", "lineLoc": 222, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"}, {"severity": "debug", "msg": "\"JDBC getParameterType call failed - using fallback method instead: \" + ex", "lineLoc": 252, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"}, {"severity": "info", "msg": "\"Accessing single output value when procedure has more than one output parameter\"", "lineLoc": 295, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Using declared out parameter '\" + paramName + \"' for function return value\"", "lineLoc": 354, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Using declared parameter for '\" + (paramNameToUseBANGEQnullQUESparamNameToUse:getFunctionReturnName()) + \"'\"", "lineLoc": 405, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Bypassing meta-data return parameter for '\" + paramName + \"'\"", "lineLoc": 416, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Added meta-data return parameter for '\" + returnNameToUse + \"'\"", "lineLoc": 428, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Added meta-data out parameter for '\" + paramNameToUse + \"'\"", "lineLoc": 440, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Added meta-data in-out parameter for '\" + paramNameToUse + \"'\"", "lineLoc": 447, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Added meta-data in parameter for '\" + paramNameToUse + \"'\"", "lineLoc": 456, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Limited set of parameters \" + limitedInParamNamesMap.keySet() + \" skipped parameter for '\" + paramNameToUse + \"'\"", "lineLoc": 461, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "info", "msg": "\"Unable to locate the corresponding parameter value for '\" + parameterName + \"' within the parameter values provided: \" + caseInsensitiveParameterNames.values()", "lineLoc": 523, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Matching \" + caseInsensitiveParameterNames.values() + \" with \" + callParameterNames.values()", "lineLoc": 536, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Found match for \" + matchedParameters.keySet()", "lineLoc": 537, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Unable to locate the corresponding IN or IN-OUT parameter for \\\"\" + parameterName + \"\\\" in the parameters used: \" + callParameterNames.keySet()", "lineLoc": 575, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "info", "msg": "\"Unable to locate the corresponding parameter value for '\" + parameterName + \"' within the parameter values provided: \" + inParameters.keySet()", "lineLoc": 590, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Matching \" + inParameters.keySet() + \" with \" + callParameterNames.values()", "lineLoc": 597, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "debug", "msg": "\"Found match for \" + matchedParameters.keySet()", "lineLoc": 598, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java"}, {"severity": "info", "msg": "databaseProductName + \" is not one of the databases fully supported for function calls \" + \"-- supported are: \" + supportedDatabaseProductsForFunctions", "lineLoc": 80, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java"}, {"severity": "info", "msg": "\"Metadata processing disabled - you must specify all parameters explicitly\"", "lineLoc": 84, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java"}, {"severity": "info", "msg": "databaseProductName + \" is not one of the databases fully supported for procedure calls \" + \"-- supported are: \" + supportedDatabaseProductsForProcedures", "lineLoc": 92, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java"}, {"severity": "info", "msg": "\"Metadata processing disabled - you must specify all parameters explicitly\"", "lineLoc": 96, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java"}, {"severity": "debug", "msg": "\"Using \" + provider.getClass().getName()", "lineLoc": 129, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java"}, {"severity": "debug", "msg": "\"Error retrieving 'DatabaseMetaData.supportsCatalogsInProcedureCalls' - \" + ex.getMessage()", "lineLoc": 45, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Error retrieving 'DatabaseMetaData.supportsSchemasInProcedureCalls' - \" + ex.getMessage()", "lineLoc": 51, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Error retrieving 'DatabaseMetaData.storesUpperCaseIdentifiers' - \" + ex.getMessage()", "lineLoc": 57, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Error retrieving 'DatabaseMetaData.storesLowerCaseIdentifiers' - \" + ex.getMessage()", "lineLoc": 63, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/Db2CallMetaDataProvider.java"}, {"severity": "info", "msg": "\"Overriding supportsGetGeneratedKeys from DatabaseMetaData to 'true'; it was reported as \" + \"'false' by \" + databaseMetaData.getDriverName() + \" \" + databaseMetaData.getDriverVersion()", "lineLoc": 44, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.supportsCatalogsInProcedureCalls': \" + ex.getMessage()", "lineLoc": 80, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.supportsSchemasInProcedureCalls': \" + ex.getMessage()", "lineLoc": 88, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.storesUpperCaseIdentifiers': \" + ex.getMessage()", "lineLoc": 96, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.storesLowerCaseIdentifiers': \" + ex.getMessage()", "lineLoc": 104, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Retrieving meta-data for \" + metaDataCatalogName + / + metaDataSchemaName + / + metaDataProcedureName", "lineLoc": 327, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Oracle JDBC driver did not return procedure/function/signature for '\" + metaDataProcedureName + \"' - assuming a non-exposed synonym\"", "lineLoc": 357, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Skipping meta-data for: \" + columnType + \" \" + procs.getInt(\"DATA_TYPE\") + \" \" + procs.getString(\"TYPE_NAME\") + \" \" + procs.getInt(\"NULLABLE\") + \" (probably a member of a collection)\"", "lineLoc": 378, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Retrieved meta-data: \" + meta.getParameterName() + \" \" + meta.getParameterType() + \" \" + meta.getSqlType() + \" \" + meta.getTypeName() + \" \" + meta.isNullable()", "lineLoc": 389, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error while retrieving meta-data for procedure columns: \" + ex", "lineLoc": 398, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Problem closing ResultSet for procedure column meta-data: \" + ex", "lineLoc": 409, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java"}, {"severity": "debug", "msg": "\"GetGeneratedKeys is supported\"", "lineLoc": 150, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"GetGeneratedKeys is not supported\"", "lineLoc": 154, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.getGeneratedKeys': \" + ex.getMessage()", "lineLoc": 160, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"GeneratedKeysColumnNameArray is not supported for \" + databaseProductName", "lineLoc": 167, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"GeneratedKeysColumnNameArray is supported for \" + databaseProductName", "lineLoc": 174, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.getDatabaseProductName': \" + ex.getMessage()", "lineLoc": 185, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.getDatabaseProductVersion': \" + ex.getMessage()", "lineLoc": 194, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.storesUpperCaseIdentifiers': \" + ex.getMessage()", "lineLoc": 203, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error retrieving 'DatabaseMetaData.storesLowerCaseIdentifiers': \" + ex.getMessage()", "lineLoc": 212, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error while accessing table meta-data results: \" + ex.getMessage()", "lineLoc": 333, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "info", "msg": "\"Unable to locate table meta-data for '\" + tableName + \"': column names must be provided\"", "lineLoc": 342, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Retrieving meta-data for \" + metaDataCatalogName + / + metaDataSchemaName + / + metaDataTableName", "lineLoc": 392, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Overriding meta-data: \" + columnName + \" now NUMERIC instead of DECIMAL\"", "lineLoc": 410, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Retrieved meta-data: \" + meta.getParameterName() + \" \" + meta.getSqlType() + \" \" + meta.isNullable()", "lineLoc": 418, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "warn", "msg": "\"Error while retrieving meta-data for table columns: \" + ex.getMessage()", "lineLoc": 425, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Cannot check default schema - no Connection from DatabaseMetaData\"", "lineLoc": 82, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Exception encountered during default schema lookup\",ex", "lineLoc": 97, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Defaulting to no synonyms in table meta-data lookup\"", "lineLoc": 118, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java"}, {"severity": "info", "msg": "\"Unable to include synonyms in table meta-data lookup - no Connection from DatabaseMetaData\"", "lineLoc": 125, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java"}, {"severity": "info", "msg": "\"Unable to include synonyms in table meta-data lookup - no Oracle Connection: \" + ex", "lineLoc": 136, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Including synonyms in table meta-data lookup\"", "lineLoc": 142, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java"}, {"severity": "debug", "msg": "\"Unable to locate non-key columns for table '\" + getTableName() + \"' so an empty insert statement is generated\"", "lineLoc": 298, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java"}, {"severity": "debug", "msg": "\"Using \" + provider.getClass().getSimpleName()", "lineLoc": 76, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.java"}, {"severity": "debug", "msg": "\"Added declared parameter for [\" + getProcedureName() + \"]: \" + parameter.getName()", "lineLoc": 258, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java"}, {"severity": "debug", "msg": "\"Added row mapper for [\" + getProcedureName() + \"]: \" + parameterName", "lineLoc": 270, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java"}, {"severity": "debug", "msg": "\"SqlCall for \" + (isFunction()QUES\"function\":\"procedure\") + \" [\" + getProcedureName() + \"] compiled\"", "lineLoc": 300, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java"}, {"severity": "debug", "msg": "\"Compiled stored procedure. Call string is [\" + this.callString + \"]\"", "lineLoc": 324, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java"}, {"severity": "debug", "msg": "\"JdbcCall call not compiled before execution - invoking compile\"", "lineLoc": 355, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java"}, {"severity": "debug", "msg": "\"The following parameters are used for call \" + getCallString() + \" with \" + args", "lineLoc": 405, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java"}, {"severity": "debug", "msg": "i + \": \" + param.getName() + \", SQL type \" + param.getSqlType() + \", type name \" + param.getTypeName() + \", parameter class [\" + param.getClass().getName() + \"]\"", "lineLoc": 408, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcCall.java"}, {"severity": "debug", "msg": "\"JdbcInsert for table [\" + getTableName() + \"] compiled\"", "lineLoc": 263, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"Compiled insert object: insert string is [\" + this.insertString + \"]\"", "lineLoc": 280, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"JdbcInsert not compiled before execution - invoking compile\"", "lineLoc": 307, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"The following parameters are used for insert \" + getInsertString() + \" with: \" + values", "lineLoc": 355, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"The following parameters are used for call \" + getInsertString() + \" with: \" + values", "lineLoc": 427, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"Using generated keys support with array of column names.\"", "lineLoc": 522, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"Using generated keys support with Statement.RETURN_GENERATED_KEYS.\"", "lineLoc": 528, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"Executing statement \" + getInsertString() + \" with batch of size: \" + batchValues.size()", "lineLoc": 569, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"}, {"severity": "debug", "msg": "\"Acquired Connection [\" + newCon + \"] for JDBC transaction\"", "lineLoc": 264, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java"}, {"severity": "debug", "msg": "\"Switching JDBC Connection [\" + con + \"] to manual commit\"", "lineLoc": 281, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java"}, {"severity": "debug", "msg": "\"Committing JDBC transaction on Connection [\" + con + \"]\"", "lineLoc": 326, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java"}, {"severity": "debug", "msg": "\"Rolling back JDBC transaction on Connection [\" + con + \"]\"", "lineLoc": 341, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java"}, {"severity": "debug", "msg": "\"Setting JDBC transaction [\" + txObject.getConnectionHolder().getConnection() + \"] rollback-only\"", "lineLoc": 355, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java"}, {"severity": "debug", "msg": "\"Could not reset JDBC Connection after transaction\",ex", "lineLoc": 379, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java"}, {"severity": "debug", "msg": "\"Releasing JDBC Connection [\" + con + \"] after transaction\"", "lineLoc": 384, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceTransactionManager.java"}, {"severity": "debug", "msg": "\"Fetching resumed JDBC Connection from DataSource\"", "lineLoc": 107, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Setting JDBC Connection [\" + con + \"] read-only\"", "lineLoc": 182, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Changing isolation level of JDBC Connection [\" + con + \"] to \" + definition.getIsolationLevel()", "lineLoc": 204, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Resetting isolation level of JDBC Connection [\" + con + \"] to \" + previousIsolationLevel", "lineLoc": 230, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Resetting read-only flag of JDBC Connection [\" + con + \"]\"", "lineLoc": 239, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Could not reset JDBC Connection after transaction\",ex", "lineLoc": 245, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Could not close JDBC Connection\",ex", "lineLoc": 316, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Unexpected exception on closing JDBC Connection\",ex", "lineLoc": 319, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DataSourceUtils.java"}, {"severity": "debug", "msg": "\"Loaded JDBC driver: \" + driverClassNameToUse", "lineLoc": 133, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DriverManagerDataSource.java"}, {"severity": "debug", "msg": "\"Creating new JDBC DriverManager Connection to [\" + url + \"]\"", "lineLoc": 143, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/DriverManagerDataSource.java"}, {"severity": "debug", "msg": "\"Could not explicitly release JDBC savepoint\",ex", "lineLoc": 153, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/JdbcTransactionObjectSupport.java"}, {"severity": "debug", "msg": "\"Could not retrieve default auto-commit and transaction isolation settings\",ex", "lineLoc": 168, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.java"}, {"severity": "trace", "msg": "\"Connecting to database for operation '\" + operation.getName() + \"'\"", "lineLoc": 411, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.java"}, {"severity": "trace", "msg": "\"Using existing database connection for operation '\" + operation.getName() + \"'\"", "lineLoc": 444, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.java"}, {"severity": "debug", "msg": "\"Creating new JDBC Driver Connection to [\" + url + \"]\"", "lineLoc": 141, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/SimpleDriverDataSource.java"}, {"severity": "debug", "msg": "\"Established shared JDBC Connection: \" + this.target", "lineLoc": 227, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/SingleConnectionDataSource.java"}, {"severity": "info", "msg": "\"Could not close shared JDBC Connection\",ex", "lineLoc": 267, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/SingleConnectionDataSource.java"}, {"severity": "debug", "msg": "\"Obtaining JDBC Connection from WebSphere DataSource [\" + getTargetDataSource() + \"], using ConnectionSpec [\" + connSpec + \"]\"", "lineLoc": 141, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/WebSphereDataSourceAdapter.java"}, {"severity": "info", "msg": "\"Could not shut down embedded database\",ex", "lineLoc": 49, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/AbstractEmbeddedDatabaseConfigurer.java"}, {"severity": "debug", "msg": "\"Could not close JDBC Connection on shutdown\",ex", "lineLoc": 57, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/AbstractEmbeddedDatabaseConfigurer.java"}, {"severity": "info", "msg": "String.format(\"Starting embedded database: url='%s', username='%s'\",simpleDriverDataSource.getUrl(),simpleDriverDataSource.getUsername())", "lineLoc": 189, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java"}, {"severity": "info", "msg": "String.format(\"Starting embedded database '%s'\",this.databaseName)", "lineLoc": 193, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java"}, {"severity": "info", "msg": "String.format(\"Shutting down embedded database: url='%s'\",((SimpleDriverDataSource)this.dataSource).getUrl())", "lineLoc": 220, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java"}, {"severity": "info", "msg": "String.format(\"Shutting down embedded database '%s'\",this.databaseName)", "lineLoc": 224, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/embedded/EmbeddedDatabaseFactory.java"}, {"severity": "debug", "msg": "\"Executing SQL script from \" + resource", "lineLoc": 459, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java"}, {"severity": "debug", "msg": "rowsAffected + \" returned as update count for SQL: \" + statement", "lineLoc": 491, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java"}, {"severity": "debug", "msg": "\"SQLWarning ignored: SQL state '\" + warningToLog.getSQLState() + \"', error code '\" + warningToLog.getErrorCode() + \"', message [\" + warningToLog.getMessage() + \"]\"", "lineLoc": 494, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java"}, {"severity": "debug", "msg": "ScriptStatementFailedException.buildErrorMessage(statement,stmtNumber,resource),ex", "lineLoc": 505, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java"}, {"severity": "trace", "msg": "\"Could not close JDBC Statement\",ex", "lineLoc": 519, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java"}, {"severity": "debug", "msg": "\"Executed SQL script from \" + resource + \" in \" + elapsedTime + \" ms.\"", "lineLoc": 525, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java"}, {"severity": "debug", "msg": "\"Triggering auto-flush because queue reached batch size of \" + this.batchSize", "lineLoc": 168, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/object/BatchSqlUpdate.java"}, {"severity": "debug", "msg": "\"RdbmsOperation with SQL [\" + getSql() + \"] compiled\"", "lineLoc": 357, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/object/RdbmsOperation.java"}, {"severity": "debug", "msg": "\"SQL operation not compiled before execution - invoking compile\"", "lineLoc": 380, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/object/RdbmsOperation.java"}, {"severity": "debug", "msg": "\"Compiled stored procedure. Call string is [\" + this.callString + \"]\"", "lineLoc": 159, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/object/SqlCall.java"}, {"severity": "debug", "msg": "\"Replacing custom translator [\" + replaced + \"] for database '\" + dbName + \"' with [\" + translator + \"]\"", "lineLoc": 78, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistry.java"}, {"severity": "debug", "msg": "\"Adding custom translator of type [\" + translator.getClass().getName() + \"] for database '\" + dbName + \"'\"", "lineLoc": 82, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/CustomSQLExceptionTranslatorRegistry.java"}, {"severity": "debug", "msg": "\"Validation query [\" + this.validationQuery + \"] threw exception\",ex", "lineLoc": 136, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseStartupValidator.java"}, {"severity": "info", "msg": "\"Database has not started up yet - retrying in \" + this.interval + \" seconds (timeout in \" + rest + \" seconds)\"", "lineLoc": 141, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseStartupValidator.java"}, {"severity": "info", "msg": "\"Database startup detected after \" + duration + \" seconds\"", "lineLoc": 163, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseStartupValidator.java"}, {"severity": "debug", "msg": "\"Could not close JDBC Connection\",ex", "lineLoc": 71, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "trace", "msg": "\"Could not close JDBC Statement\",ex", "lineLoc": 91, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "trace", "msg": "\"Could not close JDBC ResultSet\",ex", "lineLoc": 111, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "debug", "msg": "\"JDBC driver does not implement JDBC 4.1 'getObject(int, Class)' method\",err", "lineLoc": 215, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "debug", "msg": "\"JDBC driver does not support JDBC 4.1 'getObject(int, Class)' method\",ex", "lineLoc": 218, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "debug", "msg": "\"JDBC driver has limited support for JDBC 4.1 'getObject(int, Class)' method\",ex", "lineLoc": 221, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "debug", "msg": "\"JDBC driver supports batch updates\"", "lineLoc": 395, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "debug", "msg": "\"JDBC driver does not support batch updates\"", "lineLoc": 399, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "debug", "msg": "\"JDBC driver 'supportsBatchUpdates' method threw exception\",ex", "lineLoc": 404, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java"}, {"severity": "info", "msg": "\"Default sql-error-codes.xml not found (should be included in spring-jdbc jar)\"", "lineLoc": 115, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"Found custom sql-error-codes.xml file at the root of the classpath\"", "lineLoc": 122, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "trace", "msg": "\"SQLErrorCodes loaded: \" + errorCodes.keySet()", "lineLoc": 128, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "warn", "msg": "\"Error loading SQL error codes from config file\",ex", "lineLoc": 132, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"SQL error codes for '\" + databaseName + \"' found\"", "lineLoc": 178, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"SQL error codes for '\" + databaseName + \"' not found\"", "lineLoc": 185, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"Looking up default SQLErrorCodes for DataSource [\" + identify(dataSource) + \"]\"", "lineLoc": 202, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "warn", "msg": "\"Error while extracting database name - falling back to empty error codes\",ex", "lineLoc": 220, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"SQLErrorCodes found in cache for DataSource [\" + identify(dataSource) + \"]\"", "lineLoc": 229, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"Caching SQL error codes for DataSource [\" + identify(dataSource) + \"]: database product name is '\" + databaseName + \"'\"", "lineLoc": 246, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"Overriding already defined custom translator '\" + errorCodes.getCustomSqlExceptionTranslator().getClass().getSimpleName() + \" with '\" + customTranslator.getClass().getSimpleName() + \"' found in the CustomSQLExceptionTranslatorRegistry for database '\" + databaseName + \"'\"", "lineLoc": 284, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "trace", "msg": "\"Using custom translator '\" + customTranslator.getClass().getSimpleName() + \"' found in the CustomSQLExceptionTranslatorRegistry for database '\" + databaseName + \"'\"", "lineLoc": 290, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java"}, {"severity": "debug", "msg": "\"Using nested SQLException from the BatchUpdateException\"", "lineLoc": 177, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java"}, {"severity": "debug", "msg": "\"Unable to translate SQLException with \" + codes + \", will now try the fallback translator\"", "lineLoc": 284, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java"}, {"severity": "warn", "msg": "\"Unable to find appropriate constructor of custom exception class [\" + exceptionClass.getName() + \"]\"", "lineLoc": 385, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java"}, {"severity": "warn", "msg": "\"Unable to instantiate custom exception class [\" + exceptionClass.getName() + \"]\",ex", "lineLoc": 393, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java"}, {"severity": "debug", "msg": "intro + \" SQLException with SQL state '\" + sqlEx.getSQLState() + \"', error code '\" + sqlEx.getErrorCode() + \"', message [\" + sqlEx.getMessage() + \"]\" + (sqlBANGEQnullQUES\"; SQL was [\" + sql + \"]\":\"\") + \" for task [\" + task + \"]\"", "lineLoc": 402, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java"}, {"severity": "debug", "msg": "\"Extracted SQL state class '\" + classCode + \"' from value '\" + sqlState + \"'\"", "lineLoc": 98, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLStateSQLExceptionTranslator.java"}, {"severity": "debug", "msg": "\"Returning BLOB as bytes\"", "lineLoc": 153, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "\"Returning BLOB as binary stream\"", "lineLoc": 166, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "\"Returning CLOB as string\"", "lineLoc": 179, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "\"Returning CLOB as ASCII stream\"", "lineLoc": 191, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "\"Returning CLOB as character stream\"", "lineLoc": 203, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "contentBANGEQnullQUES\"Set bytes for BLOB with length \" + content.length:\"Set BLOB to null\"", "lineLoc": 249, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "binaryStreamBANGEQnullQUES\"Set binary stream for BLOB with length \" + contentLength:\"Set BLOB to null\"", "lineLoc": 287, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "contentBANGEQnullQUES\"Set string for CLOB with length \" + content.length():\"Set CLOB to null\"", "lineLoc": 316, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "asciiStreamBANGEQnullQUES\"Set ASCII stream for CLOB with length \" + contentLength:\"Set CLOB to null\"", "lineLoc": 355, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "characterStreamBANGEQnullQUES\"Set character stream for CLOB with length \" + contentLength:\"Set CLOB to null\"", "lineLoc": 393, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/DefaultLobHandler.java"}, {"severity": "debug", "msg": "contentBANGEQnullQUES\"Copied bytes into temporary BLOB with length \" + content.length:\"Set BLOB to null\"", "lineLoc": 74, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/TemporaryLobCreator.java"}, {"severity": "debug", "msg": "binaryStreamBANGEQnullQUES\"Copied binary stream into temporary BLOB with length \" + contentLength:\"Set BLOB to null\"", "lineLoc": 100, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/TemporaryLobCreator.java"}, {"severity": "debug", "msg": "contentBANGEQnullQUES\"Copied string into temporary CLOB with length \" + content.length():\"Set CLOB to null\"", "lineLoc": 121, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/TemporaryLobCreator.java"}, {"severity": "debug", "msg": "asciiStreamBANGEQnullQUES\"Copied ASCII stream into temporary CLOB with length \" + contentLength:\"Set CLOB to null\"", "lineLoc": 147, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/TemporaryLobCreator.java"}, {"severity": "debug", "msg": "characterStreamBANGEQnullQUES\"Copied character stream into temporary CLOB with length \" + contentLength:\"Set CLOB to null\"", "lineLoc": 174, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/TemporaryLobCreator.java"}, {"severity": "warn", "msg": "\"Could not free BLOB\",ex", "lineLoc": 187, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/TemporaryLobCreator.java"}, {"severity": "warn", "msg": "\"Could not free CLOB\",ex", "lineLoc": 195, "fileLoc": "spring-framework/spring-jdbc/src/main/java/org/springframework/jdbc/support/lob/TemporaryLobCreator.java"}, {"severity": "trace", "msg": "\"No @JmsListener annotations found on bean type: \" + targetClass", "lineLoc": 241, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java"}, {"severity": "debug", "msg": "annotatedMethods.size() + \" @JmsListener methods processed on bean '\" + beanName + \"': \" + annotatedMethods", "lineLoc": 249, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java"}, {"severity": "info", "msg": "\"Ignoring recovery interval in DefaultJmsListenerContainerFactory in favor of BackOff\"", "lineLoc": 165, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/config/DefaultJmsListenerContainerFactory.java"}, {"severity": "warn", "msg": "\"Failed to destroy message listener container\",ex", "lineLoc": 254, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/config/JmsListenerEndpointRegistry.java"}, {"severity": "trace", "msg": "\"Could not close cached JMS Session\",ex", "lineLoc": 195, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "trace", "msg": "\"Found cached JMS Session for mode \" + mode + \": \" + (sessionINSTANCEOFSessionProxyQUES((SessionProxy)session).getTargetSession():session)", "lineLoc": 227, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "debug", "msg": "\"Registering cached JMS Session for mode \" + mode + \": \" + targetSession", "lineLoc": 234, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "trace", "msg": "\"Logical close of cached JMS Session failed - discarding it\",ex", "lineLoc": 309, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "trace", "msg": "\"Found cached JMS MessageProducer for destination [\" + dest + \"]: \" + producer", "lineLoc": 394, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "debug", "msg": "\"Registering cached JMS MessageProducer for destination [\" + dest + \"]: \" + producer", "lineLoc": 400, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "trace", "msg": "\"Found cached JMS MessageConsumer for destination [\" + dest + \"]: \" + consumer", "lineLoc": 414, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "debug", "msg": "\"Registering cached JMS MessageConsumer for destination [\" + dest + \"]: \" + consumer", "lineLoc": 434, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "trace", "msg": "\"Returned cached Session: \" + this.target", "lineLoc": 464, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "debug", "msg": "\"Closing cached Session: \" + this.target", "lineLoc": 470, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java"}, {"severity": "debug", "msg": "\"Could not stop JMS Connection before closing it\",ex", "lineLoc": 77, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/ConnectionFactoryUtils.java"}, {"severity": "debug", "msg": "\"Could not close JMS Connection\",ex", "lineLoc": 84, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/ConnectionFactoryUtils.java"}, {"severity": "debug", "msg": "\"No working getDataSource method found on ConnectionFactory: \" + ex2", "lineLoc": 211, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java"}, {"severity": "debug", "msg": "\"Could not close synchronized JMS Session after transaction\",ex", "lineLoc": 227, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java"}, {"severity": "debug", "msg": "\"Created JMS transaction on Session [\" + session + \"] from Connection [\" + con + \"]\"", "lineLoc": 206, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java"}, {"severity": "debug", "msg": "\"Committing JMS transaction on Session [\" + session + \"]\"", "lineLoc": 257, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java"}, {"severity": "debug", "msg": "\"Rolling back JMS transaction on Session [\" + session + \"]\"", "lineLoc": 277, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/JmsTransactionManager.java"}, {"severity": "debug", "msg": "\"Established shared JMS Connection: \" + this.connection", "lineLoc": 354, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java"}, {"severity": "info", "msg": "\"Encountered a JMSException - resetting the underlying JMS Connection\",ex", "lineLoc": 365, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java"}, {"severity": "debug", "msg": "\"Closing shared JMS Connection: \" + con", "lineLoc": 491, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java"}, {"severity": "debug", "msg": "\"Ignoring Connection state exception - assuming already closed: \" + ex", "lineLoc": 504, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java"}, {"severity": "debug", "msg": "\"Could not close shared JMS Connection\",ex", "lineLoc": 507, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java"}, {"severity": "trace", "msg": "\"Failed to close newly obtained JMS Session\",ex", "lineLoc": 656, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/connection/SingleConnectionFactory.java"}, {"severity": "debug", "msg": "\"Executing callback on JMS Session: \" + sessionToUse", "lineLoc": 502, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java"}, {"severity": "debug", "msg": "\"Sending created message: \" + message", "lineLoc": 606, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java"}, {"severity": "debug", "msg": "\"Sending created message: \" + requestMessage", "lineLoc": 921, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java"}, {"severity": "debug", "msg": "\"Executing callback on JMS Session: \" + session", "lineLoc": 952, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/core/JmsTemplate.java"}, {"severity": "debug", "msg": "\"Shutting down JMS listener container\"", "lineLoc": 221, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java"}, {"severity": "debug", "msg": "\"Could not stop JMS Connection on shutdown\",ex", "lineLoc": 237, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java"}, {"severity": "debug", "msg": "\"Established shared JMS Connection\"", "lineLoc": 380, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java"}, {"severity": "debug", "msg": "\"Ignoring Connection start exception - assuming already started: \" + ex", "lineLoc": 451, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java"}, {"severity": "debug", "msg": "\"Ignoring Connection stop exception - assuming already stopped: \" + ex", "lineLoc": 470, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java"}, {"severity": "debug", "msg": "\"Resumed paused task: \" + task", "lineLoc": 547, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java"}, {"severity": "debug", "msg": "\"Listener container task [\" + task + \"] has been rejected and paused: \" + ex", "lineLoc": 590, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java"}, {"severity": "warn", "msg": "\"Rejecting received message because of the listener container \" + \"having been stopped in the meantime: \" + message", "lineLoc": 666, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Initiating transaction rollback on application exception\",ex", "lineLoc": 813, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Could not roll back because Session already closed\",ex2", "lineLoc": 823, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java"}, {"severity": "error", "msg": "\"Application exception overridden by rollback error\",ex", "lineLoc": 826, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java"}, {"severity": "warn", "msg": "\"Execution of JMS message listener failed, and no ErrorHandler has been set.\",ex", "lineLoc": 929, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Received message of type [\" + message.getClass() + \"] from consumer [\" + consumerToUse + \"] of \" + (transactionalQUES\"transactional \":\"\") + \"session [\" + sessionToUse + \"]\"", "lineLoc": 306, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Rolling back transaction because of listener exception thrown: \" + ex", "lineLoc": 323, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java"}, {"severity": "trace", "msg": "\"Consumer [\" + consumerToUse + \"] of \" + (transactionalQUES\"transactional \":\"\") + \"session [\" + sessionToUse + \"] did not receive a message\"", "lineLoc": 344, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Initiating transaction rollback on listener exception\",ex", "lineLoc": 396, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java"}, {"severity": "error", "msg": "\"Listener exception overridden by rollback exception\",ex", "lineLoc": 401, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java"}, {"severity": "error", "msg": "\"Listener exception overridden by rollback error\",ex", "lineLoc": 405, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Waiting for shutdown of message listener invokers\"", "lineLoc": 563, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Still waiting for shutdown of \" + this.activeInvokerCount + \" message listener invokers (iteration \" + waitCount + \")\"", "lineLoc": 579, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Raised scheduled invoker count: \" + this.scheduledInvokers.size()", "lineLoc": 775, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Could not establish shared JMS Connection - \" + \"leaving it up to asynchronous invokers to establish a Connection as soon as possible\",ex", "lineLoc": 824, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Connection start failed - relying on listeners to perform recovery\",ex", "lineLoc": 840, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Connection stop failed - relying on listeners to perform recovery after restart\",ex", "lineLoc": 855, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"JMS message listener invoker needs to establish shared Connection\"", "lineLoc": 878, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Setup of JMS message listener invoker failed - already recovered by other invoker\",ex", "lineLoc": 884, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "warn", "msg": "msg,ex", "lineLoc": 892, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "warn", "msg": "msg", "lineLoc": 895, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Successfully refreshed JMS Connection\"", "lineLoc": 946, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "error", "msg": "msg,ex", "lineLoc": 959, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "error", "msg": "msg", "lineLoc": 962, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "error", "msg": "msg.toString()", "lineLoc": 970, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Lowered scheduled invoker count: \" + scheduledInvokers.size()", "lineLoc": 1125, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "error", "msg": "\"All scheduled consumers have been paused, probably due to tasks having been rejected. \" + \"Check your thread pool configuration! Manual recovery necessary through a start() call.\"", "lineLoc": 1133, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "warn", "msg": "\"Number of scheduled consumers has dropped below concurrentConsumers limit, probably \" + \"due to tasks having been rejected. Check your thread pool configuration! Automatic recovery \" + \"to be triggered by remaining consumers.\"", "lineLoc": 1137, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Could not connect on initialization - registering message consumers lazily\",ex", "lineLoc": 201, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/SimpleMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Trying to recover from JMS Connection exception: \" + ex", "lineLoc": 240, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/SimpleMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Successfully refreshed JMS Connection\"", "lineLoc": 249, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/SimpleMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Failed to recover JMS Connection\",recoverEx", "lineLoc": 252, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/SimpleMessageListenerContainer.java"}, {"severity": "error", "msg": "\"Encountered non-recoverable JMSException\",ex", "lineLoc": 253, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/SimpleMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Closing JMS MessageConsumers\"", "lineLoc": 338, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/SimpleMessageListenerContainer.java"}, {"severity": "debug", "msg": "\"Closing JMS Sessions\"", "lineLoc": 343, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/SimpleMessageListenerContainer.java"}, {"severity": "error", "msg": "\"Listener execution failed\",ex", "lineLoc": 236, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java"}, {"severity": "debug", "msg": "\"Listener method returned result [\" + result + \"] - generating response message for it\"", "lineLoc": 275, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java"}, {"severity": "warn", "msg": "\"Listener method returned result [\" + result + \"]: not generating response message for it because of no JMS Session given\"", "lineLoc": 292, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java"}, {"severity": "trace", "msg": "\"No result object given - no result to handle\"", "lineLoc": 227, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/adapter/MessageListenerAdapter.java"}, {"severity": "debug", "msg": "\"Processing [\" + message + \"]\"", "lineLoc": 75, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/adapter/MessagingMessageListenerAdapter.java"}, {"severity": "trace", "msg": "\"No result object given - no result to handle\"", "lineLoc": 82, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/adapter/MessagingMessageListenerAdapter.java"}, {"severity": "debug", "msg": "\"No default <Provider>ActivationSpec class found: \" + specClassName", "lineLoc": 88, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.java"}, {"severity": "debug", "msg": "\"No default <Provider>ActivationSpecImpl class found: \" + specClassName", "lineLoc": 101, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.java"}, {"severity": "debug", "msg": "\"No default ActivationSpecImpl class found in provider package: \" + specClassName", "lineLoc": 112, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.java"}, {"severity": "debug", "msg": "\"No default ActivationSpecImpl class found in inbound subpackage: \" + specClassName", "lineLoc": 121, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory.java"}, {"severity": "debug", "msg": "\"Invalid request message will be discarded: \" + requestMessage", "lineLoc": 188, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/remoting/JmsInvokerServiceExporter.java"}, {"severity": "debug", "msg": "\"Ignoring Connection state exception - assuming already closed: \" + ex", "lineLoc": 89, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/JmsUtils.java"}, {"severity": "debug", "msg": "\"Could not close JMS Connection\",ex", "lineLoc": 92, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/JmsUtils.java"}, {"severity": "trace", "msg": "\"Could not close JMS Session\",ex", "lineLoc": 112, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/JmsUtils.java"}, {"severity": "trace", "msg": "\"Could not close JMS MessageProducer\",ex", "lineLoc": 132, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/JmsUtils.java"}, {"severity": "trace", "msg": "\"Could not close JMS MessageConsumer\",ex", "lineLoc": 155, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/JmsUtils.java"}, {"severity": "trace", "msg": "\"Could not close JMS QueueBrowser\",ex", "lineLoc": 181, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/JmsUtils.java"}, {"severity": "trace", "msg": "\"Could not close JMS QueueRequestor\",ex", "lineLoc": 201, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/JmsUtils.java"}, {"severity": "debug", "msg": "\"Failed to set JMSCorrelationID - skipping\",ex", "lineLoc": 74, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to set JMSReplyTo - skipping\",ex", "lineLoc": 83, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to set JMSType - skipping\",ex", "lineLoc": 92, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "trace", "msg": "\"Skipping reserved header '\" + headerName + \"' since it cannot be set by client\"", "lineLoc": 107, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to map message header '\" + headerName + \"' to JMS property\",ex", "lineLoc": 112, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Error occurred while mapping from MessageHeaders to JMS properties\",ex", "lineLoc": 121, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSCorrelationID property - skipping\",ex", "lineLoc": 137, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSDestination property - skipping\",ex", "lineLoc": 146, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSDeliveryMode property - skipping\",ex", "lineLoc": 153, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSExpiration property - skipping\",ex", "lineLoc": 160, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSMessageID property - skipping\",ex", "lineLoc": 169, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSPriority property - skipping\",ex", "lineLoc": 175, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSReplyTo property - skipping\",ex", "lineLoc": 184, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSRedelivered property - skipping\",ex", "lineLoc": 190, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSType property - skipping\",ex", "lineLoc": 199, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Failed to read JMSTimestamp property - skipping\",ex", "lineLoc": 205, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Error occurred while mapping JMS property '\" + propertyName + \"' to Message header\",ex", "lineLoc": 218, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Error occurred while mapping from JMS properties to MessageHeaders\",ex", "lineLoc": 227, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/SimpleJmsHeaderMapper.java"}, {"severity": "debug", "msg": "\"Destination [\" + destinationName + \"] not found in JNDI\",ex", "lineLoc": 118, "fileLoc": "spring-framework/spring-jms/src/main/java/org/springframework/jms/support/destination/JndiDestinationResolver.java"}, {"severity": "debug", "msg": "\"Ignoring non-serializable message headers: \" + keysToIgnore", "lineLoc": 309, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/MessageHeaders.java"}, {"severity": "debug", "msg": "msg,cause", "lineLoc": 191, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java"}, {"severity": "warn", "msg": "msg,cause", "lineLoc": 194, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java"}, {"severity": "warn", "msg": "msg + \": \" + cause", "lineLoc": 197, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/converter/MappingJackson2MessageConverter.java"}, {"severity": "trace", "msg": "\"Failed to receive message from channel '\" + channel + \"' within timeout: \" + timeout", "lineLoc": 210, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/core/GenericMessagingTemplate.java"}, {"severity": "warn", "msg": "errorDescription + \": \" + message", "lineLoc": 357, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/core/GenericMessagingTemplate.java"}, {"severity": "debug", "msg": "\"Message headers contain two values for the same header '\" + name + \"', \" + \"one in the top level header map and a second in the nested map with native headers. \" + \"Using the value from top level map. \" + \"Use 'nativeHeader.myHeader' to resolve to the value from the nested native header map.\"", "lineLoc": 73, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/HeaderMethodArgumentResolver.java"}, {"severity": "debug", "msg": "\"Could not resolve target class for bean with name '\" + beanName + \"'\",ex", "lineLoc": 259, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "debug", "msg": "methods.size() + \" message handler methods found on \" + userType + \": \" + methods", "lineLoc": 312, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "trace", "msg": "\"Mapped \\\"\" + mapping + \"\\\" onto \" + newHandlerMethod", "lineLoc": 348, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "debug", "msg": "\"Searching methods to handle \" + headerAccessor.getShortLogMessage(message.getPayload()) + \", lookupDestination='\" + lookupDestination + \"'\"", "lineLoc": 434, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "trace", "msg": "\"Found \" + matches.size() + \" handler methods: \" + matches", "lineLoc": 491, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "debug", "msg": "\"No matching message handler methods.\"", "lineLoc": 528, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "debug", "msg": "\"Invoking \" + handlerMethod.getShortLogMessage()", "lineLoc": 541, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "error", "msg": "\"Unhandled exception from message handler method\",exception", "lineLoc": 578, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "debug", "msg": "\"Invoking \" + invocable.getShortLogMessage()", "lineLoc": 583, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "error", "msg": "\"Error while processing handler method exception\",ex2", "lineLoc": 597, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "debug", "msg": "\"Searching methods to handle \" + exception.getClass().getSimpleName()", "lineLoc": 616, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/AbstractMethodMessageHandler.java"}, {"severity": "trace", "msg": "\"Processing return value with \" + handler", "lineLoc": 126, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/HandlerMethodReturnValueHandlerComposite.java"}, {"severity": "trace", "msg": "\"Arguments: \" + Arrays.toString(args)", "lineLoc": 118, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java"}, {"severity": "debug", "msg": "formatArgumentError(parameter,error)", "lineLoc": 154, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java"}, {"severity": "error", "msg": "\"Uncaught error in session attribute destruction callback\",ex", "lineLoc": 176, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpAttributes.java"}, {"severity": "debug", "msg": "\"Reply to @SubscribeMapping: \" + returnValue", "lineLoc": 129, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SubscriptionMethodReturnValueHandler.java"}, {"severity": "info", "msg": "\"Starting...\"", "lineLoc": 180, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "info", "msg": "\"Started.\"", "lineLoc": 188, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "info", "msg": "\"Stopping...\"", "lineLoc": 198, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "info", "msg": "\"Stopped.\"", "lineLoc": 206, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "trace", "msg": "this + \" not running yet. Ignoring \" + message", "lineLoc": 252, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "info", "msg": "this.availableEvent", "lineLoc": 278, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "info", "msg": "this.notAvailableEvent", "lineLoc": 288, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "debug", "msg": "\"Detected unsent DISCONNECT message. Processing anyway.\"", "lineLoc": 317, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java"}, {"severity": "error", "msg": "\"No sessionId in  \" + message", "lineLoc": 58, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractSubscriptionRegistry.java"}, {"severity": "error", "msg": "\"No subscriptionId in \" + message", "lineLoc": 66, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractSubscriptionRegistry.java"}, {"severity": "error", "msg": "\"No destination in \" + message", "lineLoc": 74, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractSubscriptionRegistry.java"}, {"severity": "error", "msg": "\"No sessionId in \" + message", "lineLoc": 94, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractSubscriptionRegistry.java"}, {"severity": "error", "msg": "\"No subscriptionId \" + message", "lineLoc": 102, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractSubscriptionRegistry.java"}, {"severity": "error", "msg": "\"No destination in \" + message", "lineLoc": 122, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractSubscriptionRegistry.java"}, {"severity": "trace", "msg": "\"Subscription selector: [\" + selector + \"]\"", "lineLoc": 165, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"}, {"severity": "debug", "msg": "\"Failed to parse selector: \" + selector,ex", "lineLoc": 170, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"}, {"severity": "debug", "msg": "\"Failed to evaluate selector: \" + ex.getMessage()", "lineLoc": 232, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"}, {"severity": "debug", "msg": "\"Failed to evaluate selector\",ex", "lineLoc": 236, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"}, {"severity": "error", "msg": "\"Failed to send \" + message,ex", "lineLoc": 96, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/OrderedMessageSender.java"}, {"severity": "debug", "msg": "\"Processing \" + accessor.getShortLogMessage(message.getPayload())", "lineLoc": 356, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java"}, {"severity": "debug", "msg": "\"Broadcasting to \" + subscriptions.size() + \" sessions.\"", "lineLoc": 385, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java"}, {"severity": "error", "msg": "\"Failed to send \" + message,ex", "lineLoc": 405, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.java"}, {"severity": "trace", "msg": "\"Sending \" + accessor.getDetailedLogMessage(message.getPayload())", "lineLoc": 281, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "debug", "msg": "\"Connection established in session id=\" + this.sessionId", "lineLoc": 381, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "debug", "msg": "\"Failed to connect session id=\" + this.sessionId,ex", "lineLoc": 395, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "trace", "msg": "\"Received \" + accessor.getDetailedLogMessage(message.getPayload())", "lineLoc": 412, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "debug", "msg": "\"No handler for: \" + accessor.getDetailedLogMessage(message.getPayload()) + \". Perhaps just unsubscribed?\"", "lineLoc": 422, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "debug", "msg": "\"No matching receipt: \" + accessor.getDetailedLogMessage(message.getPayload())", "lineLoc": 434, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "trace", "msg": "\"Message not handled.\"", "lineLoc": 447, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "debug", "msg": "\"Uncaught failure while handling transport failure\",ex2", "lineLoc": 501, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "debug", "msg": "\"Connection closed in session id=\" + this.sessionId", "lineLoc": 509, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "debug", "msg": "error", "lineLoc": 708, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/DefaultStompSession.java"}, {"severity": "info", "msg": "\"Starting \\\"system\\\" session, \" + toString()", "lineLoc": 405, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Forwarding \" + accessor.getShortLogMessage(EMPTY_PAYLOAD)", "lineLoc": 419, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "error", "msg": "\"Error in shutdown of TCP client\",ex", "lineLoc": 448, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "error", "msg": "\"Only STOMP SEND supported from within the server side. Ignoring \" + message", "lineLoc": 511, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "stompAccessor.getShortLogMessage(EMPTY_PAYLOAD)", "lineLoc": 526, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Ignoring DISCONNECT in session \" + sessionId + \". Connection already cleaned up.\"", "lineLoc": 544, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"No TCP connection for session \" + sessionId + \" in \" + message", "lineLoc": 555, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"TCP connection opened in session=\" + getSessionId()", "lineLoc": 614, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "info", "msg": "\"TCP connection failure in session \" + this.sessionId + \": \" + error,ex", "lineLoc": 637, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Failure while clearing TCP connection state in session \" + this.sessionId,ex2", "lineLoc": 648, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Received \" + accessor.getShortLogMessage(EMPTY_PAYLOAD)", "lineLoc": 691, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "error", "msg": "\"Received \" + accessor.getShortLogMessage(message.getPayload())", "lineLoc": 696, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "trace", "msg": "\"Received \" + accessor.getDetailedLogMessage(message.getPayload())", "lineLoc": 699, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "error", "msg": "\"Transport failure: \" + ex", "lineLoc": 749, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"TCP connection to broker closed in session \" + this.sessionId", "lineLoc": 760, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"TCP connection closed already, ignoring \" + accessor.getShortLogMessage(message.getPayload())", "lineLoc": 803, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Forwarding \" + accessor.getShortLogMessage(message.getPayload())", "lineLoc": 823, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "trace", "msg": "\"Forwarding \" + accessor.getDetailedLogMessage(message.getPayload())", "lineLoc": 826, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "error", "msg": "\"Failed to forward \" + accessor.getShortLogMessage(message.getPayload())", "lineLoc": 844, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Failure while clearing TCP connection state in session \" + this.sessionId,ex", "lineLoc": 866, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Cleaning up connection state for session \" + this.sessionId", "lineLoc": 878, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Closing TCP connection in session \" + this.sessionId", "lineLoc": 891, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "info", "msg": "\"\\\"System\\\" session connected.\"", "lineLoc": 913, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Subscribing to \" + destination + \" on \\\"system\\\" connection.\"", "lineLoc": 927, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Got message on \\\"system\\\" connection, with no destination: \" + accessor.getDetailedLogMessage(message.getPayload())", "lineLoc": 949, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Got message on \\\"system\\\" connection with no handler: \" + accessor.getDetailedLogMessage(message.getPayload())", "lineLoc": 956, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "debug", "msg": "\"Error while handling message on \\\"system\\\" connection.\",ex", "lineLoc": 967, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java"}, {"severity": "trace", "msg": "\"Decoded \" + headerAccessor.getDetailedLogMessage(payload)", "lineLoc": 161, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java"}, {"severity": "trace", "msg": "\"Incomplete frame, resetting input buffer...\"", "lineLoc": 165, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java"}, {"severity": "trace", "msg": "\"Decoded \" + headerAccessor.getDetailedLogMessage(null)", "lineLoc": 183, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java"}, {"severity": "debug", "msg": "\"Ignoring invalid content-length: '\" + headerAccessor", "lineLoc": 303, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java"}, {"severity": "trace", "msg": "\"Encoding heartbeat\"", "lineLoc": 101, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompEncoder.java"}, {"severity": "trace", "msg": "\"Encoding STOMP \" + command + \", headers=\" + nativeHeaders", "lineLoc": 134, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompEncoder.java"}, {"severity": "error", "msg": "\"No session id. Ignoring \" + message", "lineLoc": 196, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java"}, {"severity": "trace", "msg": "\"No active sessions for user destination: \" + result.getSourceDestination()", "lineLoc": 199, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java"}, {"severity": "trace", "msg": "\"Translated \" + result.getSourceDestination() + \" -> \" + result.getTargetDestinations()", "lineLoc": 214, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java"}, {"severity": "trace", "msg": "\"Checking unresolved user destination: \" + destination", "lineLoc": 269, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java"}, {"severity": "trace", "msg": "\"Translated \" + destination + \" -> \" + getBroadcastDestination()", "lineLoc": 298, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java"}, {"severity": "debug", "msg": "\"Skipping header '\" + name + \"': expected type [\" + type + \"], but got [\" + value.getClass() + \"]\"", "lineLoc": 101, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/AbstractHeaderMapper.java"}, {"severity": "debug", "msg": "name + \" returned null from preSend, i.e. precluding the send.\"", "lineLoc": 182, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/AbstractMessageChannel.java"}, {"severity": "error", "msg": "\"Exception from afterSendCompletion in \" + interceptor,ex2", "lineLoc": 208, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/AbstractMessageChannel.java"}, {"severity": "error", "msg": "\"Exception from afterReceiveCompletion in \" + interceptor,ex2", "lineLoc": 246, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/AbstractMessageChannel.java"}, {"severity": "debug", "msg": "getBeanName() + \" added \" + handler", "lineLoc": 50, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/AbstractSubscribableChannel.java"}, {"severity": "debug", "msg": "getBeanName() + \" removed \" + handler", "lineLoc": 61, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/AbstractSubscribableChannel.java"}, {"severity": "debug", "msg": "name + \" returned null from beforeHandle, i.e. precluding the send.\"", "lineLoc": 171, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/ExecutorSubscribableChannel.java"}, {"severity": "error", "msg": "\"Exception from afterMessageHandled in \" + interceptor,ex2", "lineLoc": 188, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/support/ExecutorSubscribableChannel.java"}, {"severity": "debug", "msg": "\"Connected to \" + conn.address()", "lineLoc": 316, "fileLoc": "spring-framework/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java"}, {"severity": "debug", "msg": "\"Could not retrieve pre-bound Hibernate session\",ex", "lineLoc": 372, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTemplate.java"}, {"severity": "debug", "msg": "\"Using DataSource [\" + sfds + \"] of Hibernate SessionFactory for HibernateTransactionManager\"", "lineLoc": 385, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Found thread-bound Session [\" + sessionHolder.getSession() + \"] for Hibernate transaction\"", "lineLoc": 409, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Found Hibernate-managed Session [\" + session + \"] for Spring-managed transaction\"", "lineLoc": 417, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Opened new Session [\" + newSession + \"] for Hibernate transaction\"", "lineLoc": 465, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Preparing JDBC Connection of Hibernate Session [\" + session + \"]\"", "lineLoc": 478, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Not preparing JDBC Connection of Hibernate Session [\" + session + \"]\"", "lineLoc": 501, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Exposing Hibernate transaction as JDBC [\" + conHolder.getConnectionHandle() + \"]\"", "lineLoc": 552, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Could not rollback Session after failed transaction begin\",ex", "lineLoc": 573, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Committing Hibernate transaction on Session [\" + txObject.getSessionHolder().getSession() + \"]\"", "lineLoc": 620, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Rolling back Hibernate transaction on Session [\" + txObject.getSessionHolder().getSession() + \"]\"", "lineLoc": 649, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Setting Hibernate transaction on Session [\" + txObject.getSessionHolder().getSession() + \"] rollback-only\"", "lineLoc": 682, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Could not access JDBC Connection of Hibernate Session\",ex", "lineLoc": 717, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Could not reset JDBC Connection after transaction\",ex", "lineLoc": 720, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Closing Hibernate Session [\" + session + \"] after transaction\"", "lineLoc": 726, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Not closing pre-bound Hibernate Session [\" + session + \"] after transaction\"", "lineLoc": 732, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/HibernateTransactionManager.java"}, {"severity": "debug", "msg": "\"Flushing Hibernate Session on transaction synchronization\"", "lineLoc": 141, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/SessionFactoryUtils.java"}, {"severity": "debug", "msg": "\"Flushing Hibernate Session on explicit request\"", "lineLoc": 144, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/SessionFactoryUtils.java"}, {"severity": "debug", "msg": "\"Could not close Hibernate Session\",ex", "lineLoc": 173, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/SessionFactoryUtils.java"}, {"severity": "debug", "msg": "\"Unexpected exception on closing Hibernate Session\",ex", "lineLoc": 176, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/SessionFactoryUtils.java"}, {"severity": "debug", "msg": "\"No ConnectionProvider found - cannot determine DataSource for SessionFactory: \" + ex", "lineLoc": 209, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/SessionFactoryUtils.java"}, {"severity": "debug", "msg": "\"Falling back to Hibernate's default producer after bean creation failure for \" + beanType + \": \" + ex", "lineLoc": 155, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/SpringBeanContainer.java"}, {"severity": "debug", "msg": "\"Falling back to Hibernate's default producer after bean creation failure for \" + beanType + \": \" + ex", "lineLoc": 179, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/SpringBeanContainer.java"}, {"severity": "debug", "msg": "\"Closing Hibernate Session after async request timeout/error\"", "lineLoc": 98, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/support/AsyncRequestInterceptor.java"}, {"severity": "debug", "msg": "\"Opening Hibernate Session in OpenSessionInViewFilter\"", "lineLoc": 143, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/support/OpenSessionInViewFilter.java"}, {"severity": "debug", "msg": "\"Closing Hibernate Session in OpenSessionInViewFilter\"", "lineLoc": 163, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/support/OpenSessionInViewFilter.java"}, {"severity": "debug", "msg": "\"Using SessionFactory '\" + getSessionFactoryBeanName() + \"' for OpenSessionInViewFilter\"", "lineLoc": 191, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/support/OpenSessionInViewFilter.java"}, {"severity": "debug", "msg": "\"Opening Hibernate Session in OpenSessionInViewInterceptor\"", "lineLoc": 128, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/support/OpenSessionInViewInterceptor.java"}, {"severity": "debug", "msg": "\"Closing Hibernate Session in OpenSessionInViewInterceptor\"", "lineLoc": 153, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/hibernate5/support/OpenSessionInViewInterceptor.java"}, {"severity": "info", "msg": "\"Initialized JPA EntityManagerFactory for persistence unit '\" + getPersistenceUnitName() + \"'\"", "lineLoc": 415, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.java"}, {"severity": "info", "msg": "\"Closing JPA EntityManagerFactory for persistence unit '\" + getPersistenceUnitName() + \"'\"", "lineLoc": 597, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/AbstractEntityManagerFactoryBean.java"}, {"severity": "debug", "msg": "\"Could not join transaction because none was actually active\",ex", "lineLoc": 214, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java"}, {"severity": "debug", "msg": "\"Could not close JPA EntityManager\",ex", "lineLoc": 430, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java"}, {"severity": "debug", "msg": "\"Unexpected exception on closing JPA EntityManager\",ex", "lineLoc": 433, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/EntityManagerFactoryUtils.java"}, {"severity": "debug", "msg": "\"Cannot access EntityTransaction handle - assuming we're in a JTA environment\"", "lineLoc": 277, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/ExtendedEntityManagerCreator.java"}, {"severity": "debug", "msg": "\"Joined JTA transaction\"", "lineLoc": 367, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/ExtendedEntityManagerCreator.java"}, {"severity": "debug", "msg": "\"No JTA transaction to join: \" + ex", "lineLoc": 371, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/ExtendedEntityManagerCreator.java"}, {"severity": "debug", "msg": "\"Joined local transaction\"", "lineLoc": 384, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/ExtendedEntityManagerCreator.java"}, {"severity": "debug", "msg": "\"No local transaction to join\"", "lineLoc": 388, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/ExtendedEntityManagerCreator.java"}, {"severity": "debug", "msg": "\"Starting resource-local transaction on application-managed \" + \"EntityManager [\" + this.target + \"]\"", "lineLoc": 406, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/ExtendedEntityManagerCreator.java"}, {"severity": "debug", "msg": "\"Found thread-bound EntityManager [\" + emHolder.getEntityManager() + \"] for JPA transaction\"", "lineLoc": 355, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Opened new EntityManager [\" + newEm + \"] for JPA transaction\"", "lineLoc": 392, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Exposing JPA transaction as JDBC [\" + conHandle + \"]\"", "lineLoc": 419, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Not exposing JPA transaction [\" + em + \"] as JDBC transaction because \" + \"JpaDialect [\" + getJpaDialect() + \"] does not support JDBC Connection retrieval\"", "lineLoc": 426, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Could not rollback EntityManager after failed transaction begin\",ex", "lineLoc": 481, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Committing JPA transaction on EntityManager [\" + txObject.getEntityManagerHolder().getEntityManager() + \"]\"", "lineLoc": 527, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Rolling back JPA transaction on EntityManager [\" + txObject.getEntityManagerHolder().getEntityManager() + \"]\"", "lineLoc": 553, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Setting JPA transaction on EntityManager [\" + txObject.getEntityManagerHolder().getEntityManager() + \"] rollback-only\"", "lineLoc": 578, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Closing JPA EntityManager [\" + em + \"] after transaction\"", "lineLoc": 618, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Not closing pre-bound JPA EntityManager after transaction\"", "lineLoc": 623, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/JpaTransactionManager.java"}, {"severity": "debug", "msg": "\"Building JPA container EntityManagerFactory for persistence unit '\" + this.persistenceUnitInfo.getPersistenceUnitName() + \"'\"", "lineLoc": 361, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean.java"}, {"severity": "debug", "msg": "\"Building JPA EntityManagerFactory for persistence unit '\" + getPersistenceUnitName() + \"'\"", "lineLoc": 81, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/LocalEntityManagerFactoryBean.java"}, {"severity": "debug", "msg": "\"Creating new EntityManager for shared EntityManager invocation\"", "lineLoc": 299, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/SharedEntityManagerCreator.java"}, {"severity": "debug", "msg": "\"Transformer of class [\" + this.classTransformer.getClass().getName() + \"] transformed class [\" + className + \"]; bytes in=\" + classfileBuffer.length + \"; bytes out=\" + transformed.length", "lineLoc": 73, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter.java"}, {"severity": "error", "msg": "\"Circularity error while weaving class [\" + className + \"] with \" + \"transformer of class [\" + this.classTransformer.getClass().getName() + \"]\",ex", "lineLoc": 81, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter.java"}, {"severity": "warn", "msg": "\"Error weaving class [\" + className + \"] with transformer of class [\" + this.classTransformer.getClass().getName() + \"]\",ex", "lineLoc": 88, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter.java"}, {"severity": "debug", "msg": "\"Found explicit default unit with name '\" + defaultName + \"' in persistence.xml - \" + \"overriding local default unit settings ('packagesToScan'/'mappingResources')\"", "lineLoc": 517, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.java"}, {"severity": "debug", "msg": "\"Failed to determine persistence unit root URL from orm.xml location\",ex", "lineLoc": 560, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager.java"}, {"severity": "warn", "msg": "\"Cannot resolve jar-file entry [\" + value + \"] in persistence unit '\" + unitInfo.getPersistenceUnitName() + \"' without root URL\"", "lineLoc": 321, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader.java"}, {"severity": "info", "msg": "resource.getFilename() + \" should be located inside META-INF directory; cannot determine persistence unit root URL for \" + resource", "lineLoc": 350, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader.java"}, {"severity": "info", "msg": "resource.getFilename() + \" is not located in the root of META-INF directory; cannot determine persistence unit root URL for \" + resource", "lineLoc": 358, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader.java"}, {"severity": "debug", "msg": "\"Closing JPA EntityManager after async request timeout/error\"", "lineLoc": 98, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/support/AsyncRequestInterceptor.java"}, {"severity": "debug", "msg": "\"Opening JPA EntityManager in OpenEntityManagerInViewFilter\"", "lineLoc": 168, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.java"}, {"severity": "debug", "msg": "\"Closing JPA EntityManager in OpenEntityManagerInViewFilter\"", "lineLoc": 193, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter.java"}, {"severity": "debug", "msg": "\"Opening JPA EntityManager in OpenEntityManagerInViewInterceptor\"", "lineLoc": 86, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.java"}, {"severity": "debug", "msg": "\"Closing JPA EntityManager in OpenEntityManagerInViewInterceptor\"", "lineLoc": 111, "fileLoc": "spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.java"}, {"severity": "debug", "msg": "\"Creating JAXBContext with context path [\" + this.contextPath + \"]\"", "lineLoc": 519, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java"}, {"severity": "debug", "msg": "\"Creating JAXBContext with classes to be bound [\" + StringUtils.arrayToCommaDelimitedString(classesToBeBound) + \"]\"", "lineLoc": 543, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java"}, {"severity": "debug", "msg": "\"Creating JAXBContext by scanning packages [\" + StringUtils.arrayToCommaDelimitedString(packagesToScan) + \"]\"", "lineLoc": 556, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java"}, {"severity": "debug", "msg": "\"Found JAXB2 classes: [\" + StringUtils.arrayToCommaDelimitedString(jaxb2Classes) + \"]\"", "lineLoc": 562, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java"}, {"severity": "debug", "msg": "\"Setting validation schema to \" + StringUtils.arrayToCommaDelimitedString(this.schemaResources)", "lineLoc": 576, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java"}, {"severity": "info", "msg": "\"Processing of external entities could not be disabled\",ex", "lineLoc": 872, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jaxb/Jaxb2Marshaller.java"}, {"severity": "debug", "msg": "\"Configured for target class [\" + this.targetClass + \"] using binding [\" + this.bindingName + \"]\"", "lineLoc": 223, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jibx/JibxMarshaller.java"}, {"severity": "debug", "msg": "\"Configured for target class [\" + this.targetClass + \"]\"", "lineLoc": 230, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jibx/JibxMarshaller.java"}, {"severity": "debug", "msg": "\"Configured for target package [\" + this.targetPackage + \"] using binding [\" + this.bindingName + \"]\"", "lineLoc": 240, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/jibx/JibxMarshaller.java"}, {"severity": "debug", "msg": "\"Could not flush HierarchicalStreamWriter\",ex", "lineLoc": 737, "fileLoc": "spring-framework/spring-oxm/src/main/java/org/springframework/oxm/xstream/XStreamMarshaller.java"}, {"severity": "debug", "msg": "\"Listing name/class pairs under [\" + root + \"]\"", "lineLoc": 100, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java"}, {"severity": "debug", "msg": "\"Listing bindings under [\" + root + \"]\"", "lineLoc": 108, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java"}, {"severity": "debug", "msg": "\"Static JNDI lookup: [\" + name + \"]\"", "lineLoc": 123, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java"}, {"severity": "info", "msg": "\"Static JNDI binding: [\" + this.root + name + \"] = [\" + obj + \"]\"", "lineLoc": 160, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java"}, {"severity": "info", "msg": "\"Static JNDI remove: [\" + this.root + name + \"]\"", "lineLoc": 168, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java"}, {"severity": "info", "msg": "\"Activating simple JNDI environment\"", "lineLoc": 144, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java"}, {"severity": "info", "msg": "\"Deactivating simple JNDI environment\"", "lineLoc": 168, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java"}, {"severity": "info", "msg": "\"Static JNDI binding: [\" + name + \"] = [\" + obj + \"]\"", "lineLoc": 187, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContextBuilder.java"}, {"severity": "debug", "msg": "\"MockRequestDispatcher: forwarding to [\" + this.resource + \"]\"", "lineLoc": 63, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockRequestDispatcher.java"}, {"severity": "debug", "msg": "\"MockRequestDispatcher: including [\" + this.resource + \"]\"", "lineLoc": 73, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockRequestDispatcher.java"}, {"severity": "warn", "msg": "\"Could not get resource paths for \" + resource,ex", "lineLoc": 315, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java"}, {"severity": "warn", "msg": "\"Could not get URL for \" + resource,ex", "lineLoc": 336, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java"}, {"severity": "warn", "msg": "\"Could not open InputStream for \" + resource,ex", "lineLoc": 354, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java"}, {"severity": "info", "msg": "message", "lineLoc": 444, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java"}, {"severity": "info", "msg": "message,ex", "lineLoc": 450, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java"}, {"severity": "info", "msg": "message,ex", "lineLoc": 455, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java"}, {"severity": "warn", "msg": "\"Could not determine real path of resource \" + resource,ex", "lineLoc": 467, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockServletContext.java"}, {"severity": "debug", "msg": "\"Retrieved @ProfileValueSourceConfiguration [\" + config + \"] for test class [\" + testClass.getName() + \"]\"", "lineLoc": 70, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/annotation/ProfileValueUtils.java"}, {"severity": "debug", "msg": "\"Retrieved ProfileValueSource type [\" + profileValueSourceType + \"] for class [\" + testClass.getName() + \"]\"", "lineLoc": 83, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/annotation/ProfileValueUtils.java"}, {"severity": "warn", "msg": "\"Could not instantiate a ProfileValueSource of type [\" + profileValueSourceType + \"] for class [\" + testClass.getName() + \"]: using default.\",ex", "lineLoc": 97, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/annotation/ProfileValueUtils.java"}, {"severity": "debug", "msg": "String.format(\"Instantiating BootstrapContext using constructor [%s]\",constructor)", "lineLoc": 79, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java"}, {"severity": "debug", "msg": "String.format(\"Instantiating CacheAwareContextLoaderDelegate from class [%s]\",clazz.getName())", "lineLoc": 96, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java"}, {"severity": "debug", "msg": "String.format(\"Instantiating TestContextBootstrapper for test class [%s] from class [%s]\",testClass.getName(),clazz.getName())", "lineLoc": 132, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java"}, {"severity": "debug", "msg": "String.format(\"Test class [%s] has been configured with @ContextConfiguration's 'locations' (or 'value') %s \" + \"and 'classes' %s attributes. Most SmartContextLoader implementations support \" + \"only one declaration of resources per @ContextConfiguration annotation.\",declaringClass.getName(),ObjectUtils.nullSafeToString(locations),ObjectUtils.nullSafeToString(classes))", "lineLoc": 159, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/ContextConfigurationAttributes.java"}, {"severity": "trace", "msg": "\"Registering TestExecutionListener: \" + listener", "lineLoc": 166, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "trace", "msg": "\"beforeTestClass(): class [\" + testClass.getName() + \"]\"", "lineLoc": 209, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "trace", "msg": "\"prepareTestInstance(): instance [\" + testInstance + \"]\"", "lineLoc": 240, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "error", "msg": "\"Caught exception while allowing TestExecutionListener [\" + testExecutionListener + \"] to prepare test instance [\" + testInstance + \"]\",ex", "lineLoc": 250, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "trace", "msg": "\"afterTestClass(): class [\" + testClass.getName() + \"]\"", "lineLoc": 481, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "trace", "msg": "String.format(\"%s(): instance [%s], method [%s]\",callbackName,testInstance,testMethod)", "lineLoc": 512, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "trace", "msg": "String.format(\"%s(): instance [%s], method [%s], exception [%s]\",callbackName,testInstance,testMethod,exception)", "lineLoc": 521, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "warn", "msg": "String.format(\"Caught exception while invoking '%s' callback on \" + \"TestExecutionListener [%s] for test class [%s]\",callbackName,testExecutionListener,testClass),ex", "lineLoc": 538, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "warn", "msg": "String.format(\"Caught exception while invoking '%s' callback on \" + \"TestExecutionListener [%s] for test method [%s] and test instance [%s]\",callbackName,testExecutionListener,testMethod,testInstance),ex", "lineLoc": 548, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "info", "msg": "String.format(\"Failed to invoke copy constructor for [%s]; \" + \"concurrent test execution is therefore likely not supported.\",testContext),ex", "lineLoc": 570, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/TestContextManager.java"}, {"severity": "debug", "msg": "String.format(\"Storing ApplicationContext in cache under key [%s]\",mergedContextConfiguration)", "lineLoc": 119, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/cache/DefaultCacheAwareContextLoaderDelegate.java"}, {"severity": "debug", "msg": "String.format(\"Retrieved ApplicationContext from cache with key [%s]\",mergedContextConfiguration)", "lineLoc": 130, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/cache/DefaultCacheAwareContextLoaderDelegate.java"}, {"severity": "debug", "msg": "String.format(\"Processing %s for execution phase [%s] and test context %s.\",mergedSqlConfig,executionPhase,testContext)", "lineLoc": 165, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java"}, {"severity": "debug", "msg": "\"Executing SQL scripts: \" + ObjectUtils.nullSafeToString(scriptResources)", "lineLoc": 190, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java"}, {"severity": "info", "msg": "String.format(\"Detected default SQL script \\\"%s\\\" for test %s [%s]\",prefixedResourcePath,elementType,elementName)", "lineLoc": 279, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java"}, {"severity": "error", "msg": "msg", "lineLoc": 288, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/jdbc/SqlScriptsTestExecutionListener.java"}, {"severity": "debug", "msg": "reason", "lineLoc": 97, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/AbstractExpressionEvaluatingCondition.java"}, {"severity": "info", "msg": "reason", "lineLoc": 115, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/AbstractExpressionEvaluatingCondition.java"}, {"severity": "debug", "msg": "reason", "lineLoc": 125, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/AbstractExpressionEvaluatingCondition.java"}, {"severity": "warn", "msg": "String.format(\"@%s(\\\"%s\\\") could not be evaluated on [%s] since the test \" + \"ApplicationContext [%s] is not a ConfigurableApplicationContext\",annotationType.getSimpleName(),expression,element,contextType)", "lineLoc": 152, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit/jupiter/AbstractExpressionEvaluatingCondition.java"}, {"severity": "debug", "msg": "\"SpringJUnit4ClassRunner constructor called with [\" + clazz + \"]\"", "lineLoc": 139, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java"}, {"severity": "error", "msg": "msg", "lineLoc": 380, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit4/SpringJUnit4ClassRunner.java"}, {"severity": "debug", "msg": "\"Applying SpringClassRule to test class [\" + testClass.getName() + \"]\"", "lineLoc": 122, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit4/rules/SpringClassRule.java"}, {"severity": "debug", "msg": "\"Applying SpringMethodRule to test method [\" + testMethod + \"]\"", "lineLoc": 131, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit4/rules/SpringMethodRule.java"}, {"severity": "info", "msg": "String.format(\"Repetition %d of test %s#%s()\",(i + 1),this.testMethod.getDeclaringClass().getSimpleName(),this.testMethod.getName())", "lineLoc": 81, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/junit4/statements/SpringRepeat.java"}, {"severity": "info", "msg": "String.format(\"Detected default resource location \\\"%s\\\" for test class [%s]\",prefixedResourcePath,clazz.getName())", "lineLoc": 252, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"Did not detect default resource location for test class [%s]: \" + \"%s does not exist\",clazz.getName(),classPathResource)", "lineLoc": 258, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java"}, {"severity": "info", "msg": "String.format(\"Could not detect default resource locations for test class [%s]: \" + \"no resource found for suffixes %s.\",clazz.getName(),ObjectUtils.nullSafeToString(suffixes))", "lineLoc": 264, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractContextLoader.java"}, {"severity": "info", "msg": "String.format(\"%s detected default locations for context configuration %s.\",name(getXmlLoader()),configAttributes)", "lineLoc": 175, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java"}, {"severity": "info", "msg": "String.format(\"%s detected default configuration classes for context configuration %s.\",name(getAnnotationConfigLoader()),configAttributes)", "lineLoc": 189, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java"}, {"severity": "error", "msg": "msg", "lineLoc": 203, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"Delegating to %s to process context configuration %s.\",name(loader),configAttributes)", "lineLoc": 263, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"Delegating to %s to load context from %s.\",name(loader),mergedConfig)", "lineLoc": 273, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractDelegatingSmartContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"%s test method: context %s, class annotated with @DirtiesContext [%s] \" + \"with mode [%s], method annotated with @DirtiesContext [%s] with mode [%s].\",phase,testContext,classAnnotated,classMode,methodAnnotated,methodMode)", "lineLoc": 107, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractDirtiesContextTestExecutionListener.java"}, {"severity": "debug", "msg": "String.format(\"%s test class: context %s, class annotated with @DirtiesContext [%s] with mode [%s].\",phase,testContext,classAnnotated,classMode)", "lineLoc": 142, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractDirtiesContextTestExecutionListener.java"}, {"severity": "debug", "msg": "String.format(\"Loading ApplicationContext for merged context configuration [%s].\",mergedConfig)", "lineLoc": 109, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractGenericContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"Loading ApplicationContext for locations [%s].\",StringUtils.arrayToCommaDelimitedString(locations))", "lineLoc": 184, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractGenericContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"@TestExecutionListeners is not present for class [%s]: using defaults.\",clazz.getName())", "lineLoc": 125, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "trace", "msg": "String.format(\"Retrieved @TestExecutionListeners [%s] for declaring class [%s].\",testExecutionListeners,declaringClass.getName())", "lineLoc": 137, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "debug", "msg": "String.format(\"Merging default listeners with listeners configured via \" + \"@TestExecutionListeners for class [%s].\",descriptor.getRootDeclaringClass().getName())", "lineLoc": 151, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "info", "msg": "\"Using TestExecutionListeners: \" + listeners", "lineLoc": 177, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "debug", "msg": "String.format(\"Skipping candidate TestExecutionListener [%s] due to a missing dependency. \" + \"Specify custom listener classes or make the default listener classes \" + \"and their required dependencies available. Offending class: [%s]\",listenerClass.getName(),ex.getCause().getMessage())", "lineLoc": 192, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "debug", "msg": "\"Could not load default TestExecutionListener class [\" + className + \"]. Specify custom listener classes or make the default listener classes available.\",ex", "lineLoc": 225, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "info", "msg": "String.format(\"Loaded default TestExecutionListener class names from location [%s]: %s\",SpringFactoriesLoader.FACTORIES_RESOURCE_LOCATION,classNames)", "lineLoc": 248, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "info", "msg": "String.format(\"Neither @ContextConfiguration nor @ContextHierarchy found for test class [%s], using %s\",testClass.getName(),contextLoader.getClass().getSimpleName())", "lineLoc": 308, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "trace", "msg": "String.format(\"Processing locations and classes for context configuration attributes %s\",configAttributes)", "lineLoc": 355, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "trace", "msg": "String.format(\"Using ContextLoader class [%s] for test class [%s]\",contextLoaderClass.getName(),testClass.getName())", "lineLoc": 454, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "trace", "msg": "String.format(\"Resolving ContextLoader for context configuration attributes %s\",configAttributes)", "lineLoc": 488, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "debug", "msg": "String.format(\"Found explicit ContextLoader class [%s] for context configuration attributes %s\",contextLoaderClass.getName(),configAttributes)", "lineLoc": 494, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AbstractTestContextBootstrapper.java"}, {"severity": "debug", "msg": "String.format(\"Could not find an 'annotation declaring class' for annotation type [%s] and class [%s]\",annotationType.getName(),testClass.getName())", "lineLoc": 79, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ActiveProfilesUtils.java"}, {"severity": "trace", "msg": "String.format(\"Retrieved @ActiveProfiles [%s] for declaring class [%s]\",annotation,declaringClass.getName())", "lineLoc": 90, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ActiveProfilesUtils.java"}, {"severity": "error", "msg": "msg", "lineLoc": 106, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ActiveProfilesUtils.java"}, {"severity": "error", "msg": "msg", "lineLoc": 162, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoader.java"}, {"severity": "debug", "msg": "\"Registering annotated classes: \" + ObjectUtils.nullSafeToString(annotatedClasses)", "lineLoc": 184, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"Ignoring class [%s]; it must be static, non-private, non-final, and annotated \" + \"with @Configuration to be considered a default configuration class.\",candidate.getName())", "lineLoc": 73, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoaderUtils.java"}, {"severity": "info", "msg": "String.format(\"Could not detect default configuration classes for test class [%s]: \" + \"%s does not declare any static, non-private, non-final, nested classes \" + \"annotated with @Configuration.\",declaringClass.getName(),declaringClass.getSimpleName())", "lineLoc": 83, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/AnnotationConfigContextLoaderUtils.java"}, {"severity": "trace", "msg": "\"Processing context initializers for configuration attributes \" + configAttributes", "lineLoc": 73, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ApplicationContextInitializerUtils.java"}, {"severity": "error", "msg": "msg", "lineLoc": 123, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java"}, {"severity": "error", "msg": "msg", "lineLoc": 148, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java"}, {"severity": "error", "msg": "msg", "lineLoc": 213, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java"}, {"severity": "trace", "msg": "String.format(\"Retrieved @ContextConfiguration [%s] for declaring class [%s].\",contextConfiguration,declaringClass.getName())", "lineLoc": 266, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java"}, {"severity": "trace", "msg": "\"Resolved context configuration attributes: \" + attributes", "lineLoc": 272, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/ContextLoaderUtils.java"}, {"severity": "debug", "msg": "String.format(\"Could not find an 'annotation declaring class' for annotation type [%s] and class [%s]\",annotationType.getName(),testClass.getName())", "lineLoc": 69, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/DefaultActiveProfilesResolver.java"}, {"severity": "trace", "msg": "String.format(\"Retrieved @ActiveProfiles [%s] for declaring class [%s].\",annotation,declaringClass.getName())", "lineLoc": 79, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/DefaultActiveProfilesResolver.java"}, {"severity": "debug", "msg": "\"Performing dependency injection for test context [\" + testContext + \"].\"", "lineLoc": 81, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.java"}, {"severity": "debug", "msg": "\"Reinjecting dependencies for test context [\" + testContext + \"].\"", "lineLoc": 97, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/DependencyInjectionTestExecutionListener.java"}, {"severity": "error", "msg": "msg", "lineLoc": 67, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/GenericPropertiesContextLoader.java"}, {"severity": "error", "msg": "msg", "lineLoc": 71, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/GenericXmlContextLoader.java"}, {"severity": "info", "msg": "String.format(\"Detected default properties file \\\"%s\\\" for test class [%s]\",prefixedResourcePath,testClass.getName())", "lineLoc": 164, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceAttributes.java"}, {"severity": "error", "msg": "msg", "lineLoc": 174, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceAttributes.java"}, {"severity": "trace", "msg": "String.format(\"Retrieved @TestPropertySource [%s] for declaring class [%s].\",testPropertySource,rootDeclaringClass.getName())", "lineLoc": 98, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java"}, {"severity": "trace", "msg": "\"Resolved TestPropertySource attributes: \" + attributes", "lineLoc": 104, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java"}, {"severity": "trace", "msg": "String.format(\"Processing locations for TestPropertySource attributes %s\",attrs)", "lineLoc": 117, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java"}, {"severity": "trace", "msg": "String.format(\"Processing inlined properties for TestPropertySource attributes %s\",attrs)", "lineLoc": 133, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java"}, {"severity": "debug", "msg": "\"Adding inlined properties to environment: \" + ObjectUtils.nullSafeToString(inlinedProperties)", "lineLoc": 245, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceUtils.java"}, {"severity": "error", "msg": "String.format(\"Failed to retrieve DataSource named '%s' for test context %s\",name,testContext),ex", "lineLoc": 101, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TestContextTransactionUtils.java"}, {"severity": "error", "msg": "String.format(\"Failed to retrieve transaction manager named '%s' for test context %s\",name,testContext),ex", "lineLoc": 175, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TestContextTransactionUtils.java"}, {"severity": "debug", "msg": "String.format(\"Caught exception while retrieving %s for test context %s\",beanType.getSimpleName(),testContext),ex", "lineLoc": 220, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TestContextTransactionUtils.java"}, {"severity": "debug", "msg": "\"Explicit transaction definition [\" + transactionAttribute + \"] found for test context \" + testContext", "lineLoc": 176, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "debug", "msg": "\"Executing @BeforeTransaction method [\" + method + \"] for test context \" + testContext", "lineLoc": 239, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "error", "msg": "\"Exception encountered while executing @BeforeTransaction methods for test context \" + testContext + \".\",ex.getTargetException()", "lineLoc": 247, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "debug", "msg": "\"Executing @AfterTransaction method [\" + method + \"] for test context \" + testContext", "lineLoc": 269, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "error", "msg": "\"Exception encountered while executing @AfterTransaction method [\" + method + \"] for test context \" + testContext,targetException", "lineLoc": 279, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "error", "msg": "\"Exception encountered while executing @AfterTransaction method [\" + method + \"] for test context \" + testContext,ex", "lineLoc": 286, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "warn", "msg": "String.format(\"Caught exception while retrieving transaction manager with qualifier '%s' for test context %s\",qualifier,testContext),ex", "lineLoc": 322, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "debug", "msg": "String.format(\"Retrieved default @Rollback(%s) for test class [%s].\",defaultRollback,testClass.getName())", "lineLoc": 371, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "debug", "msg": "String.format(\"Method-level @Rollback(%s) overrides default rollback [%s] for test context %s.\",rollbackOverride,rollback,testContext)", "lineLoc": 399, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "debug", "msg": "String.format(\"No method-level @Rollback override: using default rollback [%s] for test context %s.\",rollback,testContext)", "lineLoc": 407, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionalTestExecutionListener.java"}, {"severity": "info", "msg": "String.format(\"Began transaction (%s) for test context %s; transaction manager [%s]; rollback [%s]\",transactionsStarted,this.testContext,this.transactionManager,this.flaggedForRollback)", "lineLoc": 107, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionContext.java"}, {"severity": "trace", "msg": "String.format(\"Ending transaction for test context %s; transaction status [%s]; rollback [%s]\",this.testContext,this.transactionStatus,this.flaggedForRollback)", "lineLoc": 119, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionContext.java"}, {"severity": "info", "msg": "(this.flaggedForRollbackQUES\"Rolled back\":\"Committed\") + \" transaction for test: \" + this.testContext", "lineLoc": 139, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/transaction/TransactionContext.java"}, {"severity": "debug", "msg": "String.format(\"Loading WebApplicationContext for merged context configuration %s.\",webMergedConfig)", "lineLoc": 111, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/web/AbstractGenericWebContextLoader.java"}, {"severity": "debug", "msg": "\"Registering annotated classes: \" + ObjectUtils.nullSafeToString(annotatedClasses)", "lineLoc": 162, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/web/AnnotationConfigWebContextLoader.java"}, {"severity": "error", "msg": "msg", "lineLoc": 180, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/web/AnnotationConfigWebContextLoader.java"}, {"severity": "error", "msg": "msg", "lineLoc": 72, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/web/GenericXmlWebContextLoader.java"}, {"severity": "debug", "msg": "String.format(\"Resetting RequestContextHolder for test context %s.\",testContext)", "lineLoc": 166, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java"}, {"severity": "debug", "msg": "String.format(\"Setting up MockHttpServletRequest, MockHttpServletResponse, ServletWebRequest, and RequestContextHolder for test context %s.\",testContext)", "lineLoc": 200, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/context/web/ServletTestExecutionListener.java"}, {"severity": "info", "msg": "\"Deleted \" + rowCount + \" rows from table \" + tableName", "lineLoc": 92, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/jdbc/JdbcTestUtils.java"}, {"severity": "info", "msg": "\"Deleted \" + rowCount + \" rows from table \" + tableName", "lineLoc": 126, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/jdbc/JdbcTestUtils.java"}, {"severity": "info", "msg": "\"Dropped table \" + tableName", "lineLoc": 140, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/jdbc/JdbcTestUtils.java"}, {"severity": "debug", "msg": "String.format(\"Setting field '%s' of type [%s] on %s or target class [%s] to value [%s]\",name,type,safeToString(targetObject),targetClass,value)", "lineLoc": 191, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java"}, {"severity": "debug", "msg": "String.format(\"Getting field '%s' from %s or target class [%s]\",name,safeToString(targetObject),targetClass)", "lineLoc": 275, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java"}, {"severity": "debug", "msg": "String.format(\"Invoking setter method '%s' on %s with value [%s]\",setterMethodName,safeToString(target),value)", "lineLoc": 349, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java"}, {"severity": "debug", "msg": "String.format(\"Invoking getter method '%s' on %s\",getterMethodName,safeToString(target))", "lineLoc": 397, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java"}, {"severity": "debug", "msg": "String.format(\"Invoking method '%s' on %s with arguments %s\",name,safeToString(target),ObjectUtils.nullSafeToString(args))", "lineLoc": 433, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/util/ReflectionTestUtils.java"}, {"severity": "debug", "msg": "String.format(\"%s %s \\\"%s\\\"\",message,httpMethod,uri)", "lineLoc": 107, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/web/reactive/server/HttpHandlerConnector.java"}, {"severity": "debug", "msg": "\"MvcResult details:\\n\" + stringWriter", "lineLoc": 137, "fileLoc": "spring-framework/spring-test/src/main/java/org/springframework/test/web/servlet/result/MockMvcResultHandlers.java"}, {"severity": "debug", "msg": "\"Acquired Connection [\" + con + \"] for local CCI transaction\"", "lineLoc": 160, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/CciLocalTransactionManager.java"}, {"severity": "debug", "msg": "\"Committing CCI local transaction on Connection [\" + con + \"]\"", "lineLoc": 212, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/CciLocalTransactionManager.java"}, {"severity": "debug", "msg": "\"Rolling back CCI local transaction on Connection [\" + con + \"]\"", "lineLoc": 230, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/CciLocalTransactionManager.java"}, {"severity": "debug", "msg": "\"Setting CCI local transaction [\" + txObject.getConnectionHolder().getConnection() + \"] rollback-only\"", "lineLoc": 247, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/CciLocalTransactionManager.java"}, {"severity": "debug", "msg": "\"Releasing CCI Connection [\" + con + \"] after transaction\"", "lineLoc": 264, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/CciLocalTransactionManager.java"}, {"severity": "debug", "msg": "\"Opening CCI Connection\"", "lineLoc": 127, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/ConnectionFactoryUtils.java"}, {"severity": "debug", "msg": "\"Could not close CCI Connection\",ex", "lineLoc": 170, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/ConnectionFactoryUtils.java"}, {"severity": "debug", "msg": "\"Established shared CCI Connection: \" + this.target", "lineLoc": 158, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/SingleConnectionFactory.java"}, {"severity": "warn", "msg": "\"Could not close shared CCI Connection\",ex", "lineLoc": 205, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/connection/SingleConnectionFactory.java"}, {"severity": "trace", "msg": "\"Could not close CCI Interaction\",ex", "lineLoc": 415, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/core/CciTemplate.java"}, {"severity": "trace", "msg": "\"Could not close CCI ResultSet\",ex", "lineLoc": 436, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/cci/core/CciTemplate.java"}, {"severity": "debug", "msg": "\"Starting SpringContextResourceAdapter with BootstrapContext: \" + bootstrapContext", "lineLoc": 168, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/context/SpringContextResourceAdapter.java"}, {"severity": "debug", "msg": "\"Stopping SpringContextResourceAdapter\"", "lineLoc": 214, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/context/SpringContextResourceAdapter.java"}, {"severity": "debug", "msg": "\"Transaction marked as rollback-only after endpoint exception\",ex", "lineLoc": 275, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java"}, {"severity": "warn", "msg": "\"Failed to complete transaction after endpoint delivery\",ex", "lineLoc": 295, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java"}, {"severity": "warn", "msg": "\"Could not complete unfinished transaction on endpoint release\",ex", "lineLoc": 308, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/jca/endpoint/AbstractMessageEndpointFactory.java"}, {"severity": "warn", "msg": "\"Processing \" + event + \" as a fallback execution on AFTER_ROLLBACK phase\"", "lineLoc": 69, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java"}, {"severity": "debug", "msg": "\"No transaction is active - skipping \" + event", "lineLoc": 76, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java"}, {"severity": "trace", "msg": "\"Adding transactional method '\" + methodIdentification + \"' with attribute: \" + txAttr", "lineLoc": 123, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.java"}, {"severity": "debug", "msg": "\"Replacing attribute for transactional method [\" + method + \"]: current name '\" + name + \"' is more specific than '\" + regMethodName + \"'\"", "lineLoc": 166, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.java"}, {"severity": "debug", "msg": "\"Keeping attribute for transactional method [\" + method + \"]: current name '\" + name + \"' is not more specific than '\" + regMethodName + \"'\"", "lineLoc": 174, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.java"}, {"severity": "debug", "msg": "\"Adding transactional method [\" + method + \"] with attribute [\" + attr + \"]\"", "lineLoc": 190, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource.java"}, {"severity": "debug", "msg": "\"Adding transactional method [\" + methodName + \"] with attribute [\" + attr + \"]\"", "lineLoc": 95, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.java"}, {"severity": "trace", "msg": "\"Applying rules to determine whether transaction should rollback on \" + ex", "lineLoc": 134, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.java"}, {"severity": "trace", "msg": "\"Winning rollback rule is: \" + winner", "lineLoc": 151, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.java"}, {"severity": "trace", "msg": "\"No relevant rollback rule found: applying default rules\"", "lineLoc": 156, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/RuleBasedTransactionAttribute.java"}, {"severity": "error", "msg": "\"Application exception overridden by commit exception\",throwableHolder.throwable", "lineLoc": 350, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "error", "msg": "\"Application exception overridden by commit exception\",throwableHolder.throwable", "lineLoc": 357, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "debug", "msg": "\"Skipping transactional joinpoint [\" + joinpointIdentification + \"] because no transaction manager has been configured\"", "lineLoc": 478, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "trace", "msg": "\"Getting transaction for [\" + txInfo.getJoinpointIdentification() + \"]\"", "lineLoc": 502, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "trace", "msg": "\"Don't need to create transaction for [\" + joinpointIdentification + \"]: This method isn't transactional.\"", "lineLoc": 511, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "trace", "msg": "\"Completing transaction for [\" + txInfo.getJoinpointIdentification() + \"]\"", "lineLoc": 531, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "trace", "msg": "\"Completing transaction for [\" + txInfo.getJoinpointIdentification() + \"] after exception: \" + ex", "lineLoc": 546, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "error", "msg": "\"Application exception overridden by rollback exception\",ex", "lineLoc": 554, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "error", "msg": "\"Application exception overridden by rollback exception\",ex", "lineLoc": 559, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "error", "msg": "\"Application exception overridden by commit exception\",ex", "lineLoc": 570, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "error", "msg": "\"Application exception overridden by commit exception\",ex", "lineLoc": 575, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"}, {"severity": "debug", "msg": "\"Using JTA UserTransaction: \" + this.userTransaction", "lineLoc": 501, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Using JTA TransactionManager: \" + this.transactionManager", "lineLoc": 512, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "warn", "msg": "\"No JTA TransactionManager found: transaction suspension not available\"", "lineLoc": 516, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Using JTA TransactionSynchronizationRegistry: \" + this.transactionSynchronizationRegistry", "lineLoc": 546, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Retrieving JTA UserTransaction from JNDI location [\" + userTransactionName + \"]\"", "lineLoc": 580, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Retrieving JTA TransactionManager from JNDI location [\" + transactionManagerName + \"]\"", "lineLoc": 604, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Retrieving JTA TransactionSynchronizationRegistry from JNDI location [\" + registryName + \"]\"", "lineLoc": 627, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"JTA UserTransaction found at default JNDI location [\" + jndiName + \"]\"", "lineLoc": 690, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"No JTA UserTransaction found at default JNDI location [\" + jndiName + \"]\",ex", "lineLoc": 697, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"JTA UserTransaction object [\" + ut + \"] implements TransactionManager\"", "lineLoc": 715, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"JTA TransactionManager found at fallback JNDI location [\" + jndiName + \"]\"", "lineLoc": 725, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"No JTA TransactionManager found at fallback JNDI location [\" + jndiName + \"]\",ex", "lineLoc": 731, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"JTA TransactionSynchronizationRegistry found at default JNDI location [\" + jndiName + \"]\"", "lineLoc": 762, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"No JTA TransactionSynchronizationRegistry found at default JNDI location [\" + jndiName + \"]\",ex", "lineLoc": 768, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Rollback failure with transaction already marked as rolled back: \" + ex", "lineLoc": 1029, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Rollback failure with transaction already marked as rolled back: \" + ex", "lineLoc": 1067, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Setting JTA transaction rollback-only\"", "lineLoc": 1085, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Registering after-completion synchronization with existing JTA transaction\"", "lineLoc": 1107, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Participating in existing JTA transaction that has been marked for rollback: \" + \"cannot register Spring after-completion callbacks with outer JTA transaction - \" + \"immediately performing Spring after-completion callbacks with outcome status 'rollback'. \" + \"Original exception: \" + ex", "lineLoc": 1117, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Participating in existing JTA transaction, but unexpected internal transaction \" + \"state encountered: cannot register Spring after-completion callbacks with outer JTA \" + \"transaction - processing Spring after-completion callbacks with outcome status 'unknown'\" + \"Original exception: \" + ex", "lineLoc": 1124, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Failed to reset transaction timeout after JTA completion\",ex", "lineLoc": 1193, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/JtaTransactionManager.java"}, {"severity": "error", "msg": "\"Could not set JTA transaction rollback-only\",ex", "lineLoc": 152, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.java"}, {"severity": "debug", "msg": "\"No JTA transaction handle available and/or running on WebLogic - \" + \"relying on JTA provider to mark the transaction as rollback-only based on \" + \"the exception thrown from beforeCompletion\"", "lineLoc": 156, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/SpringJtaSynchronizationAdapter.java"}, {"severity": "trace", "msg": "\"Retrieving JTA UserTransaction from WebLogic TransactionHelper\"", "lineLoc": 120, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "trace", "msg": "\"Retrieving JTA TransactionManager from WebLogic TransactionHelper\"", "lineLoc": 139, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "trace", "msg": "\"WebLogic TransactionHelper found\"", "lineLoc": 161, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Support for WebLogic transaction names available\"", "lineLoc": 183, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Support for WebLogic transaction names not available\"", "lineLoc": 186, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "trace", "msg": "\"WebLogic ClientTransactionManager found\"", "lineLoc": 192, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Support for WebLogic forceResume available\"", "lineLoc": 199, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Support for WebLogic forceResume not available\"", "lineLoc": 202, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Standard JTA resume threw InvalidTransactionException: \" + ex.getMessage() + \" - trying WebLogic JTA forceResume\"", "lineLoc": 302, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebLogicJtaTransactionManager.java"}, {"severity": "debug", "msg": "\"Retrieving WebSphere UOWManager from JNDI location [\" + uowManagerName + \"]\"", "lineLoc": 171, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"Retrieving WebSphere UOWManager from default JNDI location [\" + DEFAULT_UOW_MANAGER_NAME + \"]\"", "lineLoc": 190, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"WebSphere UOWManager is not available at default JNDI location [\" + DEFAULT_UOW_MANAGER_NAME + \"] - falling back to UOWManagerFactory lookup\"", "lineLoc": 194, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"Creating new transaction with name [\" + definition.getName() + \"]: \" + definition", "lineLoc": 295, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"Invoking WebSphere UOW action: type=\" + uowType + \", join=\" + joinTx", "lineLoc": 304, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"Returned from WebSphere UOW action: type=\" + uowType + \", join=\" + joinTx", "lineLoc": 310, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "error", "msg": "\"Application exception overridden by rollback exception\",appEx", "lineLoc": 319, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"Rolling back on application exception from transaction callback\",ex", "lineLoc": 379, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"Transaction callback has explicitly requested rollback\"", "lineLoc": 386, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/jta/WebSphereUowTransactionManager.java"}, {"severity": "debug", "msg": "\"Creating new transaction with name [\" + definition.getName() + \"]: \" + definition", "lineLoc": 372, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "warn", "msg": "\"Custom isolation level specified but no actual transaction initiated; \" + \"isolation level will effectively be ignored: \" + definition", "lineLoc": 390, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Suspending current transaction\"", "lineLoc": 412, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Suspending current transaction, creating new transaction with name [\" + definition.getName() + \"]\"", "lineLoc": 422, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Creating nested transaction with name [\" + definition.getName() + \"]\"", "lineLoc": 447, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Participating in existing transaction\"", "lineLoc": 473, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "error", "msg": "exMessage,beginEx", "lineLoc": 647, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Transactional code has requested rollback\"", "lineLoc": 700, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Global transaction is marked as rollback-only but transactional code requested commit\"", "lineLoc": 708, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Releasing transaction savepoint\"", "lineLoc": 736, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Initiating transaction commit\"", "lineLoc": 743, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Rolling back transaction to savepoint\"", "lineLoc": 830, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Initiating transaction rollback\"", "lineLoc": 836, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Participating transaction failed - marking existing transaction as rollback-only\"", "lineLoc": 845, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Participating transaction failed - letting transaction originator decide on rollback\"", "lineLoc": 851, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Should roll back transaction but cannot - no transaction available\"", "lineLoc": 856, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Initiating transaction rollback after commit exception\",ex", "lineLoc": 893, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Marking existing transaction as rollback-only after commit exception\",ex", "lineLoc": 899, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "error", "msg": "\"Commit exception overridden by rollback exception\",ex", "lineLoc": 905, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "trace", "msg": "\"Triggering beforeCommit synchronization\"", "lineLoc": 920, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "trace", "msg": "\"Triggering beforeCompletion synchronization\"", "lineLoc": 933, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "trace", "msg": "\"Triggering afterCommit synchronization\"", "lineLoc": 946, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "trace", "msg": "\"Triggering afterCompletion synchronization\"", "lineLoc": 963, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Resuming suspended transaction after completion of inner transaction\"", "lineLoc": 1011, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "debug", "msg": "\"Cannot register Spring after-completion synchronization with existing transaction - \" + \"processing Spring after-completion callbacks immediately, with outcome status 'unknown'\"", "lineLoc": 1243, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/AbstractPlatformTransactionManager.java"}, {"severity": "trace", "msg": "\"Retrieved value [\" + value + \"] for key [\" + actualKey + \"] bound to thread [\" + Thread.currentThread().getName() + \"]\"", "lineLoc": 142, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java"}, {"severity": "trace", "msg": "\"Bound value [\" + value + \"] for key [\" + actualKey + \"] to thread [\" + Thread.currentThread().getName() + \"]\"", "lineLoc": 196, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java"}, {"severity": "trace", "msg": "\"Removed value [\" + value + \"] for key [\" + actualKey + \"] from thread [\" + Thread.currentThread().getName() + \"]\"", "lineLoc": 248, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java"}, {"severity": "trace", "msg": "\"Initializing transaction synchronization\"", "lineLoc": 277, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java"}, {"severity": "trace", "msg": "\"Clearing transaction synchronization\"", "lineLoc": 336, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationManager.java"}, {"severity": "error", "msg": "\"TransactionSynchronization.beforeCompletion threw exception\",tsex", "lineLoc": 110, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationUtils.java"}, {"severity": "error", "msg": "\"TransactionSynchronization.afterCompletion threw exception\",tsex", "lineLoc": 174, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionSynchronizationUtils.java"}, {"severity": "debug", "msg": "\"Initiating transaction rollback on application exception\",ex", "lineLoc": 166, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java"}, {"severity": "error", "msg": "\"Application exception overridden by rollback exception\",ex", "lineLoc": 171, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java"}, {"severity": "error", "msg": "\"Application exception overridden by rollback exception\",ex", "lineLoc": 176, "fileLoc": "spring-framework/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java"}, {"severity": "debug", "msg": "\"Created asynchronous \" + method.name() + \" request for \\\"\" + url + \"\\\"\"", "lineLoc": 87, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/client/support/AsyncHttpAccessor.java"}, {"severity": "debug", "msg": "\"HTTP \" + method.name() + \" \" + url", "lineLoc": 89, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/client/support/HttpAccessor.java"}, {"severity": "debug", "msg": "Hints.getLogPrefix(hints) + \"Resource associated with '\" + mediaType + \"'\"", "lineLoc": 148, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/codec/ResourceHttpMessageWriter.java"}, {"severity": "debug", "msg": "Hints.getLogPrefix(hints) + \"Zero-copy \" + formatted + \"[\" + resource + \"]\"", "lineLoc": 175, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/codec/ResourceHttpMessageWriter.java"}, {"severity": "debug", "msg": "msg,cause", "lineLoc": 203, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java"}, {"severity": "warn", "msg": "msg,cause", "lineLoc": 206, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java"}, {"severity": "warn", "msg": "msg + \": \" + cause", "lineLoc": 209, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/converter/json/AbstractJackson2HttpMessageConverter.java"}, {"severity": "warn", "msg": "\"For Jackson Kotlin classes support please add \" + \"\\\"com.fasterxml.jackson.module:jackson-module-kotlin\\\" to the classpath\"", "lineLoc": 788, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java"}, {"severity": "warn", "msg": "\"Processing of external entities could not be disabled\",ex", "lineLoc": 167, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/converter/xml/Jaxb2RootElementHttpMessageConverter.java"}, {"severity": "warn", "msg": "getLogPrefix() + \"Could not decode query value [\" + value + \"] as 'UTF-8'. \" + \"Falling back on default encoding: \" + ex.getMessage()", "lineLoc": 159, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpRequest.java"}, {"severity": "trace", "msg": "request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoidARROWlogger.trace(request.getLogPrefix() + \"Handling completed\")", "lineLoc": 66, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "request.getLogPrefix() + \"Handling completed\")", "lineLoc": 67, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java"}, {"severity": "debug", "msg": "\"Failed to get request URI: \" + ex.getMessage()", "lineLoc": 71, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorHttpHandlerAdapter.java"}, {"severity": "debug", "msg": "\"Found servlet mapping prefix '\" + path + \"' for '\" + name + \"'\"", "lineLoc": 144, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "debug", "msg": "\"Failed to get request  URL: \" + ex.getMessage()", "lineLoc": 175, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "debug", "msg": "this.logPrefix + \"Timeout notification\"", "lineLoc": 255, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "debug", "msg": "this.logPrefix + \"Error notification: \" + (exBANGEQnullQUESex:\"<no Throwable>\")", "lineLoc": 263, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "this.logPrefix + \"Failed to complete: \" + ex.getMessage()", "lineLoc": 308, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "this.logPrefix + \"Dispatch to container, to raise the error on servlet thread\"", "lineLoc": 311, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "this.logPrefix + \"Setting ServletResponse status to 500 Server Error\"", "lineLoc": 317, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "this.logPrefix + \"Handling completed\"", "lineLoc": 330, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "getLogPrefix() + \"Wrote \" + written + \" of \" + remaining + \" bytes\"", "lineLoc": 347, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ServletServerHttpResponse.java"}, {"severity": "debug", "msg": "\"Failed to get request URI: \" + ex.getMessage()", "lineLoc": 75, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "this.logPrefix + \"Failed to complete: \" + ex.getMessage()", "lineLoc": 115, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowHttpHandlerAdapter.java"}, {"severity": "debug", "msg": "this.logPrefix + \"Closing connection\"", "lineLoc": 118, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowHttpHandlerAdapter.java"}, {"severity": "debug", "msg": "this.logPrefix + \"Setting HttpServerExchange status to 500 Server Error\"", "lineLoc": 126, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "this.logPrefix + \"Handling completed\"", "lineLoc": 134, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowHttpHandlerAdapter.java"}, {"severity": "trace", "msg": "getLogPrefix() + \"Wrote \" + written + \" of \" + total + \" bytes\"", "lineLoc": 196, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java"}, {"severity": "error", "msg": "\"Hessian skeleton invocation failed\",ex", "lineLoc": 68, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/remoting/caucho/SimpleHessianServiceExporter.java"}, {"severity": "debug", "msg": "\"Sending HTTP invoker request for service at [\" + config.getServiceUrl() + \"], with size \" + baos.size()", "lineLoc": 137, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/remoting/httpinvoker/AbstractHttpInvokerRequestExecutor.java"}, {"severity": "error", "msg": "\"Class not found during deserialization\",ex", "lineLoc": 80, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/remoting/httpinvoker/SimpleHttpInvokerServiceExporter.java"}, {"severity": "info", "msg": "\"Starting HttpServer at address \" + address", "lineLoc": 169, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.java"}, {"severity": "info", "msg": "\"Stopping HttpServer\"", "lineLoc": 222, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/remoting/jaxws/SimpleHttpServerJaxWsServiceExporter.java"}, {"severity": "debug", "msg": "\"Failed to create default value - falling back to null: \" + ex.getMessage()", "lineLoc": 299, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/bind/WebDataBinder.java"}, {"severity": "debug", "msg": "\"Async \" + method.name() + \" request for \\\"\" + url + \"\\\" resulted in \" + response.getRawStatusCode() + \" (\" + response.getStatusText() + \")\"", "lineLoc": 552, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/AsyncRestTemplate.java"}, {"severity": "warn", "msg": "\"Async \" + method.name() + \" request for \\\"\" + url + \"\\\" resulted in \" + response.getRawStatusCode() + \" (\" + response.getStatusText() + \"); invoking error handler\"", "lineLoc": 564, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/AsyncRestTemplate.java"}, {"severity": "debug", "msg": "\"Reading to [\" + resolvableType + \"]\"", "lineLoc": 100, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java"}, {"severity": "debug", "msg": "\"Reading to [\" + className + \"] as \\\"\" + contentType + \"\\\"\"", "lineLoc": 109, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java"}, {"severity": "trace", "msg": "\"No content-type, using 'application/octet-stream'\"", "lineLoc": 136, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/HttpMessageConverterExtractor.java"}, {"severity": "debug", "msg": "\"Response \" + (statusBANGEQnullQUESstatus:code)", "lineLoc": 771, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java"}, {"severity": "debug", "msg": "\"Accept=\" + allSupportedMediaTypes", "lineLoc": 853, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java"}, {"severity": "debug", "msg": "\"Writing [\" + body + \"] as \\\"\" + mediaType + \"\\\"\"", "lineLoc": 964, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java"}, {"severity": "debug", "msg": "\"Writing [\" + body + \"] with \" + classname", "lineLoc": 968, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java"}, {"severity": "debug", "msg": "\"No ContextLoaderListener registered, as \" + \"createRootApplicationContext() did not return an application context\"", "lineLoc": 67, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/AbstractContextLoaderInitializer.java"}, {"severity": "error", "msg": "\"Couldn't invoke destroy method of attribute with name '\" + attrName + \"'\",ex", "lineLoc": 72, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/ContextCleanupListener.java"}, {"severity": "info", "msg": "\"Root WebApplicationContext: initialization started\"", "lineLoc": 270, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java"}, {"severity": "info", "msg": "\"Root WebApplicationContext initialized in \" + elapsedTime + \" ms\"", "lineLoc": 306, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java"}, {"severity": "error", "msg": "\"Context initialization failed\",ex", "lineLoc": 312, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/ContextLoader.java"}, {"severity": "warn", "msg": "\"Could not register destruction callback [\" + callback + \"] for attribute '\" + name + \"' because FacesRequestAttributes does not support such callbacks\"", "lineLoc": 127, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/FacesRequestAttributes.java"}, {"severity": "trace", "msg": "\"Ignoring failure in postProcess method\",ex", "lineLoc": 79, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/CallableInterceptorChain.java"}, {"severity": "trace", "msg": "\"Ignoring failure in afterCompletion method\",ex", "lineLoc": 147, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/CallableInterceptorChain.java"}, {"severity": "debug", "msg": "\"Failed to process async result\",ex", "lineLoc": 226, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java"}, {"severity": "debug", "msg": "\"Failed to handle timeout result\",ex", "lineLoc": 304, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java"}, {"severity": "debug", "msg": "\"Failed to handle error result\",ex", "lineLoc": 322, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResult.java"}, {"severity": "trace", "msg": "\"Ignoring failure in afterCompletion method\",ex", "lineLoc": 110, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/DeferredResultInterceptorChain.java"}, {"severity": "debug", "msg": "\"Async request timeout for \" + formatRequestUri()", "lineLoc": 299, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"}, {"severity": "debug", "msg": "\"Async request error for \" + formatRequestUri() + \": \" + ex", "lineLoc": 307, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"}, {"severity": "warn", "msg": "\"\\n!!!\\n\" + \"An Executor is required to handle java.util.concurrent.Callable return values.\\n\" + \"Please, configure a TaskExecutor in the MVC config under \\\"async support\\\".\\n\" + \"The \" + executorTypeName + \" currently in use is not suitable under load.\\n\" + \"-------------------------------\\n\" + \"Request URI: '\" + formatRequestUri() + \"'\\n\" + \"!!!\"", "lineLoc": 350, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"}, {"severity": "debug", "msg": "\"Async result set but request already complete: \" + formatRequestUri()", "lineLoc": 378, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"}, {"severity": "debug", "msg": "\"Async \" + (isErrorQUES\"error\":\"result set\") + \", dispatch to \" + formatRequestUri()", "lineLoc": 385, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"}, {"severity": "debug", "msg": "\"Started async request\"", "lineLoc": 469, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"}, {"severity": "debug", "msg": "\"Registering annotated classes: [\" + StringUtils.collectionToCommaDelimitedString(this.annotatedClasses) + \"]\"", "lineLoc": 213, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.java"}, {"severity": "debug", "msg": "\"Scanning base packages: [\" + StringUtils.collectionToCommaDelimitedString(this.basePackages) + \"]\"", "lineLoc": 221, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.java"}, {"severity": "trace", "msg": "\"Registering [\" + configLocation + \"]\"", "lineLoc": 233, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.java"}, {"severity": "trace", "msg": "\"Could not load class for config location [\" + configLocation + \"] - trying package scan. \" + ex", "lineLoc": 239, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.java"}, {"severity": "debug", "msg": "\"No annotated classes found for specified class/package [\" + configLocation + \"]\"", "lineLoc": 244, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/AnnotationConfigWebApplicationContext.java"}, {"severity": "debug", "msg": "\"Replacing existing ServletContext attribute with name '\" + attributeName + \"'\"", "lineLoc": 75, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/ServletContextAttributeExporter.java"}, {"severity": "trace", "msg": "\"Exported ServletContext attribute with name '\" + attributeName + \"'\"", "lineLoc": 80, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/ServletContextAttributeExporter.java"}, {"severity": "debug", "msg": "\"Searching jar file [\" + jarFilePath + \"] for entries matching [\" + entryPattern + \"]\"", "lineLoc": 159, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/ServletContextResourcePatternResolver.java"}, {"severity": "warn", "msg": "\"Cannot search for matching resources in jar file [\" + jarFilePath + \"] because the jar cannot be opened through the file system\",ex", "lineLoc": 180, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/ServletContextResourcePatternResolver.java"}, {"severity": "debug", "msg": "\"Current WebApplicationContext is not available for processing of \" + ClassUtils.getShortName(target.getClass()) + \": \" + \"Make sure this class gets constructed in a Spring web application. Proceeding without injection.\"", "lineLoc": 89, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/context/support/SpringBeanAutowiringSupport.java"}, {"severity": "trace", "msg": "\"Skip: response already contains \\\"Access-Control-Allow-Origin\\\"\"", "lineLoc": 71, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/DefaultCorsProcessor.java"}, {"severity": "trace", "msg": "\"Skip: request is from same origin\"", "lineLoc": 77, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/DefaultCorsProcessor.java"}, {"severity": "debug", "msg": "\"Reject: '\" + requestOrigin + \"' origin is not allowed\"", "lineLoc": 129, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/DefaultCorsProcessor.java"}, {"severity": "debug", "msg": "\"Reject: HTTP '\" + requestMethod + \"' is not allowed\"", "lineLoc": 137, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/DefaultCorsProcessor.java"}, {"severity": "debug", "msg": "\"Reject: headers '\" + requestHeaders + \"' are not allowed\"", "lineLoc": 145, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/DefaultCorsProcessor.java"}, {"severity": "trace", "msg": "\"Skip: response already contains \\\"Access-Control-Allow-Origin\\\"\"", "lineLoc": 66, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/reactive/DefaultCorsProcessor.java"}, {"severity": "trace", "msg": "\"Skip: request is from same origin\"", "lineLoc": 71, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/reactive/DefaultCorsProcessor.java"}, {"severity": "debug", "msg": "\"Reject: '\" + requestOrigin + \"' origin is not allowed\"", "lineLoc": 116, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/reactive/DefaultCorsProcessor.java"}, {"severity": "debug", "msg": "\"Reject: HTTP '\" + requestMethod + \"' is not allowed\"", "lineLoc": 124, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/reactive/DefaultCorsProcessor.java"}, {"severity": "debug", "msg": "\"Reject: headers '\" + requestHeaders + \"' are not allowed\"", "lineLoc": 132, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/cors/reactive/DefaultCorsProcessor.java"}, {"severity": "debug", "msg": "message", "lineLoc": 47, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/filter/CommonsRequestLoggingFilter.java"}, {"severity": "debug", "msg": "message", "lineLoc": 55, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/filter/CommonsRequestLoggingFilter.java"}, {"severity": "error", "msg": "msg,ex", "lineLoc": 232, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/filter/GenericFilterBean.java"}, {"severity": "debug", "msg": "\"Filter '\" + filterConfig.getFilterName() + \"' configured for use\"", "lineLoc": 241, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/filter/GenericFilterBean.java"}, {"severity": "trace", "msg": "\"Cleared thread-bound request context: \" + request", "lineLoc": 104, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/filter/RequestContextFilter.java"}, {"severity": "trace", "msg": "\"Bound request context to thread: \" + request", "lineLoc": 114, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/filter/RequestContextFilter.java"}, {"severity": "trace", "msg": "\"Attempting to resolve property '\" + beanName + \"' in root WebApplicationContext\"", "lineLoc": 77, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.java"}, {"severity": "debug", "msg": "\"Successfully resolved property '\" + beanName + \"' in root WebApplicationContext\"", "lineLoc": 81, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.java"}, {"severity": "debug", "msg": "\"Attempting to resolve property '\" + beanName + \"' in root WebApplicationContext\"", "lineLoc": 115, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.java"}, {"severity": "debug", "msg": "\"Successfully resolved property '\" + beanName + \"' in root WebApplicationContext\"", "lineLoc": 119, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/jsf/el/WebApplicationContextFacesELResolver.java"}, {"severity": "trace", "msg": "\"Arguments: \" + Arrays.toString(args)", "lineLoc": 136, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java"}, {"severity": "debug", "msg": "formatArgumentError(parameter,error)", "lineLoc": 173, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java"}, {"severity": "warn", "msg": "\"Could not decode multipart item '\" + fileItem.getFieldName() + \"' with encoding '\" + partEncoding + \"': using platform default\"", "lineLoc": 264, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsFileUploadSupport.java"}, {"severity": "warn", "msg": "\"Failed to perform multipart cleanup for servlet request\",ex", "lineLoc": 198, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java"}, {"severity": "trace", "msg": "\"Resolving multipart request\"", "lineLoc": 112, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/multipart/support/MultipartFilter.java"}, {"severity": "trace", "msg": "\"Not a multipart request\"", "lineLoc": 119, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/multipart/support/MultipartFilter.java"}, {"severity": "debug", "msg": "\"Using MultipartResolver '\" + beanName + \"' for MultipartFilter\"", "lineLoc": 158, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/multipart/support/MultipartFilter.java"}, {"severity": "debug", "msg": "\"enableLoggingRequestDetails='\" + this.enableLoggingRequestDetails + \"': form data and headers will be \" + value", "lineLoc": 227, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java"}, {"severity": "error", "msg": "logPrefix + \"500 Server Error for \" + formatRequest(request),ex", "lineLoc": 293, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/server/adapter/HttpWebHandlerAdapter.java"}, {"severity": "debug", "msg": "logPrefix + formatError(ex,exchange.getRequest())", "lineLoc": 76, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java"}, {"severity": "trace", "msg": "\"Added cookie [\" + getCookieName() + \"=\" + cookieValue + \"]\"", "lineLoc": 199, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/util/CookieGenerator.java"}, {"severity": "trace", "msg": "\"Removed cookie '\" + getCookieName() + \"'\"", "lineLoc": 224, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/util/CookieGenerator.java"}, {"severity": "warn", "msg": "\"Could not decode request string [\" + source + \"] with encoding '\" + enc + \"': falling back to platform default encoding; exception message: \" + ex.getMessage()", "lineLoc": 468, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java"}, {"severity": "debug", "msg": "\"Could not introspect WebSphere web container properties: \" + ex", "lineLoc": 597, "fileLoc": "spring-framework/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java"}, {"severity": "debug", "msg": "logPrefix + \"Cancel signal (to close connection)\")).map(httpResponseARROWLBRACElogResponse(httpResponse,logPrefix", "lineLoc": 105, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ExchangeFunctions.java"}, {"severity": "trace", "msg": "String.format(\"%s \\\"%s\\\" %s against value \\\"%s\\\"\",prefix,desired,matchQUES\"matches\":\"does not match\",actual)", "lineLoc": 292, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java"}, {"severity": "trace", "msg": "logPrefix + String.format(\"Matched %s\",this.predicate)", "lineLoc": 904, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RouterFunctions.java"}, {"severity": "trace", "msg": "logPrefix + String.format(\"Matched nested %s\",this.predicate)", "lineLoc": 939, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RouterFunctions.java"}, {"severity": "trace", "msg": "\"Mapped \" + routerFunction)", "lineLoc": 131, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/RouterFunctionMapping.java"}, {"severity": "trace", "msg": "message", "lineLoc": 134, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/RouterFunctionMapping.java"}, {"severity": "debug", "msg": "message", "lineLoc": 138, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/RouterFunctionMapping.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"Mapped to \" + handler", "lineLoc": 176, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractHandlerMapping.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"Matching patterns \" + matches", "lineLoc": 122, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractUrlHandlerMapping.java"}, {"severity": "trace", "msg": "\"Mapped [\" + urlPath + \"] onto \" + getHandlerDescription(handler)", "lineLoc": 210, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/handler/AbstractUrlHandlerMapping.java"}, {"severity": "trace", "msg": "\"No patterns in \" + formatMappingName()", "lineLoc": 113, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/handler/SimpleUrlHandlerMapping.java"}, {"severity": "debug", "msg": "\"Patterns \" + getHandlerMap().keySet() + \" in \" + formatMappingName()", "lineLoc": 130, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/handler/SimpleUrlHandlerMapping.java"}, {"severity": "trace", "msg": "exchange.getLogPrefix() + \"Skipping \" + resource + \": Manifest does not start with 'CACHE MANIFEST'\"", "lineLoc": 130, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/AppCacheManifestTransformer.java"}, {"severity": "trace", "msg": "logPrefix + \"Resource resolved from cache\"", "lineLoc": 116, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/CachingResourceResolver.java"}, {"severity": "trace", "msg": "\"Path resolved from cache\"", "lineLoc": 160, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/CachingResourceResolver.java"}, {"severity": "trace", "msg": "exchange.getLogPrefix() + \"Resource resolved from cache\"", "lineLoc": 72, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/CachingResourceTransformer.java"}, {"severity": "trace", "msg": "\"Unexpected syntax for @import link at index \" + position", "lineLoc": 227, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/CssLinkResourceTransformer.java"}, {"severity": "trace", "msg": "exchange.getLogPrefix() + \"No \" + coding + \" resource for [\" + resource.getFilename() + \"]\",ex", "lineLoc": 156, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/EncodedResourceResolver.java"}, {"severity": "trace", "msg": "logPrefix + \"No gzip resource for [\" + resource.getFilename() + \"]\",ex", "lineLoc": 63, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/GzipResourceResolver.java"}, {"severity": "warn", "msg": "\"Resource path \\\"\" + resourcePath + \"\\\" was successfully resolved \" + \"but resource \\\"\" + resource.getURL() + \"\\\" is neither under the \" + \"current location \\\"\" + location.getURL() + \"\\\" nor under any of the \" + \"allowed locations \" + (allowedLocationsBANGEQnullQUESArrays.asList(allowedLocations):\"[]\")", "lineLoc": 118, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java"}, {"severity": "trace", "msg": "error,ex", "lineLoc": 130, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java"}, {"severity": "debug", "msg": "error + \": \" + ex.getMessage()", "lineLoc": 133, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java"}, {"severity": "warn", "msg": "\"Resolved resource path contains encoded \\\"../\\\" or \\\"..\\\\\\\": \" + resourcePath", "lineLoc": 197, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java"}, {"severity": "trace", "msg": "\"No resource handling mappings found\"", "lineLoc": 107, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceUrlProvider.java"}, {"severity": "trace", "msg": "exchange.getLogPrefix() + \"No match for \\\"\" + lookupPath + \"\\\"\"", "lineLoc": 161, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceUrlProvider.java"}, {"severity": "warn", "msg": "\"Locations list is empty. No resources will be served unless a \" + \"custom ResourceResolver is configured as an alternative to PathResourceResolver.\"", "lineLoc": 246, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"}, {"severity": "info", "msg": "\"Locations list is empty. No resources will be served unless a \" + \"custom ResourceResolver is configured as an alternative to PathResourceResolver.\"", "lineLoc": 291, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"Resource not found\"", "lineLoc": 324, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"}, {"severity": "trace", "msg": "exchange.getLogPrefix() + \"Resource not modified\"", "lineLoc": 343, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"}, {"severity": "warn", "msg": "\"Path with \\\"WEB-INF\\\" or \\\"META-INF\\\": [\" + path + \"]\"", "lineLoc": 496, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"}, {"severity": "warn", "msg": "\"Path represents URL or has \\\"url:\\\" prefix: [\" + path + \"]\"", "lineLoc": 504, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"}, {"severity": "warn", "msg": "\"Path contains \\\"../\\\" after call to StringUtils#cleanPath: [\" + path + \"]\"", "lineLoc": 511, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"}, {"severity": "trace", "msg": "logPrefix + \"Found resource for \\\"\" + requestPath + \"\\\", but version [\" + candidate + \"] does not match\"", "lineLoc": 189, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/resource/VersionResourceResolver.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"Found 'Content-Type:\" + contentType + \"' in response\"", "lineLoc": 126, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java"}, {"severity": "debug", "msg": "\"Using '\" + selected + \"' given \" + acceptableTypes + \" and supported \" + producibleTypes", "lineLoc": 160, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"No match for \" + acceptableTypes + \", supported: \" + producibleTypes", "lineLoc": 165, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java"}, {"severity": "trace", "msg": "\"Register \\\"\" + mapping + \"\\\" to \" + method.toGenericString()", "lineLoc": 130, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "\"Unregister mapping \\\"\" + mapping", "lineLoc": 142, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java"}, {"severity": "debug", "msg": "total + \" mappings in \" + formatMappingName()", "lineLoc": 162, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "\"Could not resolve type for bean '\" + beanName + \"'\",ex", "lineLoc": 184, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "formatMappings(userType,methods)", "lineLoc": 208, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "exchange.getLogPrefix() + matches.size() + \" matching mappings: \" + matches", "lineLoc": 326, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + formatArgumentError(parameter,message)", "lineLoc": 211, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + (contentTypeBANGEQnullQUES\"Content-Type:\" + contentType:\"No Content-Type, using \" + MediaType.APPLICATION_OCTET_STREAM)", "lineLoc": 157, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"0..N [\" + elementType + \"]\"", "lineLoc": 167, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"0..1 [\" + elementType + \"]\"", "lineLoc": 183, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageReaderArgumentResolver.java"}, {"severity": "debug", "msg": "logPrefix + (publisherINSTANCEOFMonoQUES\"0..1\":\"0..N\") + \" [\" + elementType + \"]\"", "lineLoc": 144, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.java"}, {"severity": "debug", "msg": "\"ControllerAdvice beans: none\"", "lineLoc": 246, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java"}, {"severity": "debug", "msg": "\"ControllerAdvice beans: \" + modelSize + \" @ModelAttribute, \" + binderSize + \" @InitBinder, \" + handlerSize + \" @ExceptionHandler\"", "lineLoc": 249, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"Using @ExceptionHandler \" + invocable", "lineLoc": 217, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java"}, {"severity": "warn", "msg": "exchange.getLogPrefix() + \"Failure in @ExceptionHandler \" + invocable,invocationEx", "lineLoc": 230, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"Decoding part '\" + part.name() + \"'\"", "lineLoc": 142, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"View \" + formatViewName() + \", model \" + (modelBANGEQnullQUESmodel:Collections.emptyMap())", "lineLoc": 192, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + \"Rendering [\" + getUrl() + \"]\"", "lineLoc": 191, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/freemarker/FreeMarkerView.java"}, {"severity": "trace", "msg": "getLogPrefix() + \"Received \" + message", "lineLoc": 257, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/adapter/AbstractListenerWebSocketSession.java"}, {"severity": "trace", "msg": "getLogPrefix() + \"Sending \" + message", "lineLoc": 299, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/adapter/AbstractListenerWebSocketSession.java"}, {"severity": "debug", "msg": "getLogPrefix() + \"Session id \\\"\" + getId() + \"\\\" for \" + getHandshakeInfo().getUri()", "lineLoc": 80, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/adapter/AbstractWebSocketSession.java"}, {"severity": "trace", "msg": "getLogPrefix() + \"Received \" + message", "lineLoc": 78, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/adapter/ReactorNettyWebSocketSession.java"}, {"severity": "trace", "msg": "getLogPrefix() + \"Sending \" + message", "lineLoc": 88, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/adapter/ReactorNettyWebSocketSession.java"}, {"severity": "debug", "msg": "\"Connecting to \" + url", "lineLoc": 146, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/client/JettyWebSocketClient.java"}, {"severity": "debug", "msg": "\"Started session '\" + session.getId() + \"' for \" + url", "lineLoc": 93, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/client/ReactorNettyWebSocketClient.java"}, {"severity": "debug", "msg": "\"Connecting to \" + url", "lineLoc": 99, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/client/ReactorNettyWebSocketClient.java"}, {"severity": "debug", "msg": "\"Connecting to \" + url", "lineLoc": 103, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/client/StandardWebSocketClient.java"}, {"severity": "debug", "msg": "\"Connecting to \" + url", "lineLoc": 162, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/client/UndertowWebSocketClient.java"}, {"severity": "debug", "msg": "exchange.getLogPrefix() + reason", "lineLoc": 242, "fileLoc": "spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/socket/server/support/HandshakeWebSocketService.java"}, {"severity": "trace", "msg": "\"Detected \" + this.multipartResolver", "lineLoc": 522, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Detected \" + this.multipartResolver.getClass().getSimpleName()", "lineLoc": 525, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No MultipartResolver '\" + MULTIPART_RESOLVER_BEAN_NAME + \"' declared\"", "lineLoc": 532, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"Detected \" + this.localeResolver", "lineLoc": 546, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Detected \" + this.localeResolver.getClass().getSimpleName()", "lineLoc": 549, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No LocaleResolver '\" + LOCALE_RESOLVER_BEAN_NAME + \"': using default [\" + this.localeResolver.getClass().getSimpleName() + \"]\"", "lineLoc": 556, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"Detected \" + this.themeResolver", "lineLoc": 571, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Detected \" + this.themeResolver.getClass().getSimpleName()", "lineLoc": 574, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No ThemeResolver '\" + THEME_RESOLVER_BEAN_NAME + \"': using default [\" + this.themeResolver.getClass().getSimpleName() + \"]\"", "lineLoc": 581, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No HandlerMappings declared for servlet '\" + getServletName() + \"': using default strategies from DispatcherServlet.properties\"", "lineLoc": 620, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No HandlerAdapters declared for servlet '\" + getServletName() + \"': using default strategies from DispatcherServlet.properties\"", "lineLoc": 659, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No HandlerExceptionResolvers declared in servlet '\" + getServletName() + \"': using default strategies from DispatcherServlet.properties\"", "lineLoc": 699, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"Detected \" + this.viewNameTranslator.getClass().getSimpleName()", "lineLoc": 714, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Detected \" + this.viewNameTranslator", "lineLoc": 717, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No RequestToViewNameTranslator '\" + REQUEST_TO_VIEW_NAME_TRANSLATOR_BEAN_NAME + \"': using default [\" + this.viewNameTranslator.getClass().getSimpleName() + \"]\"", "lineLoc": 724, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No ViewResolvers declared for servlet '\" + getServletName() + \"': using default strategies from DispatcherServlet.properties\"", "lineLoc": 763, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"Detected \" + this.flashMapManager.getClass().getSimpleName()", "lineLoc": 778, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Detected \" + this.flashMapManager", "lineLoc": 781, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No FlashMapManager '\" + FLASH_MAP_MANAGER_BEAN_NAME + \"': using default [\" + this.flashMapManager.getClass().getSimpleName() + \"]\"", "lineLoc": 788, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"ModelAndViewDefiningException encountered\",exception", "lineLoc": 1104, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"No view rendering, null ModelAndView returned.\"", "lineLoc": 1123, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"Request already resolved to MultipartHttpServletRequest, e.g. by MultipartFilter\"", "lineLoc": 1166, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Multipart resolution previously failed for current request - \" + \"skipping re-resolution for undisturbed error rendering\"", "lineLoc": 1170, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Multipart resolution failed for error dispatch\",ex", "lineLoc": 1179, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"Using resolved error view: \" + exMv,ex", "lineLoc": 1316, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Using resolved error view: \" + exMv", "lineLoc": 1319, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "trace", "msg": "\"Rendering view [\" + view + \"] \"", "lineLoc": 1364, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "debug", "msg": "\"Error rendering view [\" + view + \"]\",ex", "lineLoc": 1374, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java"}, {"severity": "info", "msg": "\"Initializing Servlet '\" + getServletName() + \"'\"", "lineLoc": 524, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "error", "msg": "\"Context initialization failed\",ex", "lineLoc": 533, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "debug", "msg": "\"enableLoggingRequestDetails='\" + this.enableLoggingRequestDetails + \"': request parameters and headers will be \" + value", "lineLoc": 541, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "info", "msg": "\"Completed initialization in \" + (System.currentTimeMillis()SUBstartTime) + \" ms\"", "lineLoc": 546, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "debug", "msg": "\"Unresolved failure from \\\"\" + dispatchType + \"\\\" dispatch: \" + failureCause", "lineLoc": 1093, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "trace", "msg": "\"Failed to complete request\",failureCause", "lineLoc": 1097, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "debug", "msg": "\"Failed to complete request: \" + failureCause", "lineLoc": 1100, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "debug", "msg": "\"Exiting but response remains open for further handling\"", "lineLoc": 1106, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "debug", "msg": "\"Exiting from \\\"\" + dispatchType + \"\\\" dispatch, status \" + status + headers", "lineLoc": 1126, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "debug", "msg": "\"Completed \" + (httpStatusBANGEQnullQUEShttpStatus:status) + headers", "lineLoc": 1130, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java"}, {"severity": "error", "msg": "\"HandlerInterceptor.afterCompletion threw exception\",ex2", "lineLoc": 177, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/HandlerExecutionChain.java"}, {"severity": "error", "msg": "\"Interceptor [\" + interceptorsLBRACKETiRBRACKET + \"] failed in afterConcurrentHandlingStarted\",ex", "lineLoc": 196, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/HandlerExecutionChain.java"}, {"severity": "error", "msg": "\"Failed to set bean properties on servlet '\" + getServletName() + \"'\",ex", "lineLoc": 162, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/HttpServletBean.java"}, {"severity": "debug", "msg": "\"Detected \" + getHandlerMap().size() + \" mappings in \" + formatMappingName()", "lineLoc": 86, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractDetectingUrlHandlerMapping.java"}, {"severity": "debug", "msg": "\"Resolved [\" + ex + \"]\" + (result.isEmpty()QUES\"\":\" to \" + result)", "lineLoc": 143, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerExceptionResolver.java"}, {"severity": "trace", "msg": "\"Mapped to \" + handler", "lineLoc": 417, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java"}, {"severity": "debug", "msg": "\"Mapped to \" + executionChain.getHandler()", "lineLoc": 420, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java"}, {"severity": "trace", "msg": "\"Register \\\"\" + mapping + \"\\\" to \" + method.toGenericString()", "lineLoc": 173, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "\"Unregister mapping \\\"\" + mapping + \"\\\"\"", "lineLoc": 185, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "\"Could not resolve type for bean '\" + beanName + \"'\",ex", "lineLoc": 248, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "formatMappings(userType,methods)", "lineLoc": 278, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java"}, {"severity": "debug", "msg": "total + \" mappings in \" + formatMappingName()", "lineLoc": 350, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "matches.size() + \" matching mappings: \" + matches", "lineLoc": 400, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMethodMapping.java"}, {"severity": "trace", "msg": "\"Matching patterns \" + matchingPatterns", "lineLoc": 192, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java"}, {"severity": "trace", "msg": "\"URI variables \" + uriTemplateVariables", "lineLoc": 226, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java"}, {"severity": "trace", "msg": "\"Root mapping to \" + getHandlerDescription(handler)", "lineLoc": 353, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java"}, {"severity": "trace", "msg": "\"Default mapping to \" + getHandlerDescription(handler)", "lineLoc": 359, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java"}, {"severity": "trace", "msg": "\"Mapped [\" + urlPath + \"] onto \" + getHandlerDescription(handler)", "lineLoc": 366, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java"}, {"severity": "debug", "msg": "\"Resolving to default view '\" + this.defaultErrorView + \"'\"", "lineLoc": 229, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.java"}, {"severity": "debug", "msg": "\"Resolving to view '\" + viewName + \"' based on mapping [\" + dominantMapping + \"]\"", "lineLoc": 259, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.java"}, {"severity": "debug", "msg": "\"Applying HTTP status \" + statusCode", "lineLoc": 319, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/SimpleMappingExceptionResolver.java"}, {"severity": "trace", "msg": "\"No patterns in \" + formatMappingName()", "lineLoc": 116, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.java"}, {"severity": "debug", "msg": "\"Patterns \" + patterns + \" in \" + formatMappingName()", "lineLoc": 139, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/SimpleUrlHandlerMapping.java"}, {"severity": "debug", "msg": "\"Ignoring \" + cookieDescription", "lineLoc": 222, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/CookieLocaleResolver.java"}, {"severity": "trace", "msg": "\"Parsed cookie value [\" + cookie.getValue() + \"] into locale '\" + locale + \"'\" + (timeZoneBANGEQnullQUES\" and time zone '\" + timeZone.getID() + \"'\":\"\")", "lineLoc": 230, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/CookieLocaleResolver.java"}, {"severity": "debug", "msg": "\"Ignoring invalid locale value [\" + newLocale + \"]: \" + ex.getMessage()", "lineLoc": 157, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/LocaleChangeInterceptor.java"}, {"severity": "trace", "msg": "\"Returning view name '\" + viewName + \"'\"", "lineLoc": 105, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/AbstractUrlViewController.java"}, {"severity": "trace", "msg": "\"Included servlet [\" + this.servletName + \"] in ServletForwardingController '\" + this.beanName + \"'\"", "lineLoc": 136, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/ServletForwardingController.java"}, {"severity": "trace", "msg": "\"Forwarded to servlet [\" + this.servletName + \"] in ServletForwardingController '\" + this.beanName + \"'\"", "lineLoc": 143, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/ServletForwardingController.java"}, {"severity": "trace", "msg": "\"Applying \" + cacheControl", "lineLoc": 178, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java"}, {"severity": "trace", "msg": "\"Applying cacheSeconds \" + cacheSeconds", "lineLoc": 184, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java"}, {"severity": "trace", "msg": "\"Applying default cacheSeconds\"", "lineLoc": 190, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java"}, {"severity": "warn", "msg": "\"Failure while trying to resolve exception [\" + ex.getClass().getName() + \"]\",resolveEx", "lineLoc": 89, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java"}, {"severity": "debug", "msg": "\"Found 'Content-Type:\" + contentType + \"' in response\"", "lineLoc": 223, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java"}, {"severity": "debug", "msg": "\"No match for \" + acceptableTypes + \", supported: \" + producibleTypes", "lineLoc": 249, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java"}, {"severity": "debug", "msg": "\"Using '\" + selectedMediaType + \"', given \" + acceptableTypes + \" and supported \" + producibleTypes", "lineLoc": 268, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java"}, {"severity": "debug", "msg": "\"Nothing to write: null body\"", "lineLoc": 298, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java"}, {"severity": "debug", "msg": "\"ControllerAdvice beans: none\"", "lineLoc": 299, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java"}, {"severity": "debug", "msg": "\"ControllerAdvice beans: \" + handlerSize + \" @ExceptionHandler, \" + adviceSize + \" ResponseBodyAdvice\"", "lineLoc": 302, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java"}, {"severity": "debug", "msg": "\"Using @ExceptionHandler \" + exceptionHandlerMethod", "lineLoc": 403, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java"}, {"severity": "warn", "msg": "\"Failure in @ExceptionHandler \" + exceptionHandlerMethod,invocationEx", "lineLoc": 419, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java"}, {"severity": "warn", "msg": "\"Skipping URI variable '\" + name + \"' because request contains bind value with same name.\"", "lineLoc": 70, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExtendedServletRequestDataBinder.java"}, {"severity": "trace", "msg": "\"Using first of multiple paths on \" + controllerType.getName()", "lineLoc": 585, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java"}, {"severity": "trace", "msg": "\"Using first of multiple paths on \" + method.toGenericString()", "lineLoc": 601, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java"}, {"severity": "debug", "msg": "\"Failed to create controller proxy, falling back on default constructor\",ex", "lineLoc": 802, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java"}, {"severity": "warn", "msg": "\"\\n!!!\\n\" + \"Streaming through a reactive type requires an Executor to write to the response.\\n\" + \"Please, configure a TaskExecutor in the MVC config under \\\"async support\\\".\\n\" + \"The \" + executorTypeName + \" currently in use is not suitable under load.\\n\" + \"-------------------------------\\n\" + \"Controller:\\t\" + returnType.getContainingClass().getName() + \"\\n\" + \"Method:\\t\\t\" + returnType.getMethod().getName() + \"\\n\" + \"Returning:\\t\" + ResolvableType.forMethodParameter(returnType).toString() + \"\\n\" + \"!!!\"", "lineLoc": 187, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler.java"}, {"severity": "trace", "msg": "\"Connection timeout for \" + this.emitter", "lineLoc": 242, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler.java"}, {"severity": "trace", "msg": "\"Send for \" + this.emitter + \" failed: \" + ex", "lineLoc": 311, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler.java"}, {"severity": "trace", "msg": "\"Publisher for \" + this.emitter + \" failed: \" + ex", "lineLoc": 324, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler.java"}, {"severity": "trace", "msg": "\"Publisher for \" + this.emitter + \" completed\"", "lineLoc": 330, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ReactiveTypeHandler.java"}, {"severity": "debug", "msg": "\"ControllerAdvice beans: none\"", "lineLoc": 619, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java"}, {"severity": "debug", "msg": "\"ControllerAdvice beans: \" + modelSize + \" @ModelAttribute, \" + binderSize + \" @InitBinder, \" + reqCount + \" RequestBodyAdvice, \" + resCount + \" ResponseBodyAdvice\"", "lineLoc": 622, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java"}, {"severity": "warn", "msg": "\"Async request timed out\"", "lineLoc": 439, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandler.java"}, {"severity": "trace", "msg": "formatErrorForReturnValue(returnValue),ex", "lineLoc": 124, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ServletInvocableHandlerMethod.java"}, {"severity": "warn", "msg": "\"Failure while trying to resolve exception [\" + ex.getClass().getName() + \"]\",handlerEx", "lineLoc": 234, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java"}, {"severity": "warn", "msg": "\"Async request timed out\"", "lineLoc": 536, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/DefaultHandlerExceptionResolver.java"}, {"severity": "trace", "msg": "\"Skipping \" + resource + \": Manifest does not start with 'CACHE MANIFEST'\"", "lineLoc": 112, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/AppCacheManifestTransformer.java"}, {"severity": "trace", "msg": "\"Resource resolved from cache\"", "lineLoc": 116, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/CachingResourceResolver.java"}, {"severity": "trace", "msg": "\"Path resolved from cache\"", "lineLoc": 166, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/CachingResourceResolver.java"}, {"severity": "trace", "msg": "\"Resource resolved from cache\"", "lineLoc": 75, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/CachingResourceTransformer.java"}, {"severity": "trace", "msg": "\"Unexpected syntax for @import link at index \" + index", "lineLoc": 187, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/CssLinkResourceTransformer.java"}, {"severity": "trace", "msg": "\"No \" + coding + \" resource for [\" + resource.getFilename() + \"]\",ex", "lineLoc": 153, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/EncodedResourceResolver.java"}, {"severity": "trace", "msg": "\"No gzip resource for [\" + resource.getFilename() + \"]\",ex", "lineLoc": 64, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/GzipResourceResolver.java"}, {"severity": "trace", "msg": "error,ex", "lineLoc": 163, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"}, {"severity": "debug", "msg": "error + \": \" + ex.getMessage()", "lineLoc": 166, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"}, {"severity": "warn", "msg": "\"Resource path \\\"\" + resourcePath + \"\\\" was successfully resolved \" + \"but resource \\\"\" + resource.getURL() + \"\\\" is neither under the \" + \"current location \\\"\" + location.getURL() + \"\\\" nor under any of the \" + \"allowed locations \" + (allowedLocationsBANGEQnullQUESArrays.asList(allowedLocations):\"[]\")", "lineLoc": 191, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"}, {"severity": "warn", "msg": "\"Resolved resource path contains encoded \\\"../\\\" or \\\"..\\\\\\\": \" + resourcePath", "lineLoc": 287, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"}, {"severity": "warn", "msg": "\"Locations list is empty. No resources will be served unless a \" + \"custom ResourceResolver is configured as an alternative to PathResourceResolver.\"", "lineLoc": 325, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"}, {"severity": "debug", "msg": "\"Resource not found\"", "lineLoc": 453, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"}, {"severity": "trace", "msg": "\"Resource not modified\"", "lineLoc": 468, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"}, {"severity": "warn", "msg": "\"Path with \\\"WEB-INF\\\" or \\\"META-INF\\\": [\" + path + \"]\"", "lineLoc": 634, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"}, {"severity": "warn", "msg": "\"Path represents URL or has \\\"url:\\\" prefix: [\" + path + \"]\"", "lineLoc": 642, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"}, {"severity": "warn", "msg": "\"Path contains \\\"../\\\" after call to StringUtils#cleanPath: [\" + path + \"]\"", "lineLoc": 649, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"}, {"severity": "trace", "msg": "\"ResourceUrlProvider not available via request attribute \" + \"ResourceUrlProviderExposingInterceptor.RESOURCE_URL_PROVIDER_ATTR\"", "lineLoc": 113, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlEncodingFilter.java"}, {"severity": "trace", "msg": "\"No resource handling mappings found\"", "lineLoc": 154, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java"}, {"severity": "trace", "msg": "\"No match for \\\"\" + lookupPath + \"\\\"\"", "lineLoc": 246, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceUrlProvider.java"}, {"severity": "trace", "msg": "\"Found resource for \\\"\" + requestPath + \"\\\", but version [\" + candidateVersion + \"] does not match\"", "lineLoc": 187, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/VersionResourceResolver.java"}, {"severity": "trace", "msg": "\"Found \" + result.get(0)", "lineLoc": 151, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractFlashMapManager.java"}, {"severity": "error", "msg": "ex.getMessage(),ex", "lineLoc": 86, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/RequestContextAwareTag.java"}, {"severity": "error", "msg": "ex.getMessage(),ex", "lineLoc": 90, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/tags/RequestContextAwareTag.java"}, {"severity": "trace", "msg": "formatKey(cacheKey) + \"served from cache\"", "lineLoc": 172, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractCachingViewResolver.java"}, {"severity": "warn", "msg": "\"Caching is OFF (removal not necessary)\"", "lineLoc": 205, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractCachingViewResolver.java"}, {"severity": "debug", "msg": "\"Clearing all views from the cache\"", "lineLoc": 227, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractCachingViewResolver.java"}, {"severity": "trace", "msg": "\"Exposed request attributes to model: \" + exposed", "lineLoc": 134, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractTemplateView.java"}, {"severity": "trace", "msg": "\"Exposed session attributes to model: \" + exposed", "lineLoc": 156, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractTemplateView.java"}, {"severity": "debug", "msg": "\"Rendering [\" + getUrl() + \"]\"", "lineLoc": 175, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractTemplateView.java"}, {"severity": "debug", "msg": "\"View \" + formatViewName() + \", model \" + (modelBANGEQnullQUESmodel:Collections.emptyMap()) + (this.staticAttributes.isEmpty()QUES\"\":\", static attributes \" + this.staticAttributes)", "lineLoc": 309, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/AbstractView.java"}, {"severity": "debug", "msg": "\"Found bean named '\" + viewName + \"' but it does not implement View\"", "lineLoc": 85, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java"}, {"severity": "warn", "msg": "\"No ViewResolvers configured\"", "lineLoc": 215, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java"}, {"severity": "debug", "msg": "\"Using 406 NOT_ACCEPTABLE\" + mediaTypeInfo", "lineLoc": 239, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java"}, {"severity": "debug", "msg": "\"View remains unresolved\" + mediaTypeInfo", "lineLoc": 244, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java"}, {"severity": "debug", "msg": "ex.getMessage()", "lineLoc": 275, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java"}, {"severity": "debug", "msg": "\"Selected '\" + mediaType + \"' given \" + requestedMediaTypes", "lineLoc": 347, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java"}, {"severity": "debug", "msg": "\"Including [\" + getUrl() + \"]\"", "lineLoc": 160, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/InternalResourceView.java"}, {"severity": "debug", "msg": "\"Forwarding to [\" + getUrl() + \"]\"", "lineLoc": 168, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/InternalResourceView.java"}, {"severity": "debug", "msg": "\"Applying stylesheet [\" + url + \"]\"", "lineLoc": 466, "fileLoc": "spring-framework/spring-webmvc/src/main/java/org/springframework/web/servlet/view/xslt/XsltView.java"}, {"severity": "trace", "msg": "\"Sending \" + message + \", \" + this", "lineLoc": 102, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java"}, {"severity": "debug", "msg": "\"Closing \" + this", "lineLoc": 140, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/adapter/AbstractWebSocketSession.java"}, {"severity": "warn", "msg": "\"Unhandled exception after connection closed for \" + this,ex", "lineLoc": 123, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketHandlerAdapter.java"}, {"severity": "warn", "msg": "\"Unhandled on-close exception for \" + this.wsSession,ex", "lineLoc": 148, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/adapter/standard/StandardWebSocketHandlerAdapter.java"}, {"severity": "debug", "msg": "\"Connecting to \" + uri", "lineLoc": 82, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/AbstractWebSocketClient.java"}, {"severity": "info", "msg": "\"Starting \" + getClass().getSimpleName()", "lineLoc": 117, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java"}, {"severity": "info", "msg": "\"Stopping \" + getClass().getSimpleName()", "lineLoc": 129, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java"}, {"severity": "error", "msg": "\"Failed to stop WebSocket connection\",ex", "lineLoc": 135, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java"}, {"severity": "info", "msg": "\"Connecting to WebSocket at \" + getUri()", "lineLoc": 136, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/WebSocketConnectionManager.java"}, {"severity": "info", "msg": "\"Successfully connected\"", "lineLoc": 146, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/WebSocketConnectionManager.java"}, {"severity": "error", "msg": "\"Failed to connect\",ex", "lineLoc": 150, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/WebSocketConnectionManager.java"}, {"severity": "error", "msg": "\"Failed to stop Jetty WebSocketClient\",ex", "lineLoc": 120, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java"}, {"severity": "info", "msg": "\"Connecting to WebSocket at \" + getUri()", "lineLoc": 109, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/AnnotatedEndpointConnectionManager.java"}, {"severity": "info", "msg": "\"Successfully connected to WebSocket\"", "lineLoc": 117, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/AnnotatedEndpointConnectionManager.java"}, {"severity": "error", "msg": "\"Failed to connect to WebSocket\",ex", "lineLoc": 120, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/AnnotatedEndpointConnectionManager.java"}, {"severity": "info", "msg": "\"Connecting to WebSocket at \" + getUri()", "lineLoc": 140, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/EndpointConnectionManager.java"}, {"severity": "info", "msg": "\"Successfully connected to WebSocket\"", "lineLoc": 149, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/EndpointConnectionManager.java"}, {"severity": "error", "msg": "\"Failed to connect to WebSocket\",ex", "lineLoc": 152, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/EndpointConnectionManager.java"}, {"severity": "trace", "msg": "\"Handshake request headers: \" + requestHeaders", "lineLoc": 202, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/StandardWebSocketClient.java"}, {"severity": "trace", "msg": "\"Handshake response headers: \" + response.getHeaders()", "lineLoc": 208, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/client/standard/StandardWebSocketClient.java"}, {"severity": "info", "msg": "WebSocketMessageBrokerStats.this.toString()),initialDelay,this.loggingPeriod,TimeUnit.MILLISECONDS", "lineLoc": 124, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/config/WebSocketMessageBrokerStats.java"}, {"severity": "trace", "msg": "String.format(\"Another send already in progress: \" + \"session id '%s':, \\\"in-progress\\\" send time %d (ms), buffer size %d bytes\",getId(),getTimeSinceSendStarted(),getBufferSize())", "lineLoc": 146, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/ConcurrentWebSocketSessionDecorator.java"}, {"severity": "debug", "msg": "\"Dropped \" + i + \" messages, buffer size: \" + getBufferSize()", "lineLoc": 210, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/ConcurrentWebSocketSessionDecorator.java"}, {"severity": "debug", "msg": "\"Changing close status \" + status + \" to SESSION_NOT_RELIABLE.\"", "lineLoc": 246, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/ConcurrentWebSocketSessionDecorator.java"}, {"severity": "warn", "msg": "\"Unhandled exception after connection closed for \" + this,ex", "lineLoc": 82, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/ExceptionWebSocketHandlerDecorator.java"}, {"severity": "error", "msg": "\"Closing session due to exception for \" + session,exception", "lineLoc": 90, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/ExceptionWebSocketHandlerDecorator.java"}, {"severity": "debug", "msg": "\"New \" + session", "lineLoc": 46, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/LoggingWebSocketHandlerDecorator.java"}, {"severity": "trace", "msg": "\"Handling \" + message + \" in \" + session", "lineLoc": 54, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/LoggingWebSocketHandlerDecorator.java"}, {"severity": "debug", "msg": "\"Transport error in \" + session,exception", "lineLoc": 62, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/LoggingWebSocketHandlerDecorator.java"}, {"severity": "debug", "msg": "session + \" closed with \" + closeStatus", "lineLoc": 70, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/LoggingWebSocketHandlerDecorator.java"}, {"severity": "warn", "msg": "\"Error while destroying \" + handler,ex", "lineLoc": 127, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/handler/PerConnectionWebSocketHandler.java"}, {"severity": "trace", "msg": "\"Incomplete STOMP frame content received in session \" + session + \", bufferSize=\" + decoder.getBufferSize() + \", bufferSizeLimit=\" + decoder.getBufferSizeLimit() + \".\"", "lineLoc": 239, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "error", "msg": "\"Failed to parse \" + webSocketMessage + \" in session \" + session.getId() + \". Sending STOMP ERROR to client.\",ex", "lineLoc": 248, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "trace", "msg": "\"From client: \" + headerAccessor.getShortLogMessage(message.getPayload())", "lineLoc": 270, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "error", "msg": "\"Failed to send client message to application via MessageChannel\" + \" in session \" + session.getId() + \". Sending STOMP ERROR to client.\",ex", "lineLoc": 313, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "error", "msg": "\"Error publishing \" + event,ex", "lineLoc": 385, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "error", "msg": "\"Expected byte[] payload. Ignoring \" + message + \".\"", "lineLoc": 398, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "warn", "msg": "\"No STOMP \\\"subscription\\\" header in \" + message", "lineLoc": 408, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "debug", "msg": "\"Failed to send WebSocket message to client in session \" + session.getId(),ex", "lineLoc": 465, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/StompSubProtocolHandler.java"}, {"severity": "error", "msg": "\"No sub-protocols for \" + handler", "lineLoc": 146, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "warn", "msg": "\"Failed to close '\" + holder.getSession() + \"': \" + ex", "lineLoc": 281, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "error", "msg": "\"Could not find session id in \" + message", "lineLoc": 339, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "debug", "msg": "\"Terminating '\" + session + \"'\",ex", "lineLoc": 360, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "debug", "msg": "\"Failure while closing session \" + sessionId + \".\",secondException", "lineLoc": 367, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "debug", "msg": "\"Failed to send message to client in \" + session + \": \" + message,ex", "lineLoc": 373, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "info", "msg": "\"No messages received after \" + timeSinceCreated + \" ms. \" + \"Closing \" + holder.getSession() + \".\"", "lineLoc": 488, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "warn", "msg": "\"Failed to close unreliable \" + session,ex", "lineLoc": 497, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "debug", "msg": "\"Clearing session \" + session.getId()", "lineLoc": 511, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java"}, {"severity": "trace", "msg": "\"Looking for @MessageExceptionHandler mappings: \" + context", "lineLoc": 62, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketAnnotationMethodMessageHandler.java"}, {"severity": "trace", "msg": "\"Detected @MessageExceptionHandler methods in \" + bean", "lineLoc": 80, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketAnnotationMethodMessageHandler.java"}, {"severity": "debug", "msg": "\"ReadInactivityTask failure\",ex", "lineLoc": 410, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java"}, {"severity": "debug", "msg": "\"WriteInactivityTask failure\",ex", "lineLoc": 428, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java"}, {"severity": "debug", "msg": "\"Failed to close session: \" + session.getId(),ex", "lineLoc": 444, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java"}, {"severity": "trace", "msg": "\"Incomplete STOMP frame content received, bufferSize=\" + this.bufferingDecoder.getBufferSize() + \", bufferSizeLimit=\" + this.bufferingDecoder.getBufferSizeLimit() + \".\"", "lineLoc": 482, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java"}, {"severity": "trace", "msg": "\"Successful request upgrade: \" + upgradeResponse.getHeaders()", "lineLoc": 153, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java"}, {"severity": "debug", "msg": "\"Registering @ServerEndpoint class: \" + endpointClass", "lineLoc": 153, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/ServerEndpointExporter.java"}, {"severity": "debug", "msg": "\"Registering ServerEndpointConfig: \" + endpointConfig", "lineLoc": 167, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/ServerEndpointExporter.java"}, {"severity": "error", "msg": "message", "lineLoc": 68, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/SpringConfigurator.java"}, {"severity": "trace", "msg": "\"Using @ServerEndpoint singleton \" + endpoint", "lineLoc": 76, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/SpringConfigurator.java"}, {"severity": "trace", "msg": "\"Using @ServerEndpoint singleton \" + endpoint", "lineLoc": 85, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/SpringConfigurator.java"}, {"severity": "trace", "msg": "\"Creating new @ServerEndpoint instance of type \" + endpointClass", "lineLoc": 96, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/SpringConfigurator.java"}, {"severity": "trace", "msg": "\"Processing request \" + request.getURI() + \" with headers=\" + headers", "lineLoc": 240, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java"}, {"severity": "error", "msg": "\"Handshake failed due to unexpected HTTP method: \" + request.getMethod()", "lineLoc": 247, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java"}, {"severity": "error", "msg": "\"Missing \\\"Sec-WebSocket-Key\\\" header\"", "lineLoc": 270, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java"}, {"severity": "trace", "msg": "\"Upgrading to WebSocket, subProtocol=\" + subProtocol + \", extensions=\" + extensions", "lineLoc": 288, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java"}, {"severity": "error", "msg": "\"Handshake failed due to invalid Upgrade header: \" + request.getHeaders().getUpgrade()", "lineLoc": 296, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java"}, {"severity": "error", "msg": "\"Handshake failed due to invalid Connection header \" + request.getHeaders().getConnection()", "lineLoc": 304, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java"}, {"severity": "error", "msg": "\"Handshake failed due to unsupported WebSocket version: \" + version + \". Supported versions: \" + Arrays.toString(getSupportedVersions())", "lineLoc": 328, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java"}, {"severity": "debug", "msg": "interceptor + \" returns false from beforeHandshake - precluding handshake\"", "lineLoc": 62, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/HandshakeInterceptorChain.java"}, {"severity": "warn", "msg": "interceptor + \" threw exception in afterHandshake: \" + ex", "lineLoc": 82, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/HandshakeInterceptorChain.java"}, {"severity": "debug", "msg": "\"Handshake request rejected, Origin header value \" + request.getHeaders().getOrigin() + \" not allowed\"", "lineLoc": 98, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/OriginHandshakeInterceptor.java"}, {"severity": "debug", "msg": "servletRequest.getMethod() + \" \" + servletRequest.getRequestURI()", "lineLoc": 161, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java"}, {"severity": "warn", "msg": "\"Failed to close \" + this + \" after transport timeout\",ex", "lineLoc": 129, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "trace", "msg": "\"Sending message \" + messageToSend + \" in \" + this", "lineLoc": 160, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "debug", "msg": "\"Closing session with \" + status + \" in \" + this", "lineLoc": 178, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "warn", "msg": "\"Failed to close \" + this,ex", "lineLoc": 194, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "warn", "msg": "\"Ignoring close since connect() was never invoked\"", "lineLoc": 201, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "debug", "msg": "\"Ignoring close (already closing or closed): current state \" + this.state", "lineLoc": 206, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "trace", "msg": "\"Received heartbeat in \" + this", "lineLoc": 226, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "debug", "msg": "\"Processing SockJS open frame in \" + this", "lineLoc": 239, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"WebSocketHandler.afterConnectionEstablished threw exception in \" + this,ex", "lineLoc": 249, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "debug", "msg": "\"Open frame received in \" + getId() + \" but we're not connecting (current state \" + this.state + \"). The server might have been restarted and lost track of the session.\"", "lineLoc": 255, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"Ignoring received message due to state \" + this.state + \" in \" + this", "lineLoc": 265, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"Failed to decode data for SockJS \\\"message\\\" frame: \" + frame + \" in \" + this,ex", "lineLoc": 278, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "trace", "msg": "\"Processing SockJS message frame \" + frame.getContent() + \" in \" + this", "lineLoc": 289, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"WebSocketHandler.handleMessage threw an exception on \" + frame + \" in \" + this,ex", "lineLoc": 297, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "debug", "msg": "\"Processing SockJS close frame with \" + closeStatus + \" in \" + this", "lineLoc": 313, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"Failed to decode data for \" + frame + \" in \" + this,ex", "lineLoc": 319, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"Transport error in \" + this,error", "lineLoc": 328, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"WebSocketHandler.handleTransportError threw an exception\",ex", "lineLoc": 333, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "debug", "msg": "\"Transport closed with \" + cs + \" in \" + this", "lineLoc": 345, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "error", "msg": "\"WebSocketHandler.afterConnectionClosed threw an exception\",ex", "lineLoc": 353, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractClientSockJsSession.java"}, {"severity": "debug", "msg": "\"Starting XHR \" + (isXhrStreamingDisabled()QUES\"Polling\":\"Streaming\") + \"session url=\" + receiveUrl", "lineLoc": 102, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java"}, {"severity": "debug", "msg": "\"Executing SockJS Info request, url=\" + infoUrl", "lineLoc": 123, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java"}, {"severity": "error", "msg": "\"SockJS Info request (url=\" + infoUrl + \") failed: \" + response", "lineLoc": 132, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java"}, {"severity": "trace", "msg": "\"SockJS Info request (url=\" + infoUrl + \") response: \" + response", "lineLoc": 137, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java"}, {"severity": "trace", "msg": "\"Starting XHR send, url=\" + url", "lineLoc": 151, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java"}, {"severity": "error", "msg": "\"XHR send request (url=\" + url + \") failed: \" + response", "lineLoc": 156, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR send request (url=\" + url + \") response: \" + response", "lineLoc": 161, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java"}, {"severity": "trace", "msg": "\"Starting \" + this", "lineLoc": 150, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "trace", "msg": "\"Scheduling connect to time out after \" + this.timeoutValue + \" ms.\"", "lineLoc": 161, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "trace", "msg": "\"Connect timeout task not scheduled (no TaskScheduler configured).\"", "lineLoc": 167, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "error", "msg": "\"Connect success/failure already handled for \" + DefaultTransportRequest.this", "lineLoc": 203, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "error", "msg": "message", "lineLoc": 221, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "error", "msg": "DefaultTransportRequest.this + \" failed. Falling back on next transport.\",ex", "lineLoc": 225, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "error", "msg": "\"No more fallback transports after \" + DefaultTransportRequest.this,ex", "lineLoc": 229, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "error", "msg": "\"Transport failed to run timeout tasks for \" + DefaultTransportRequest.this,ex2", "lineLoc": 241, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "error", "msg": "\"Connect success/failure events already took place for \" + DefaultTransportRequest.this + \". Ignoring this additional failure event.\",ex", "lineLoc": 246, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/DefaultTransportRequest.java"}, {"severity": "trace", "msg": "\"Starting XHR receive request, url=\" + url", "lineLoc": 121, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java"}, {"severity": "debug", "msg": "\"SockJS sockJsSession closed, closing response.\"", "lineLoc": 231, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR content received: \" + content", "lineLoc": 254, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR receive request completed.\"", "lineLoc": 267, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java"}, {"severity": "trace", "msg": "\"Starting XHR receive request, url=\" + receiveUrl", "lineLoc": 115, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/RestTemplateXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR receive headers: \" + response.getHeaders()", "lineLoc": 215, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/RestTemplateXhrTransport.java"}, {"severity": "debug", "msg": "\"SockJS sockJsSession closed, closing response.\"", "lineLoc": 223, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/RestTemplateXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR receive completed\"", "lineLoc": 234, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/RestTemplateXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR receive content: \" + content", "lineLoc": 253, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/RestTemplateXhrTransport.java"}, {"severity": "error", "msg": "\"Initial SockJS \\\"Info\\\" request to server failed, url=\" + url,exception", "lineLoc": 265, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/SockJsClient.java"}, {"severity": "trace", "msg": "\"Starting XHR receive request for \" + url", "lineLoc": 147, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR receive headers: \" + toHttpHeaders(response.getResponseHeaders())", "lineLoc": 203, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java"}, {"severity": "debug", "msg": "\"SockJS sockJsSession closed, closing response.\"", "lineLoc": 402, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR content received: \" + content", "lineLoc": 449, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java"}, {"severity": "trace", "msg": "\"XHR receive request completed.\"", "lineLoc": 461, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/UndertowXhrTransport.java"}, {"severity": "debug", "msg": "\"Starting WebSocket session on \" + url", "lineLoc": 86, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/WebSocketTransport.java"}, {"severity": "warn", "msg": "\"Expected SockJS path. Failing request: \" + request.getURI()", "lineLoc": 341, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Processing transport request: \" + requestInfo", "lineLoc": 359, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Processing transport request: \" + requestInfo", "lineLoc": 367, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Iframe support is disabled when an origin check is required. \" + \"Ignoring transport request: \" + requestInfo", "lineLoc": 375, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Processing transport request: \" + requestInfo", "lineLoc": 385, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Processing transport request: \" + requestInfo", "lineLoc": 393, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"WebSocket disabled. Ignoring transport request: \" + requestInfo", "lineLoc": 398, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "warn", "msg": "\"Invalid SockJS path '\" + sockJsPath + \"' - required to have 3 path segments\"", "lineLoc": 406, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Ignoring transport request: \" + requestInfo", "lineLoc": 409, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"WebSocket disabled. Ignoring transport request: \" + requestInfo", "lineLoc": 421, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Ignoring transport request: \" + requestInfo", "lineLoc": 428, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "debug", "msg": "\"Processing transport request: \" + requestInfo", "lineLoc": 435, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "warn", "msg": "\"No server, session, or transport path segment in SockJS request.\"", "lineLoc": 448, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "warn", "msg": "\"Either server or session contains a \\\".\\\" which is not allowed by SockJS protocol.\"", "lineLoc": 454, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "warn", "msg": "\"Origin header value '\" + request.getHeaders().getOrigin() + \"' not allowed.\"", "lineLoc": 486, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "warn", "msg": "\"Sending Method Not Allowed (405)\"", "lineLoc": 520, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/support/AbstractSockJsService.java"}, {"severity": "warn", "msg": "\"No transport handlers specified for TransportHandlingSockJsService\"", "lineLoc": 109, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "error", "msg": "\"No handler configured for raw WebSocket messages\"", "lineLoc": 198, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "warn", "msg": "\"Unknown transport type for \" + request.getURI()", "lineLoc": 235, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "warn", "msg": "\"No TransportHandler for \" + request.getURI()", "lineLoc": 244, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "debug", "msg": "\"Session not found, sessionId=\" + sessionId + \". The session may have been closed \" + \"(e.g. missed heart-beat) while a message was coming in.\"", "lineLoc": 284, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "debug", "msg": "\"The user for the session does not match the user for the request.\"", "lineLoc": 294, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "debug", "msg": "\"Session type does not match the transport type for the request.\"", "lineLoc": 299, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "warn", "msg": "\"Origin check enabled but transport '\" + transport + \"' does not support it.\"", "lineLoc": 339, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "debug", "msg": "\"Closed \" + removedIds.size() + \" sessions: \" + removedIds", "lineLoc": 384, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java"}, {"severity": "error", "msg": "\"Failed to read message\",ex", "lineLoc": 65, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpReceivingTransportHandler.java"}, {"severity": "error", "msg": "\"Failed to read message\",ex", "lineLoc": 76, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpReceivingTransportHandler.java"}, {"severity": "trace", "msg": "\"Received message(s): \" + Arrays.asList(messages)", "lineLoc": 85, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpReceivingTransportHandler.java"}, {"severity": "debug", "msg": "request.getMethod() + \" \" + request.getURI()", "lineLoc": 74, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpSendingTransportHandler.java"}, {"severity": "debug", "msg": "\"Connection already closed (but not removed yet) for \" + sockJsSession", "lineLoc": 80, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpSendingTransportHandler.java"}, {"severity": "trace", "msg": "\"Starting \" + getTransportType() + \" async request.\"", "lineLoc": 92, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpSendingTransportHandler.java"}, {"severity": "debug", "msg": "\"Another \" + getTransportType() + \" connection still open for \" + sockJsSession", "lineLoc": 98, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/AbstractHttpSendingTransportHandler.java"}, {"severity": "warn", "msg": "\"Failed to create a default WebSocketTransportHandler\",ex", "lineLoc": 94, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/DefaultSockJsService.java"}, {"severity": "trace", "msg": "this.messageCache.size() + \" message(s) to flush in session \" + getId()", "lineLoc": 298, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java"}, {"severity": "trace", "msg": "\"Session is active, ready to flush.\"", "lineLoc": 302, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java"}, {"severity": "trace", "msg": "\"Session is not active, not ready to flush.\"", "lineLoc": 309, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java"}, {"severity": "trace", "msg": "\"Writing to HTTP response: \" + formattedFrame", "lineLoc": 355, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractHttpSockJsSession.java"}, {"severity": "debug", "msg": "\"Closing SockJS session \" + getId() + \" with \" + status", "lineLoc": 204, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "debug", "msg": "\"Failure while sending SockJS close frame\",ex", "lineLoc": 213, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "debug", "msg": "\"Error from WebSocketHandler.afterConnectionClosed in \" + this,ex", "lineLoc": 225, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "trace", "msg": "\"Scheduled heartbeat in session \" + getId()", "lineLoc": 276, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "trace", "msg": "\"Cancelling heartbeat in session \" + getId()", "lineLoc": 285, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "trace", "msg": "\"Preparing to write \" + frame", "lineLoc": 321, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "debug", "msg": "\"Terminating connection after failure to send message to client\",ex", "lineLoc": 359, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "debug", "msg": "\"Closing due to transport error for \" + this", "lineLoc": 422, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "debug", "msg": "\"Failure while closing \" + this,closeException", "lineLoc": 435, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/AbstractSockJsSession.java"}, {"severity": "trace", "msg": "this.byteCount + \" bytes written so far, \" + getMessageCache().size() + \" more messages not flushed\"", "lineLoc": 79, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/StreamingSockJsSession.java"}, {"severity": "trace", "msg": "\"Streamed bytes limit reached, recycling current request\"", "lineLoc": 83, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/StreamingSockJsSession.java"}, {"severity": "error", "msg": "\"Broken data received. Terminating WebSocket connection abruptly\",ex", "lineLoc": 190, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession.java"}, {"severity": "trace", "msg": "\"Writing \" + frame", "lineLoc": 221, "fileLoc": "spring-framework/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession.java"}]