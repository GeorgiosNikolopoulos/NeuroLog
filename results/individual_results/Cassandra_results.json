[{"severity": "trace", "msg": "\"Loading AuditLog filters\"", "lineLoc": 56, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/AuditLogFilter.java"}, {"severity": "info", "msg": "\"Audit logging is enabled.\"", "lineLoc": 75, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/AuditLogManager.java"}, {"severity": "debug", "msg": "\"Audit logging is disabled.\"", "lineLoc": 81, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/AuditLogManager.java"}, {"severity": "info", "msg": "\"Attempting to configure full query logger path: {} Roll cycle: {} Blocking: {} Max queue weight: {} Max log size:{}, archive command: {}\",path,rollCycle,blocking,maxQueueWeight,maxLogSize,archiveCommand", "lineLoc": 94, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "warn", "msg": "\"Full query logger already configured. Ignoring requested configuration.\"", "lineLoc": 98, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "info", "msg": "\"Cleaning directory: {} as requested\",path", "lineLoc": 106, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "info", "msg": "\"Reset (and deactivation) of full query log requested.\"", "lineLoc": 158, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "info", "msg": "\"Stopping full query log. Cleaning {}.\",pathsToClean", "lineLoc": 161, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "info", "msg": "\"Full query log already deactivated. Cleaning {}.\",pathsToClean", "lineLoc": 167, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "info", "msg": "\"Deactivation of full query log requested.\"", "lineLoc": 197, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "info", "msg": "\"Stopping full query log\"", "lineLoc": 200, "fileLoc": "cassandra/src/java/org/apache/cassandra/audit/BinLogAuditLogger.java"}, {"severity": "info", "msg": "\"(Re)initializing {} (validity period/update interval/max entries) ({}/{}/{})\",name,getValidity(),getUpdateInterval(),getMaxEntries()", "lineLoc": 213, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/AuthCache.java"}, {"severity": "info", "msg": "\"Configuration options credentials_update_interval_in_ms, credentials_validity_in_ms and \" + \"credentials_cache_max_entries may not be applicable for the configured authenticator ({})\",authenticator.getClass().getName()", "lineLoc": 63, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/AuthConfig.java"}, {"severity": "debug", "msg": "\"Failed to authorize {} for {}\",user,resource", "lineLoc": 81, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraAuthorizer.java"}, {"severity": "warn", "msg": "String.format(\"CassandraAuthorizer failed to revoke all permissions of %s\",revokee.getRoleName()),e", "lineLoc": 137, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraAuthorizer.java"}, {"severity": "warn", "msg": "String.format(\"CassandraAuthorizer failed to revoke all permissions on %s\",droppedResource),e", "lineLoc": 174, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraAuthorizer.java"}, {"severity": "info", "msg": "\"No CallbackHandler available for authentication\"", "lineLoc": 96, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraLoginModule.java"}, {"severity": "info", "msg": "\"Unexpected exception processing authentication callbacks\",e", "lineLoc": 115, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraLoginModule.java"}, {"severity": "warn", "msg": "\"An invalid value has been detected in the {} table for role {}. If you are \" + \"unable to login, you may need to disable authentication and confirm \" + \"that values in that table are accurate\",AuthKeyspace.ROLES,row.getString(\"role\")", "lineLoc": 98, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java"}, {"severity": "debug", "msg": "\"Failed to authorize {} for super-user permission\",role.getRoleName()", "lineLoc": 279, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java"}, {"severity": "debug", "msg": "\"Failed to authorize {} for login permission\",role.getRoleName()", "lineLoc": 292, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java"}, {"severity": "info", "msg": "\"Created default superuser role '{}'\",DEFAULT_SUPERUSER_NAME", "lineLoc": 338, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java"}, {"severity": "warn", "msg": "\"CassandraRoleManager skipped default role setup: some nodes were not ready\"", "lineLoc": 343, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java"}, {"severity": "info", "msg": "\"Setup task failed with error, rescheduling\"", "lineLoc": 369, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/CassandraRoleManager.java"}, {"severity": "trace", "msg": "\"Decoding credentials from client token\"", "lineLoc": 213, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/PasswordAuthenticator.java"}, {"severity": "debug", "msg": "\"Failed to authorize {} for super-user permission\",role.getRoleName()", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/Roles.java"}, {"severity": "debug", "msg": "\"Failed to authorize {} for login permission\",role.getRoleName()", "lineLoc": 134, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/Roles.java"}, {"severity": "trace", "msg": "\"Authentication exception\",e", "lineLoc": 112, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthenticationProxy.java"}, {"severity": "trace", "msg": "\"Authorizing JMX method invocation {} for {}\",methodName,subjectEQEQnullQUES\"\":subject.toString().replaceAll(\"\\\\n\",\" \")", "lineLoc": 187, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "trace", "msg": "\"Auth setup is not complete, refusing access\"", "lineLoc": 193, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "trace", "msg": "\"Access denied to blacklisted method {}\",methodName", "lineLoc": 208, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "trace", "msg": "\"JMX invocation of {} on MBeanServer requires permission {}\",methodName,Permission.DESCRIBE", "lineLoc": 249, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "trace", "msg": "\"JMX invocation of {} on {} requires permission {}\",methodName,targetBean,requiredPermission", "lineLoc": 277, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "warn", "msg": "\"Permissions for JMX resource contains invalid ObjectName {}\",resource.getObjectName()", "lineLoc": 363, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "trace", "msg": "\"Subject does not have sufficient permissions on all MBeans matching the target pattern {}\",target", "lineLoc": 367, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "warn", "msg": "\"Permissions for JMX resource contains invalid ObjectName {}\",resource.getObjectName()", "lineLoc": 397, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "trace", "msg": "\"Subject does not have sufficient permissions on target MBean {}\",target", "lineLoc": 401, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "debug", "msg": "\"Access denied, method name {} does not map to any defined permission\",methodName", "lineLoc": 432, "fileLoc": "cassandra/src/java/org/apache/cassandra/auth/jmx/AuthorizationProxy.java"}, {"severity": "trace", "msg": "\"Started replayFailedBatches\"", "lineLoc": 204, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "trace", "msg": "\"Replay cancelled as there are no peers in the ring.\"", "lineLoc": 211, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "trace", "msg": "\"Finished replayFailedBatches\"", "lineLoc": 228, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "debug", "msg": "\"Updating batchlog replay throttle to {} KB/s, {} KB/s per endpoint\",throttleInKB,endpointThrottleInKB", "lineLoc": 246, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "warn", "msg": "\"Skipped batch replay of {} due to {}\",id,e.getMessage()", "lineLoc": 292, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "warn", "msg": "String.format(\"Encountered %d unexpected exceptions while sending out batches\",skipped),caughtException", "lineLoc": 310, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "trace", "msg": "\"Replaying batch {}\",id", "lineLoc": 356, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "trace", "msg": "\"Failed replaying a batched mutation to a node, will write a hint\"", "lineLoc": 383, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "trace", "msg": "\"Failure was : {}\",e.getMessage()", "lineLoc": 384, "fileLoc": "cassandra/src/java/org/apache/cassandra/batchlog/BatchlogManager.java"}, {"severity": "info", "msg": "\"Completed loading ({} ms; {} keys) {} cache\",TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstart),CacheService.instance.keyCache.size(),cacheType", "lineLoc": 177, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "info", "msg": "\"reading saved cache {}\",dataPath", "lineLoc": 201, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "warn", "msg": "String.format(\"Non-fatal checksum error reading saved cache %s\",dataPath.getAbsolutePath()),e", "lineLoc": 265, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "info", "msg": "String.format(\"Harmless error reading saved cache %s\",dataPath.getAbsolutePath()),t", "lineLoc": 270, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "trace", "msg": "\"completed reading ({} ms; {} keys) saved cache {}\",TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstart),count,dataPath", "lineLoc": 278, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "trace", "msg": "\"Deleting old {} files.\",cacheType", "lineLoc": 341, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "trace", "msg": "\"Skipping {} save, cache is empty.\",cacheType", "lineLoc": 346, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "error", "msg": "\"Unable to rename {} to {}\",cacheFilePaths.left,cacheFile", "lineLoc": 399, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "error", "msg": "\"Unable to rename {} to {}\",cacheFilePaths.right,crcFile", "lineLoc": 402, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "info", "msg": "\"Saved {} ({} items) in {} ms\",cacheType,keysWritten,TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstart)", "lineLoc": 404, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "warn", "msg": "\"Failed to delete {}\",file.getAbsolutePath()", "lineLoc": 432, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "warn", "msg": "\"Could not list files in {}\",savedCachesDir", "lineLoc": 438, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/AutoSavingCache.java"}, {"severity": "trace", "msg": "\"Cannot fetch in memory data, we will fallback to read from disk \",e", "lineLoc": 88, "fileLoc": "cassandra/src/java/org/apache/cassandra/cache/SerializingCache.java"}, {"severity": "error", "msg": "String.format(\"Uncaught exception on thread %s\",Thread.currentThread()),t", "lineLoc": 167, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/AbstractLocalAwareExecutorService.java"}, {"severity": "debug", "msg": "\"ScheduledThreadPoolExecutor has shut down as part of C* shutdown\"", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor.java"}, {"severity": "error", "msg": "\"Error in ThreadPoolExecutor\",t", "lineLoc": 251, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java"}, {"severity": "trace", "msg": "\"Task cancelled\",e", "lineLoc": 278, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java"}, {"severity": "error", "msg": "\"Interrupted while executing {}, but not shutdown; continuing with loop\",runnable,ie", "lineLoc": 58, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/InfiniteLoopExecutor.java"}, {"severity": "error", "msg": "\"Exception thrown by runnable, continuing with loop\",t", "lineLoc": 62, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/InfiniteLoopExecutor.java"}, {"severity": "error", "msg": "\"Failed to execute task, unexpected exception killed worker\",t", "lineLoc": 155, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/SEPWorker.java"}, {"severity": "error", "msg": "\"Unexpected exception killed worker\",t", "lineLoc": 157, "fileLoc": "cassandra/src/java/org/apache/cassandra/concurrent/SEPWorker.java"}, {"severity": "debug", "msg": ")LBRACEMapLTString,StringGTconfigMapEQNEWTreeMapLTGT(", "lineLoc": 575, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/Config.java"}, {"severity": "info", "msg": "\"Node configuration:[{}]\",Joiner.on(\"; \").join(configMap.entrySet())", "lineLoc": 604, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/Config.java"}, {"severity": "debug", "msg": "\"Syncing log with batch mode\"", "lineLoc": 374, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "debug", "msg": "\"Syncing log with a group window of {}\",conf.commitlog_sync_period_in_ms", "lineLoc": 386, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "debug", "msg": "\"Syncing log with a period of {}\",conf.commitlog_sync_period_in_ms", "lineLoc": 398, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"DiskAccessMode 'auto' determined to be {}, indexAccessMode is {}\",conf.disk_access_mode,indexAccessMode", "lineLoc": 406, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"DiskAccessMode is {}, indexAccessMode is {}\",conf.disk_access_mode,indexAccessMode", "lineLoc": 412, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"DiskAccessMode is {}, indexAccessMode is {}\",conf.disk_access_mode,indexAccessMode", "lineLoc": 417, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"concurrent_replicates has been deprecated and should be removed from cassandra.yaml\"", "lineLoc": 446, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"Global memtable on-heap threshold is enabled at {}MB\",conf.memtable_heap_space_in_mb", "lineLoc": 464, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"Global memtable off-heap threshold is disabled, HeapAllocator will be used instead\"", "lineLoc": 466, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"Global memtable off-heap threshold is enabled at {}MB\",conf.memtable_offheap_space_in_mb", "lineLoc": 468, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"repair_session_max_tree_depth has been deprecated and should be removed from cassandra.yaml. Use repair_session_space_in_mb instead\"", "lineLoc": 472, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"repair_session_max_tree_depth of \" + conf.repair_session_max_tree_depth + \" > 20 could lead to excessive memory usage\"", "lineLoc": 476, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"A repair_session_space_in_mb of \" + conf.repair_session_space_in_mb + \" megabytes is likely to cause heap pressure\"", "lineLoc": 489, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "debug", "msg": "\"Error checking disk space\",e", "lineLoc": 541, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"Small commitlog volume detected at {}; setting commitlog_total_space_in_mb to {}.  You can override this in cassandra.yaml\",conf.commitlog_directory,minSize", "lineLoc": 547, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "debug", "msg": "\"Error checking disk space\",e", "lineLoc": 568, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"Small cdc volume detected at {}; setting cdc_total_space_in_mb to {}.  You can override this in cassandra.yaml\",conf.cdc_raw_directory,minSize", "lineLoc": 574, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"cdc_enabled is true. Starting casssandra node with Change-Data-Capture enabled.\"", "lineLoc": 586, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "debug", "msg": "\"Error checking disk space\",e", "lineLoc": 617, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"memtable_cleanup_threshold has been deprecated and should be removed from cassandra.yaml\"", "lineLoc": 647, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"memtable_cleanup_threshold is set very low [{}], which may cause performance degradation\",conf.memtable_cleanup_threshold", "lineLoc": 655, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"Internode encryption enabled. Disabling zero copy SSTable transfers for streaming.\"", "lineLoc": 769, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"Back-pressure is {} with strategy {}.\",backPressureEnabled()QUES\"enabled\":\"disabled\",conf.back_pressure_strategy", "lineLoc": 799, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"found {}::{} less than lowest acceptable value {}, continuing with {}\",property,actualValue,lowestAcceptedValue,lowestAcceptedValue", "lineLoc": 1043, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"repair_session_max_tree_depth of \" + depth + \" > 20 could lead to excessive memory usage\"", "lineLoc": 2547, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"A repair_session_space_in_mb of \" + conf.repair_session_space_in_mb + \" megabytes is likely to cause heap pressure.\"", "lineLoc": 2563, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "debug", "msg": "\"Changing automatic_sstable_upgrade to {}\",enabled", "lineLoc": 2831, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "debug", "msg": "\"Changing max_concurrent_automatic_sstable_upgrades to {}\",value", "lineLoc": 2843, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "warn", "msg": "\"max_concurrent_automatic_sstable_upgrades ({}) is larger than concurrent_compactors ({})\",value,getConcurrentCompactors()", "lineLoc": 2853, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"Setting use_offheap_merkle_trees to {}\",value", "lineLoc": 2918, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/DatabaseDescriptor.java"}, {"severity": "info", "msg": "\"Configuration location: {}\",url", "lineLoc": 89, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java"}, {"severity": "debug", "msg": "\"Loading settings from {}\",url", "lineLoc": 108, "fileLoc": "cassandra/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java"}, {"severity": "warn", "msg": "\"{} prepared statements discarded in the last minute because cache limit reached ({} MB)\",count,DatabaseDescriptor.getPreparedStatementsCacheSizeMB()", "lineLoc": 101, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "info", "msg": "\"Initialized prepared statement caches with {} MB\",DatabaseDescriptor.getPreparedStatementsCacheSizeMB()", "lineLoc": 106, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "warn", "msg": "\"prepared statement recreation error: {}\",useKeyspaceAndCQL.right,e", "lineLoc": 147, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "info", "msg": "\"Preloaded {} prepared statements\",count", "lineLoc": 150, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "trace", "msg": "\"Process {} @CL.{}\",statement,options.getConsistency()", "lineLoc": 201, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "info", "msg": "\"Statement {} executed with NODE_LOCAL consistency level.\",statement", "lineLoc": 211, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "trace", "msg": "\"[{}] '{}'\",i + 1,variables.get(i)", "lineLoc": 485, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "error", "msg": "String.format(\"The statement: [%s] could not be parsed.\",queryStr),re", "lineLoc": 554, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "trace", "msg": "\"Column definitions for {}.{} changed, invalidating related prepared statements\",ksName,cfName", "lineLoc": 686, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "trace", "msg": "\"Keyspace {} was dropped, invalidating related prepared statements\",ksName", "lineLoc": 711, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "trace", "msg": "\"Table {}.{} was dropped, invalidating related prepared statements\",ksName,cfName", "lineLoc": 717, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/QueryProcessor.java"}, {"severity": "trace", "msg": "\"Compiling Java source UDF '{}' as class '{}' using source:\\n{}\",name,targetClassName,javaSource", "lineLoc": 253, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/JavaBasedUDFunction.java"}, {"severity": "error", "msg": "String.format(\"Could not compile function '%s' from Java source:%n%s\",name,javaSource),e", "lineLoc": 359, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/JavaBasedUDFunction.java"}, {"severity": "info", "msg": "\"Failed to compile function '{}' for language {}: \",name,language,e", "lineLoc": 163, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/ScriptBasedUDFunction.java"}, {"severity": "warn", "msg": "\"The function 'dateof' is deprecated.\" + \" Use the function 'toTimestamp' instead.\"", "lineLoc": 106, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/TimeFcts.java"}, {"severity": "warn", "msg": "\"The function 'unixtimestampof' is deprecated.\" + \" Use the function 'toUnixTimestamp' instead.\"", "lineLoc": 132, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/TimeFcts.java"}, {"severity": "trace", "msg": "\"access denied: resource {}\",resource", "lineLoc": 175, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/UDFunction.java"}, {"severity": "trace", "msg": "\"access denied: resource {}\",resource", "lineLoc": 182, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/UDFunction.java"}, {"severity": "trace", "msg": "\"Invocation of user-defined function '{}' failed\",this,t", "lineLoc": 332, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/UDFunction.java"}, {"severity": "debug", "msg": "\"Invocation of user-defined function '{}' failed\",this,t", "lineLoc": 370, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/UDFunction.java"}, {"severity": "warn", "msg": "warn", "lineLoc": 458, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/functions/UDFunction.java"}, {"severity": "error", "msg": "format,tableNames,FBUtilities.prettyPrintMemory(size),FBUtilities.prettyPrintMemory(failThreshold),FBUtilities.prettyPrintMemory(sizeSUBfailThreshold),\" (see batch_size_fail_threshold_in_kb)\"", "lineLoc": 334, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/statements/BatchStatement.java"}, {"severity": "warn", "msg": "format,tableNames,FBUtilities.prettyPrintMemory(size),FBUtilities.prettyPrintMemory(warnThreshold),FBUtilities.prettyPrintMemory(sizeSUBwarnThreshold),\"\"", "lineLoc": 340, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/statements/BatchStatement.java"}, {"severity": "warn", "msg": "\"Ignoring obsolete property {}\",name", "lineLoc": 56, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/statements/PropertyDefinitions.java"}, {"severity": "warn", "msg": "msg", "lineLoc": 415, "fileLoc": "cassandra/src/java/org/apache/cassandra/cql3/statements/SelectStatement.java"}, {"severity": "warn", "msg": "\"Blacklisting {} for reads\",directory", "lineLoc": 83, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/BlacklistedDirectories.java"}, {"severity": "warn", "msg": "\"Blacklisting {} for writes\",directory", "lineLoc": 101, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/BlacklistedDirectories.java"}, {"severity": "trace", "msg": "\"scheduling flush in {} ms\",period", "lineLoc": 269, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "error", "msg": "\"Could not set new local compaction strategy\",t", "lineLoc": 331, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "info", "msg": "\"Initializing {}.{}\",keyspace.getName(),name", "lineLoc": 397, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "warn", "msg": "\"Disabling compaction strategy by setting compaction thresholds to 0 is deprecated, set the compaction option 'enabled' to 'false' instead.\"", "lineLoc": 418, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "error", "msg": "\"Exception caught while calculating speculative retry threshold for {}: {}\",metadata(),e", "lineLoc": 461, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Removing temporary or obsoleted files from unfinished operations for table {}\",metadata.name", "lineLoc": 618, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Further extra check for orphan sstable files for {}\",metadata.name", "lineLoc": 626, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "warn", "msg": "\"could not delete {}\",file.getAbsolutePath()", "lineLoc": 665, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "info", "msg": "\"User Requested secondary index re-build for {}/{} indexes: {}\",ksName,cfName,Joiner.on(,).join(idxNames)", "lineLoc": 741, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "debug", "msg": "\"Enqueuing flush of {}: {}\",name,String.format(\"%s (%.0f%%) on-heap, %s (%.0f%%) off-heap\",FBUtilities.prettyPrintMemory(onHeapTotal),onHeapRatioSTAR100,FBUtilities.prettyPrintMemory(offHeapTotal),offHeapRatioSTAR100)", "lineLoc": 845, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "debug", "msg": "\"forceFlush requested but everything is clean in {}\",name", "lineLoc": 900, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "debug", "msg": "\"Flushed to {} ({} sstables, {}), biggest {}, smallest {}\",sstables,sstables.size(),FBUtilities.prettyPrintMemory(totalBytesOnDisk),FBUtilities.prettyPrintMemory(maxBytesOnDisk),FBUtilities.prettyPrintMemory(minBytesOnDisk)", "lineLoc": 1143, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "debug", "msg": "\"Flushing largest {} to free up room. Used total: {}, live: {}, flushing: {}, this: {}\",largest.cfs,ratio(usedOnHeap,usedOffHeap),ratio(liveOnHeap,liveOffHeap),ratio(flushingOnHeap,flushingOffHeap),ratio(thisOnHeap,thisOffHeap)", "lineLoc": 1235, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Checking for sstables overlapping {}\",sstables", "lineLoc": 1293, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "warn", "msg": "\"Rebuilding index for {} because of <{}>\",name,failure.getMessage()", "lineLoc": 1480, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Snapshot for {} keyspace data file {} created in {}\",keyspace,ssTable.getFilename(),snapshotDirectory", "lineLoc": 1731, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Created ephemeral snapshot marker file on {}.\",ephemeralSnapshotMarker.getAbsolutePath()", "lineLoc": 1799, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "warn", "msg": "String.format(\"Could not create marker file %s for ephemeral snapshot %s. \" + \"In case there is a failure in the operation that created \" + \"this snapshot, you may need to clean it manually afterwards.\",ephemeralSnapshotMarker.getAbsolutePath(),snapshot),e", "lineLoc": 1803, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Clearing ephemeral snapshot {} leftover from previous session.\",ephemeralSnapshot", "lineLoc": 1814, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"using snapshot sstable {}\",entries.getKey()", "lineLoc": 1836, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"using active sstable {}\",entries.getKey()", "lineLoc": 1845, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "debug", "msg": "\"Discarding sstable data for truncated CF + indexes\"", "lineLoc": 2141, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"cleaning out row cache\"", "lineLoc": 2153, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "info", "msg": "\"Truncate of {}.{} is complete\",keyspace.getName(),name", "lineLoc": 2159, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Cancelling in-progress compactions for {}\",metadata.name", "lineLoc": 2197, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "warn", "msg": "\"Unable to cancel in-progress compactions for {}.  Perhaps there is an unusually large row in progress somewhere, or the system is simply overloaded.\",metadata.name", "lineLoc": 2219, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Compactions successfully cancelled\"", "lineLoc": 2223, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "info", "msg": "\"Changing neverPurgeTombstones for {}.{} from {} to {}\",keyspace.getName(),getTableName(),neverPurgeTombstones,value", "lineLoc": 2630, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "info", "msg": "\"Not changing neverPurgeTombstones for {}.{}, it is {}\",keyspace.getName(),getTableName(),neverPurgeTombstones", "lineLoc": 2632, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ColumnFamilyStore.java"}, {"severity": "trace", "msg": "\"Applying forwarded {}\",cm", "lineLoc": 39, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/CounterMutationVerbHandler.java"}, {"severity": "error", "msg": "\"Not a directory {}\",dataDir", "lineLoc": 115, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "error", "msg": "\"Doesn't have execute permissions for {} directory\",dataDir", "lineLoc": 120, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "error", "msg": "\"Doesn't have read permissions for {} directory\",dataDir", "lineLoc": 125, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "error", "msg": "\"Doesn't have write permissions for {} directory\",dataDir", "lineLoc": 130, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "trace", "msg": "\"Moving index file {} to {}\",indexFile,destFile", "lineLoc": 265, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "debug", "msg": "\"Removing temporary directory {}\",tmpDir", "lineLoc": 393, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "trace", "msg": "\"removing blacklisted candidate {}\",dataDir.location", "lineLoc": 417, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "trace", "msg": "\"removing candidate {}, usable={}, requested={}\",candidate.dataDirectory.location,candidate.availableSpace,writeSize", "lineLoc": 424, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "trace", "msg": "\"Removing snapshot directory {}\",snapshotDir", "lineLoc": 914, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "error", "msg": "\"Could not calculate the size of {}. {}\",input,e.getMessage()", "lineLoc": 983, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Directories.java"}, {"severity": "debug", "msg": "\"Refreshing disk boundary cache for {}.{}\",cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 56, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/DiskBoundaryManager.java"}, {"severity": "debug", "msg": "\"Updating boundaries from {} to {} for {}.{}\",oldBoundaries,diskBoundaries,cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 59, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/DiskBoundaryManager.java"}, {"severity": "debug", "msg": "\"Got local ranges {} (ringVersion = {})\",localRanges,ringVersion", "lineLoc": 95, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/DiskBoundaryManager.java"}, {"severity": "warn", "msg": "\"Invalid expiration date overflow policy: {}. Using default: {}\",policyAsString,ExpirationDateOverflowPolicy.REJECT.name()", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ExpirationDateOverflowHandling.java"}, {"severity": "trace", "msg": "\"Initializing {}.{}\",getName(),cfm.name", "lineLoc": 340, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "info", "msg": "\"Creating replication strategy \" + ksm.name + \" params \" + ksm.params", "lineLoc": 371, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "debug", "msg": "\"New replication settings for keyspace {} - invalidating disk boundary caches\",ksm.name", "lineLoc": 375, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "trace", "msg": "\"Could not acquire lock for {} and table {}\",ByteBufferUtil.bytesToHex(mutation.key().getKey()),columnFamilyStores.get(tableId).name", "lineLoc": 556, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "error", "msg": "\"Attempting to mutate non-existant table {} ({}.{})\",upd.metadata().id,upd.metadata().keyspace,upd.metadata().name", "lineLoc": 622, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "error", "msg": "String.format(\"Unknown exception caught while attempting to update MaterializedView! %s\",upd.metadata().toString()),t", "lineLoc": 637, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "warn", "msg": "\"Operation not allowed on secondary Index table ({})\",cfName", "lineLoc": 706, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "info", "msg": "\"adding secondary index table {} to operation\",indexCfs.metadata.name", "lineLoc": 739, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Keyspace.java"}, {"severity": "debug", "msg": "\"Writing {}, flushed range = ({}, {}]\",Memtable.this.toString(),from,to", "lineLoc": 453, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Memtable.java"}, {"severity": "debug", "msg": "\"Completed flushing {} ({}) for commitlog position {}\",writer.getFilename(),FBUtilities.prettyPrintMemory(bytesFlushed),commitLogUpperBound", "lineLoc": 483, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Memtable.java"}, {"severity": "trace", "msg": "\"High update contention in {}/{} partitions of {} \",heavilyContendedRowCount,toFlush.size(),Memtable.this", "lineLoc": 491, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/Memtable.java"}, {"severity": "warn", "msg": "msg", "lineLoc": 598, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ReadCommand.java"}, {"severity": "info", "msg": "\"Couldn't find a defined index on {}.{} with the id {}. \" + \"If an index was just created, this is likely due to the schema not \" + \"being fully propagated. Local read will proceed without using the \" + \"index. Please wait for schema agreement after index creation.\",metadata.keyspace,metadata.name,e.indexId", "lineLoc": 1074, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ReadCommand.java"}, {"severity": "warn", "msg": "\"Received a read request from {} for a range that is not owned by the current replica {}.\",message.from(),command", "lineLoc": 93, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/ReadCommandVerbHandler.java"}, {"severity": "debug", "msg": "\"Node is not part of the ring; not recording size estimates\"", "lineLoc": 65, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SizeEstimatesRecorder.java"}, {"severity": "trace", "msg": "\"Recording size estimates\"", "lineLoc": 69, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SizeEstimatesRecorder.java"}, {"severity": "trace", "msg": "\"Spent {} milliseconds on estimating {}.{} size\",TimeUnit.NANOSECONDS.toMillis(passed),table.metadata.keyspace,table.metadata.name", "lineLoc": 81, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SizeEstimatesRecorder.java"}, {"severity": "info", "msg": "\"Loading new SSTables for {}/{}: {}\",cfs.keyspace.getName(),cfs.getTableName(),options", "lineLoc": 75, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "error", "msg": "\"Failed verifying sstable {} in directory {}\",descriptor,dir,t", "lineLoc": 105, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "error", "msg": "\"Failed verifying sstable {}\",descriptor,t", "lineLoc": 110, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "error", "msg": "\"Failed importing sstables in directory {}\",dir,t", "lineLoc": 150, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "error", "msg": "\"Failed importing sstables from data directory - renamed sstables are: {}\",movedSSTables", "lineLoc": 159, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "info", "msg": "\"No new SSTables were found for {}/{}\",cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 169, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "info", "msg": "\"Loading new SSTables and building secondary indexes for {}/{}: {}\",cfs.keyspace.getName(),cfs.getTableName(),newSSTables", "lineLoc": 173, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "info", "msg": "\"Done loading load new SSTables for {}/{}\",cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 186, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "debug", "msg": "\"Moving sstable {} back to {}\",movedSSTable.newDescriptor.filenameFor(Component.DATA),movedSSTable.oldDescriptor.filenameFor(Component.DATA)", "lineLoc": 280, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SSTableImporter.java"}, {"severity": "warn", "msg": "\"Using stored Gossip Generation {} as it is greater than current system time {}.  See CASSANDRA-3654 if you experience problems\",storedGeneration,now", "lineLoc": 989, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java"}, {"severity": "warn", "msg": "\"No host ID found, created {} (Note: This should happen exactly once per node).\",hostId", "lineLoc": 1088, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java"}, {"severity": "info", "msg": "\"Detected version upgrade from {} to {}, snapshotting system keyspaces\",previous,next", "lineLoc": 1407, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java"}, {"severity": "trace", "msg": "\"Found unreadable versions info in pre 1.2 system.Versions table\"", "lineLoc": 1441, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java"}, {"severity": "debug", "msg": "\"stored prepared statement for logged keyspace '{}': '{}'\",loggedKeyspace,cql", "lineLoc": 1499, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspace.java"}, {"severity": "info", "msg": "\"{} table was empty, migrating legacy {}, if this fails you should fix the issue and then truncate {} to have it try again.\",peersName,legacyPeersName,peersName", "lineLoc": 76, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"Migrating rows from legacy {} to {}\",legacyPeersName,peersName", "lineLoc": 100, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "debug", "msg": "\"Transferring row {}\",transferred", "lineLoc": 103, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"Migrated {} rows from legacy {} to {}\",transferred,legacyPeersName,peersName", "lineLoc": 119, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"{} table was empty, migrating legacy {} to {}\",peerEventsName,legacyPeerEventsName,peerEventsName", "lineLoc": 129, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "debug", "msg": "\"Transferring row {}\",transferred", "lineLoc": 145, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"Migrated {} rows from legacy {} to {}\",transferred,legacyPeerEventsName,peerEventsName", "lineLoc": 152, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"{} table was empty, migrating legacy {} to {}\",transferredRangesName,legacyTransferredRangesName,transferredRangesName", "lineLoc": 162, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "debug", "msg": "\"Transferring row {}\",transferred", "lineLoc": 180, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"Migrated {} rows from legacy {} to {}\",transferred,legacyTransferredRangesName,transferredRangesName", "lineLoc": 190, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"{} table was empty, migrating legacy {} to {}\",availableRangesName,legacyAvailableRangesName,availableRangesName", "lineLoc": 200, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "debug", "msg": "\"Transferring row {}\",transferred", "lineLoc": 216, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "info", "msg": "\"Migrated {} rows from legacy {} to {}\",transferred,legacyAvailableRangesName,availableRangesName", "lineLoc": 226, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/SystemKeyspaceMigrator40.java"}, {"severity": "error", "msg": "\"Error in truncation\",e", "lineLoc": 46, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/TruncateVerbHandler.java"}, {"severity": "trace", "msg": "\"{} applied.  Enqueuing response to {}@{} \",t,message.id(),message.from()", "lineLoc": 55, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/TruncateVerbHandler.java"}, {"severity": "warn", "msg": "\"Skipping invalid directory found in .toDelete: {}. Only %TEMP% or data file subdirectories are valid.\",f", "lineLoc": 70, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/WindowsFailedSnapshotTracker.java"}, {"severity": "warn", "msg": "\"Discovered obsolete snapshot. Deleting directory [{}]\",snapshotDirectory", "lineLoc": 77, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/WindowsFailedSnapshotTracker.java"}, {"severity": "warn", "msg": "\"Failed to open {}. Obsolete snapshots from previous runs will not be deleted.\",TODELETEFILE,e", "lineLoc": 88, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/WindowsFailedSnapshotTracker.java"}, {"severity": "trace", "msg": "\"No segments in reserve; creating a fresh one\"", "lineLoc": 112, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogSegmentManager.java"}, {"severity": "error", "msg": "\"Failed to force-recycle all segments; at least one segment is still in use with dirty CFs.\"", "lineLoc": 304, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogSegmentManager.java"}, {"severity": "trace", "msg": "\"Total active commitlog segment space used is {} out of {}\",currentSize,total", "lineLoc": 361, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogSegmentManager.java"}, {"severity": "debug", "msg": "\"CLSM closing and clearing existing commit log segments...\"", "lineLoc": 410, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogSegmentManager.java"}, {"severity": "trace", "msg": "\"CLSM done with closing and clearing existing commit log segments.\"", "lineLoc": 428, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogSegmentManager.java"}, {"severity": "debug", "msg": "\"Will update the commitlog markers every {}ms and flush every {}ms\",markerIntervalMillis,syncIntervalMillis", "lineLoc": 118, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/AbstractCommitLogService.java"}, {"severity": "info", "msg": "\"No commitlog files found; skipping replay\"", "lineLoc": 153, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "info", "msg": "\"Replaying {}\",StringUtils.join(files,\", \")", "lineLoc": 158, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "info", "msg": "\"Log replay complete, {} replayed mutations\",replayed", "lineLoc": 160, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "trace", "msg": "\"discard completed log segments for {}-{}, table {}\",lowerBound,upperBound,id", "lineLoc": 305, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "debug", "msg": "\"Commit log segment {} is unused\",segment", "lineLoc": 318, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "trace", "msg": "\"Not safe to delete{} commit log segment {}; dirty is {}\",(iter.hasNext()QUES\"\":\" active\"),segment,segment.dirtyString()", "lineLoc": 324, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "error", "msg": "String.format(\"%s. Commit disk failure policy is %s; terminating thread\",message,DatabaseDescriptor.getCommitFailurePolicy()),t", "lineLoc": 476, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "error", "msg": "message,t", "lineLoc": 479, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLog.java"}, {"severity": "trace", "msg": "\"No commitlog_archiving properties found; archive + pitr will be disabled\"", "lineLoc": 91, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogArchiver.java"}, {"severity": "warn", "msg": "\"Archiving file {} failed, file may have already been archived.\",name,e", "lineLoc": 178, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogArchiver.java"}, {"severity": "error", "msg": "\"Looks like the archiving of file {} failed earlier, cassandra is going to ignore this segment for now.\",name,e.getCause().getCause()", "lineLoc": 204, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogArchiver.java"}, {"severity": "trace", "msg": "\"Skipping restore of archive {} as the segment already exists in the restore location {}\",fromFile.getPath(),toFile.getPath()", "lineLoc": 259, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogArchiver.java"}, {"severity": "info", "msg": "\"Skipping playback of empty log: {}\",file.getName()", "lineLoc": 102, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "debug", "msg": "\"Finished reading {}\",file", "lineLoc": 256, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "debug", "msg": "\"Reading {} (CL version {}, messaging version {}, compression {})\",file.getPath(),desc.version,desc.getMessagingVersion(),desc.compression", "lineLoc": 265, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "trace", "msg": "\"Skipping read of fully-flushed {}\",file", "lineLoc": 273, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "trace", "msg": "\"Reading mutation at {}\",mutationStart", "lineLoc": 304, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "trace", "msg": "\"Not enough bytes left for another mutation in this CommitLog section, continuing\"", "lineLoc": 317, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "trace", "msg": "\"Encountered end of segment marker at {}\",reader.getFilePointer()", "lineLoc": 326, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "trace", "msg": "\"Read mutation for {}.{}: {}\",mutation.getKeyspaceName(),mutation.key(),\"{\" + StringUtils.join(mutation.getPartitionUpdates().iterator(),\", \") + \"}\"", "lineLoc": 473, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReader.java"}, {"severity": "info", "msg": "\"Restore point in time is before latest truncation of table {}.{}. Clearing truncation record.\",cfs.metadata.keyspace,cfs.metadata.name", "lineLoc": 124, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java"}, {"severity": "debug", "msg": "\"Global replay position is {} from columnfamilies {}\",globalPosition,FBUtilities.toString(cfPersisted)", "lineLoc": 137, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java"}, {"severity": "warn", "msg": "\"Skipped {} mutations from unknown (probably removed) CF with id {}\",entry.getValue(),entry.getKey()", "lineLoc": 199, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java"}, {"severity": "trace", "msg": "\"Finished waiting on mutations from recovery\"", "lineLoc": 203, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java"}, {"severity": "error", "msg": "\"Ignoring commit log replay error likely due to incomplete flush to disk\",exception", "lineLoc": 442, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java"}, {"severity": "error", "msg": "\"Ignoring commit log replay error\",exception", "lineLoc": 444, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java"}, {"severity": "error", "msg": "\"Replay stopped. If you wish to override this error and continue starting the node ignoring \" + \"commit log replay problems, specify -D\" + IGNORE_REPLAY_ERRORS_PROPERTY + \"=true \" + \"on the command line\"", "lineLoc": 447, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogReplayer.java"}, {"severity": "trace", "msg": "\"(Unopened) CDC segment {} is no longer needed and will be deleted now\",cdcFile", "lineLoc": 170, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/CommitLogSegmentManagerCDC.java"}, {"severity": "debug", "msg": "\"created a new encrypted commit log segment: {}\",logFile", "lineLoc": 80, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/commitlog/EncryptedSegment.java"}, {"severity": "warn", "msg": "\"Error setting compaction strategy options ({}), defaults will be used\",e.getMessage()", "lineLoc": 118, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/AbstractCompactionStrategy.java"}, {"severity": "warn", "msg": "\"You are running with -Dcassandra.never_purge_tombstones=true, this is dangerous!\"", "lineLoc": 97, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java"}, {"severity": "debug", "msg": "\"not refreshing overlaps - running with -D{}=true\",NEVER_PURGE_TOMBSTONES_PROPERTY", "lineLoc": 104, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java"}, {"severity": "debug", "msg": "\"not refreshing overlaps - running with ignoreOverlaps activated\"", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java"}, {"severity": "debug", "msg": "\"not refreshing overlaps for {}.{} - neverPurgeTombstones is enabled\",cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 117, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java"}, {"severity": "trace", "msg": "\"Checking droppable sstables in {}\",cfStore", "lineLoc": 174, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java"}, {"severity": "trace", "msg": "\"Dropping overlap ignored expired SSTable {} (maxLocalDeletionTime={}, gcBefore={})\",candidate,candidate.getSSTableMetadata().maxLocalDeletionTime,gcBefore", "lineLoc": 190, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java"}, {"severity": "trace", "msg": "\"Dropping expired SSTable {} (maxLocalDeletionTime={}, gcBefore={})\",candidate,candidate.getSSTableMetadata().maxLocalDeletionTime,gcBefore", "lineLoc": 234, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionController.java"}, {"severity": "trace", "msg": "\"Autocompaction is disabled\"", "lineLoc": 179, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"Background compaction is still running for {}.{} ({} remaining). Skipping\",cfs.keyspace.getName(),cfs.name,count", "lineLoc": 192, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"Scheduling a background task check for {}.{} with {}\",cfs.keyspace.getName(),cfs.name,cfs.getCompactionStrategyManager().getName()", "lineLoc": 197, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "warn", "msg": "\"Failed to wait for compaction executors shutdown\"", "lineLoc": 245, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "error", "msg": "\"Interrupted while waiting for tasks to be terminated\",e", "lineLoc": 249, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"Checking {}.{}\",cfs.keyspace.getName(),cfs.name", "lineLoc": 278, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"Aborting compaction for dropped CF\"", "lineLoc": 281, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "debug", "msg": "\"Checking for upgrade tasks {}.{}\",cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 308, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"No tasks available\"", "lineLoc": 325, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Starting {} for {}.{}\",operationType,cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 349, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"No sstables to {} for {}.{}\",operationType.name(),cfs.keyspace.getName(),cfs.name", "lineLoc": 360, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Finished {} for {}.{} successfully\",operationType,cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 391, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "error", "msg": "\"Failed to cleanup lifecycle transactions ({} for {}.{})\",operationType,cfs.keyspace.getName(),cfs.getTableName(),fail", "lineLoc": 407, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Cleanup cannot run before a node has joined the ring\"", "lineLoc": 516, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "debug", "msg": "\"Skipping {} ([{}, {}]) for cleanup; all rows should be kept. Needs cleanup full ranges: {} Needs cleanup transient ranges: {} Repaired: {}\",sstable,sstable.first.getToken(),sstable.last.getToken(),needsCleanupFull,needsCleanupTransient,sstable.isRepaired()", "lineLoc": 545, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Skipping cleanup for {}/{} sstables for {}.{} since they are fully contained in owned ranges (full ranges: {}, transient ranges: {})\",skippedSStables,totalSSTables,cfStore.keyspace.getName(),cfStore.getTableName(),fullRanges,transientRanges", "lineLoc": 557, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "debug", "msg": "\"Garbage collecting {}\",txn.originals()", "lineLoc": 592, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Partitioner does not support splitting\"", "lineLoc": 612, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Relocate cannot run before a node has joined the ring\"", "lineLoc": 618, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "debug", "msg": "\"Relocating {}\",txn.originals()", "lineLoc": 671, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"{} Starting anticompaction for {}.{} on {}/{} sstables\",PreviewKind.NONE.logPrefix(sessionID),cfs.keyspace.getName(),cfs.getTableName(),validatedForRepair.size(),cfs.getLiveSSTables().size()", "lineLoc": 771, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"{} Starting anticompaction for ranges {}\",PreviewKind.NONE.logPrefix(sessionID),replicas", "lineLoc": 773, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"{} Completed anticompaction successfully\",PreviewKind.NONE.logPrefix(sessionID)", "lineLoc": 791, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "error", "msg": "message", "lineLoc": 808, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"{} SSTable {} fully contained in range {}, mutating repairedAt instead of anticompacting\",PreviewKind.NONE.logPrefix(parentRepairSession),sstable,r", "lineLoc": 830, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"{} SSTable {} ({}) will be anticompacted on range {}\",PreviewKind.NONE.logPrefix(parentRepairSession),sstable,sstableBounds,r", "lineLoc": 837, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Major compaction will not result in a single sstable - repaired and unrepaired data is kept separate and compaction runs per data_file_directory.\"", "lineLoc": 881, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "debug", "msg": "\"No sstables found for the provided token range\"", "lineLoc": 892, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "warn", "msg": "\"Schema does not exist for file {}. Skipping.\",filename", "lineLoc": 946, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "warn", "msg": "\"Schema does not exist for file {}. Skipping.\",filename", "lineLoc": 972, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "error", "msg": "\"Cleanup cannot run before a node has joined the ring\"", "lineLoc": 984, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "warn", "msg": "\"Will not clean {}, it is not an active sstable\",entry.getValue()", "lineLoc": 1001, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "error", "msg": "\"forceUserDefinedCleanup failed: {}\",e.getLocalizedMessage()", "lineLoc": 1012, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Will not compact {}: it is not an active sstable\",desc", "lineLoc": 1034, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"No files to compact for user defined compaction\"", "lineLoc": 1044, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"SSTable {} ([{}, {}]) does not intersect the owned ranges ({}), dropping it\",sstable,sstable.first.getToken(),sstable.last.getToken(),allRanges", "lineLoc": 1206, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"Expected bloom filter size : {}\",expectedBloomFilterSize", "lineLoc": 1217, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Cleaning up {}\",sstable", "lineLoc": 1219, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "String.format(format,finished.get(0).getFilename(),FBUtilities.prettyPrintMemory(startsize),FBUtilities.prettyPrintMemory(endsize),(int)(ratioSTAR100),totalkeysWritten,dTime)", "lineLoc": 1274, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Performing anticompaction on {} sstables\",originalCount", "lineLoc": 1472, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "format,originalCount,antiCompactedSSTableCount", "lineLoc": 1497, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"No valid anticompactions for this group, All sstables were compacted and are no longer available\"", "lineLoc": 1519, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Anticompacting {}\",txn", "lineLoc": 1523, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Anticompaction has been canceled for session {}\",pendingRepair", "lineLoc": 1637, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "e.getMessage(),e", "lineLoc": 1638, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "error", "msg": "\"Error anticompacting \" + txn + \" for \" + pendingRepair,e", "lineLoc": 1643, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"Cache flushing was already in progress: skipping {}\",writer.getCompactionInfo()", "lineLoc": 1704, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "t.getMessage()", "lineLoc": 1818, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "warn", "msg": "\"Interruption of compaction encountered exceptions:\",t", "lineLoc": 1820, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"Full interruption stack trace:\",t", "lineLoc": 1822, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Executor has been shut down, not submitting {}\",name", "lineLoc": 1854, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "info", "msg": "\"Executor has shut down, could not submit {}\",name", "lineLoc": 1867, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "error", "msg": "\"Failed to submit {}\",name,ex", "lineLoc": 1869, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionManager.java"}, {"severity": "trace", "msg": "\"{} subscribed to the data tracker.\",this", "lineLoc": 168, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java"}, {"severity": "debug", "msg": "\"Running automatic sstable upgrade for {}\",sstable", "lineLoc": 251, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java"}, {"severity": "debug", "msg": "\"Recreating compaction strategy - compaction parameters changed for {}.{}\",cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 514, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java"}, {"severity": "debug", "msg": "\"Recreating compaction strategy - disk boundaries are out of date for {}.{}.\",cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 516, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java"}, {"severity": "debug", "msg": "\"SSTable repairedAt/pendingRepaired values changed while getting scanners\"", "lineLoc": 878, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java"}, {"severity": "info", "msg": "\"Switching local compaction strategy from {} to {}}\",this.params,params", "lineLoc": 1065, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionStrategyManager.java"}, {"severity": "debug", "msg": "\"Compacting ({}) {}\",taskId,ssTableLoggerMsg", "lineLoc": 156, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java"}, {"severity": "debug", "msg": "String.format(\"Compacted (%s) %d sstables to [%s] to level=%d.  %s to %s (~%d%% of original) in %,dms.  Read Throughput = %s, Write Throughput = %s, Row Throughput = ~%,d/s.  %,d total partitions merged to %,d.  Partition merge counts were {%s}\",taskId,transaction.originals().size(),newSSTableNames.toString(),getLevel(),FBUtilities.prettyPrintMemory(startsize),FBUtilities.prettyPrintMemory(endsize),(int)(ratioSTAR100),dTime,FBUtilities.prettyPrintMemoryPerSecond(startsize,durationInNano),FBUtilities.prettyPrintMemoryPerSecond(endsize,durationInNano),(int)totalSourceCQLRowsSLASH(TimeUnit.NANOSECONDS.toSeconds(durationInNano) + 1),totalSourceRows,totalKeysWritten,mergeSummary)", "lineLoc": 250, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java"}, {"severity": "trace", "msg": "\"CF Total Bytes Compacted: {}\",FBUtilities.prettyPrintMemory(CompactionTask.addToTotalBytesCompacted(endsize))", "lineLoc": 267, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java"}, {"severity": "trace", "msg": "\"Actual #keys: {}, Estimated #keys:{}, Err%: {}\",totalKeysWritten,estimatedKeys,((double)(totalKeysWrittenSUBestimatedKeys)SLASHtotalKeysWritten)", "lineLoc": 268, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java"}, {"severity": "info", "msg": "\"Compaction space check is disabled\"", "lineLoc": 363, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java"}, {"severity": "warn", "msg": "msg", "lineLoc": 394, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java"}, {"severity": "warn", "msg": "\"Not enough space for compaction, {}MB estimated.  Reducing scope.\",(float)expectedWriteSizeSLASH1024SLASH1024", "lineLoc": 400, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/CompactionTask.java"}, {"severity": "trace", "msg": "\"Disabling tombstone compactions for DTCS\"", "lineLoc": 64, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java"}, {"severity": "trace", "msg": "\"Enabling tombstone compactions for DTCS\"", "lineLoc": 67, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Could not acquire references for compacting SSTables {} which is not a problem per se,\" + \"unless it happens frequently, in which case it must be reported. Will retry later.\",latestBucket", "lineLoc": 88, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java"}, {"severity": "trace", "msg": "\"Including expired sstables: {}\",expired", "lineLoc": 130, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java"}, {"severity": "debug", "msg": "\"Compaction buckets are {}\",buckets", "lineLoc": 165, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java"}, {"severity": "debug", "msg": "\"Got sstables {} for STCS from {}\",s,sstables", "lineLoc": 406, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java"}, {"severity": "trace", "msg": "\"Unable to mark {} for compaction; probably a background compaction got to it first.  You can disable background compactions temporarily if this is a problem\",sstables", "lineLoc": 441, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Using a non-default timestamp_resolution {} - are you really doing inserts with USING TIMESTAMP <non_microsecond_timestamp> (or driver equivalent)?\",timestampResolution", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/DateTieredCompactionStrategyOptions.java"}, {"severity": "warn", "msg": "\"Max sstable size of {}MB is configured for {}.{}; having a unit of compaction this large is probably a bad idea\",configuredMaxSSTableSize,cfs.name,cfs.getTableName()", "lineLoc": 77, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Max sstable size of {}MB is configured for {}.{}.  Testing done for CASSANDRA-5727 indicates that performance improves up to 160MB\",configuredMaxSSTableSize,cfs.name,cfs.getTableName()", "lineLoc": 80, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java"}, {"severity": "trace", "msg": "\"Created {}\",manifest", "lineLoc": 100, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java"}, {"severity": "trace", "msg": "\"No compaction necessary for {}\",this", "lineLoc": 138, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Could not acquire references for compacting SSTables {} which is not a problem per se,\" + \"unless it happens frequently, in which case it must be reported. Will retry later.\",candidate.sstables", "lineLoc": 155, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java"}, {"severity": "trace", "msg": "\"Unable to mark {} for compaction; probably a background compaction got to it first.  You can disable background compactions temporarily if this is a problem\",sstables", "lineLoc": 203, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Live sstable {} from level {} is not on corresponding level in the leveled manifest.\" + \" This is not a problem per se, but may indicate an orphaned sstable due to a failed\" + \" compaction not cleaned up properly.\",sstable.getFilename(),level", "lineLoc": 301, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledCompactionStrategy.java"}, {"severity": "debug", "msg": "\"Could not add sstable {} in level {} - dropping to 0\",reader,reader.getSSTableLevel()", "lineLoc": 166, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "error", "msg": "\"Could not change sstable level - adding it at level 0 anyway, we will find it at restart.\",e", "lineLoc": 172, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"Replacing [{}]\",toString(removed)", "lineLoc": 203, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"Adding [{}]\",toString(added)", "lineLoc": 220, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "warn", "msg": "\"At level {}, {} [{}, {}] overlaps {} [{}, {}].  This could be caused by a bug in Cassandra 1.1.0 .. 1.1.3 or due to the fact that you have dropped sstables from another node into the data directory. \" + \"Sending back to L0.  If you didn't drop in sstables, and have not yet run scrub, you should do so since you may also have rows out-of-order within an sstable\",level,previous,previous.first,previous.last,current,current.first,current.last", "lineLoc": 236, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "info", "msg": "\"Bootstrapping - doing STCS in L0\"", "lineLoc": 337, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"Compaction score for level {} is {}\",i,score", "lineLoc": 383, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"Compaction candidates for L{} are {}\",i,toString(candidates)", "lineLoc": 398, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"No compaction candidates for L{}\",i", "lineLoc": 403, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "debug", "msg": "\"L0 is too far behind, performing size-tiering there first\"", "lineLoc": 429, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"CompactionCounter: {}: {}\",j,compactionCounterLBRACKETjRBRACKET", "lineLoc": 470, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "info", "msg": "\"Adding high-level (L{}) {} to candidates\",sstable.getSSTableLevel(),sstable", "lineLoc": 501, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"L{} contains {} SSTables ({}) in {}\",i,getLevel(i).size(),FBUtilities.prettyPrintMemory(SSTableReader.getTotalBytes(getLevel(i))),this", "lineLoc": 537, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"Choosing candidates for L{}\",level", "lineLoc": 647, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "trace", "msg": "\"Estimating {} compactions to do for {}.{}\",Arrays.toString(estimated),cfs.keyspace.getName(),cfs.name", "lineLoc": 830, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/LeveledManifest.java"}, {"severity": "debug", "msg": "\"Creating {}.{} compaction strategy for pending repair: {}\",cfs.metadata.keyspace,cfs.metadata.name,id", "lineLoc": 117, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/PendingRepairManager.java"}, {"severity": "debug", "msg": "\"Removing compaction strategy for pending repair {} on  {}.{}\",sessionID,cfs.metadata.keyspace,cfs.metadata.name", "lineLoc": 144, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/PendingRepairManager.java"}, {"severity": "info", "msg": "\"Obsoleting transient repaired ssatbles\"", "lineLoc": 446, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/PendingRepairManager.java"}, {"severity": "debug", "msg": "\"Setting repairedAt to {} on {} for {}\",repairedAt,transaction.originals(),sessionID", "lineLoc": 452, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/PendingRepairManager.java"}, {"severity": "info", "msg": "\"Not compacting {}, level is already {}\",sstable,level", "lineLoc": 73, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/SingleSSTableLCSTask.java"}, {"severity": "info", "msg": "\"Changing level on {} from {} to {}\",sstable,metadataBefore.sstableLevel,level", "lineLoc": 79, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/SingleSSTableLCSTask.java"}, {"severity": "trace", "msg": "\"Compaction buckets are {}\",buckets", "lineLoc": 88, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Could not acquire references for compacting SSTables {} which is not a problem per se,\" + \"unless it happens frequently, in which case it must be reported. Will retry later.\",hottestBucket", "lineLoc": 193, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy.java"}, {"severity": "trace", "msg": "\"Unable to mark {} for compaction; probably a background compaction got to it first.  You can disable background compactions temporarily if this is a problem\",sstables", "lineLoc": 228, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/SizeTieredCompactionStrategy.java"}, {"severity": "warn", "msg": "\"You are running with sstables overlapping checks disabled, it can result in loss of data\"", "lineLoc": 41, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionController.java"}, {"severity": "debug", "msg": "\"Disabling tombstone compactions for TWCS\"", "lineLoc": 65, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "debug", "msg": "\"Enabling tombstone compactions for TWCS\"", "lineLoc": 68, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Could not acquire references for compacting SSTables {} which is not a problem per se,\" + \"unless it happens frequently, in which case it must be reported. Will retry later.\",latestBucket", "lineLoc": 87, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "debug", "msg": "\"TWCS expired check sufficiently far in the past, checking for fully expired SSTables\"", "lineLoc": 117, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "debug", "msg": "\"TWCS skipping check for fully expired SSTables\"", "lineLoc": 124, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "debug", "msg": "\"Including expired sstables: {}\",expired", "lineLoc": 132, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "trace", "msg": "\"buckets {}, max timestamp {}\",buckets,maxTimestamp", "lineLoc": 258, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "trace", "msg": "\"Key {}, now {}\",key,now", "lineLoc": 299, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "debug", "msg": "\"Using STCS compaction for first window of bucket: data files {} , options {}\",pairs,stcsOptions", "lineLoc": 305, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "debug", "msg": "\"bucket size {} >= 2 and not in current bucket, compacting what's here: {}\",bucket.size(),bucket", "lineLoc": 314, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "trace", "msg": "\"No compaction necessary for bucket size {} , key {}, now {}\",bucket.size(),key,now", "lineLoc": 319, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "debug", "msg": "\"Unable to mark {} for compaction; probably a background compaction got to it first.  You can disable background compactions temporarily if this is a problem\",sstables", "lineLoc": 363, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategy.java"}, {"severity": "warn", "msg": "\"Using a non-default timestamp_resolution {} - are you really doing inserts with USING TIMESTAMP <non_microsecond_timestamp> (or driver equivalent)?\",timestampResolution", "lineLoc": 66, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/TimeWindowCompactionStrategyOptions.java"}, {"severity": "debug", "msg": "\"Switching write location from {} to {}\",locations.get(prevIdx),locations.get(locationIndex)", "lineLoc": 183, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/writers/CompactionAwareWriter.java"}, {"severity": "trace", "msg": "\"All sstables not from the same disk - putting results in {}\",directory", "lineLoc": 218, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/writers/CompactionAwareWriter.java"}, {"severity": "trace", "msg": "\"putting compaction results in {}\",directory", "lineLoc": 231, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/writers/CompactionAwareWriter.java"}, {"severity": "debug", "msg": "\"Switching writer, currentBytesToWrite = {}\",currentBytesToWrite", "lineLoc": 95, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/writers/SplittingSizeTieredCompactionWriter.java"}, {"severity": "trace", "msg": "\"Switching writer, currentPartitionsToWrite = {}\",currentPartitionsToWrite", "lineLoc": 116, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/compaction/writers/SplittingSizeTieredCompactionWriter.java"}, {"severity": "warn", "msg": "\"invalid global counter shard detected; ({}, {}, {}) and ({}, {}, {}) differ only in \" + \"count; will pick highest to self-heal on compaction\",leftState.getCounterId(),leftClock,leftCount,rightState.getCounterId(),rightClock,rightCount", "lineLoc": 468, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/context/CounterContext.java"}, {"severity": "warn", "msg": "\"invalid remote counter shard detected; ({}, {}, {}) and ({}, {}, {}) differ only in \" + \"count; will pick highest to self-heal on compaction\",leftState.getCounterId(),leftClock,leftCount,rightState.getCounterId(),rightClock,rightCount", "lineLoc": 509, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/context/CounterContext.java"}, {"severity": "debug", "msg": "\"Registered user defined expression type {} and serializer {} with identifier {}\",expressionClass.getName(),deserializer.getClass().getName(),id", "lineLoc": 903, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/filter/RowFilter.java"}, {"severity": "trace", "msg": "\"Committing transaction over {} staged: {}, logged: {}\",originals,staged,logged", "lineLoc": 213, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "trace", "msg": "\"Aborting transaction over {} staged: {}, logged: {}\",originals,staged,logged", "lineLoc": 239, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "trace", "msg": "\"Obsoleting {}\",obsolete", "lineLoc": 248, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "trace", "msg": "\"Checkpointing staged {}\",staged", "lineLoc": 298, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "trace", "msg": "\"Staging for obsolescence {}\",reader", "lineLoc": 359, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "trace", "msg": "\"Staging for obsolescence {}\",originals", "lineLoc": 375, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "trace", "msg": "\"Cancelling {} from transaction\",cancel", "lineLoc": 457, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "trace", "msg": "\"Splitting {} into new transaction\",readers", "lineLoc": 481, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LifecycleTransaction.java"}, {"severity": "error", "msg": "\"Failed to classify files in {}\\n\" + \"Some old files are missing but the txn log is still there and not completed\\n\" + \"Files in folder:\\n{}\\nTxn: {}\",folder,files.isEmpty()QUES\"\\t-\":String.join(\"\\n\",files.keySet().stream().map(fARROWString.format(\"\\t%s\",f)).collect(Collectors.toList())),txnFile.toString(true)", "lineLoc": 172, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogAwareFileLister.java"}, {"severity": "error", "msg": "\"Failed to read records for transaction log {}\",this", "lineLoc": 161, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogFile.java"}, {"severity": "error", "msg": "\"Failed to sync file {}\",file,e", "lineLoc": 107, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplica.java"}, {"severity": "error", "msg": "\"Failed to sync directory descriptor {}\",directoryDescriptor,e", "lineLoc": 126, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplica.java"}, {"severity": "error", "msg": "\"Failed to open log replica {}\",file,e", "lineLoc": 72, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplicaSet.java"}, {"severity": "trace", "msg": "\"Added log file replica {} \",file", "lineLoc": 76, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplicaSet.java"}, {"severity": "trace", "msg": "\"Created new file replica {}\",replica", "lineLoc": 91, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplicaSet.java"}, {"severity": "error", "msg": "\"Failed to create log replica {}/{}\",directory,fileName,e", "lineLoc": 95, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplicaSet.java"}, {"severity": "error", "msg": "\"Failed to add record '{}' to some replicas '{}'\",record,this", "lineLoc": 231, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogReplicaSet.java"}, {"severity": "trace", "msg": "\"Created transaction logs with id {}\",txnFile.id()", "lineLoc": 130, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "trace", "msg": "\"Deleting {}\",file", "lineLoc": 218, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Unable to delete {} as it does not exist, see debug log file for stack trace\",file", "lineLoc": 224, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "debug", "msg": "\"Unable to delete {} as it does not exist, stack trace:\\n {}\",file,baos", "lineLoc": 232, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Unable to delete {}\",file,e", "lineLoc": 237, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "trace", "msg": "\"Removing files for transaction log {}\",data", "lineLoc": 270, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Transaction log {} indicates txn was not completed, trying to abort it now\",data", "lineLoc": 276, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Failed to abort transaction log {}\",data,err", "lineLoc": 279, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "info", "msg": "\"Failed deleting files for transaction log {}, we'll retry after GC and on on server restart\",data,err", "lineLoc": 286, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "trace", "msg": "\"Closing transaction log {}\",data", "lineLoc": 294, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"SSTableTidier ran with no existing data file for an sstable that was not new\"", "lineLoc": 350, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Failed deletion for {}, we'll retry after GC and on server restart\",desc", "lineLoc": 357, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Failed to complete file transaction id {}\",id(),t", "lineLoc": 401, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Failed to remove unfinished transaction leftovers for transaction log {}\",txn.toString(true),failure", "lineLoc": 487, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "error", "msg": "\"Unexpected disk state: failed to read transaction log {}\",txn.toString(true)", "lineLoc": 496, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/LogTransaction.java"}, {"severity": "trace", "msg": "\"adding {} to list of files tracked for {}.{}\",sstable.descriptor,cfstore.keyspace.getName(),cfstore.name", "lineLoc": 152, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/Tracker.java"}, {"severity": "trace", "msg": "\"removing {} from list of files tracked for {}.{}\",sstable.descriptor,cfstore.keyspace.getName(),cfstore.name", "lineLoc": 166, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/lifecycle/Tracker.java"}, {"severity": "warn", "msg": "\"Changing from TimestampType to DateType is allowed, but be wary that they sort differently for pre-unix-epoch timestamps \" + \"(negative timestamp values) and thus this change will corrupt your data if you have such negative timestamp. There is no \" + \"reason to switch from DateType to TimestampType except if you were using DateType in the first place and switched to \" + \"TimestampType by mistake.\"", "lineLoc": 94, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/marshal/DateType.java"}, {"severity": "warn", "msg": "\"Changing from DateType to TimestampType is allowed, but be wary that they sort differently for pre-unix-epoch timestamps \" + \"(negative timestamp values) and thus this change will corrupt your data if you have such negative timestamp. So unless you \" + \"know that you don't have *any* pre-unix-epoch timestamp you should change back to DateType\"", "lineLoc": 117, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/marshal/TimestampType.java"}, {"severity": "info", "msg": "\"Scheduling monitoring task with report interval of {} ms, max operations {}\",reportIntervalMillis,maxOperations", "lineLoc": 95, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/monitoring/MonitoringTask.java"}, {"severity": "debug", "msg": "\"{} operations timed out in the last {} msecs:{}{}\",failedOperations.num(),NANOSECONDS.toMillis(elapsedNanos),LINE_SEPARATOR,failedOperations.getLogMessage()", "lineLoc": 154, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/monitoring/MonitoringTask.java"}, {"severity": "debug", "msg": "\"{} operations were slow in the last {} msecs:{}{}\",slowOperations.num(),NANOSECONDS.toMillis(approxElapsedNanos),LINE_SEPARATOR,slowOperations.getLogMessage()", "lineLoc": 175, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/monitoring/MonitoringTask.java"}, {"severity": "error", "msg": "\"Could not reference sstables\"", "lineLoc": 177, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/CassandraValidationIterator.java"}, {"severity": "error", "msg": "\"Could not mark compacting for {} (sstables = {}, compacting = {})\",sessionID,sstables,cfs.getTracker().getCompacting()", "lineLoc": 190, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "warn", "msg": "e.getMessage()", "lineLoc": 194, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "debug", "msg": "\"Got exception trying to acquire sstables\",e", "lineLoc": 195, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "debug", "msg": "\"acquiring sstables for pending anti compaction on session {}\",sessionID", "lineLoc": 203, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "warn", "msg": "\"Session {} failed acquiring sstables: {}, retrying every {}ms for another {}s\",sessionID,e.getMessage(),acquireSleepMillis,TimeUnit.SECONDS.convert(delay + startSUBSystem.currentTimeMillis(),TimeUnit.MILLISECONDS)", "lineLoc": 222, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "warn", "msg": "\"{} Timed out waiting to acquire sstables\",sessionID,e", "lineLoc": 230, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "error", "msg": "\"Got exception disabling compactions for session {}\",sessionID,t", "lineLoc": 235, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "info", "msg": "\"Releasing acquired sstables for {}.{}\",result.cfs.metadata.keyspace,result.cfs.metadata.name", "lineLoc": 284, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "warn", "msg": "message", "lineLoc": 292, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/repair/PendingAntiCompaction.java"}, {"severity": "info", "msg": "\"[{}] Logging iterator on {}.{}, partition key={}, reversed={}\",id,metadata.keyspace,metadata.name,metadata.partitionKeyType.getString(iterator.partitionKey().getKey()),iterator.isReverseOrder()", "lineLoc": 79, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/rows/RowIterators.java"}, {"severity": "info", "msg": "\"[{}] {}\",id,row.toString(metadata)", "lineLoc": 92, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/rows/RowIterators.java"}, {"severity": "info", "msg": "\"[{}] {}\",id,row.toString(metadata)", "lineLoc": 99, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/rows/RowIterators.java"}, {"severity": "info", "msg": "\"[{}] Logging iterator on {}.{}, partition key={}, reversed={}, deletion={}\",id,metadata.keyspace,metadata.name,metadata.partitionKeyType.getString(iterator.partitionKey().getKey()),iterator.isReverseOrder(),iterator.partitionLevelDeletion().markedForDeleteAt()", "lineLoc": 350, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIterators.java"}, {"severity": "info", "msg": "\"[{}] {}\",id,row.toString(metadata,fullDetails)", "lineLoc": 364, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIterators.java"}, {"severity": "info", "msg": "\"[{}] {}\",id,row.toString(metadata,fullDetails)", "lineLoc": 371, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIterators.java"}, {"severity": "info", "msg": "\"[{}] {}\",id,marker.toString(metadata)", "lineLoc": 378, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/rows/UnfilteredRowIterators.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Start receiving file #{} from {}, repairedAt = {}, size = {}, ks = '{}', pendingRepair = '{}', table = '{}'.\",session.planId(),fileSeqNum,session.peer,repairedAt,totalSize,cfs.keyspace.getName(),pendingRepair,cfs.getTableName()", "lineLoc": 73, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamReader.java"}, {"severity": "trace", "msg": "\"[Stream #{}] Reading section {} with length {} from stream.\",session.planId(),sectionIdxPLUSPLUS,sectionLength", "lineLoc": 91, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamReader.java"}, {"severity": "trace", "msg": "\"[Stream #{}] Finished receiving file #{} from {} readBytes = {}, totalSize = {}\",session.planId(),fileSeqNum,session.peer,FBUtilities.prettyPrintMemory(cis.getTotalCompressedBytesRead()),FBUtilities.prettyPrintMemory(totalSize)", "lineLoc": 104, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamReader.java"}, {"severity": "warn", "msg": "\"[Stream {}] Error while reading partition {} from stream on ks='{}' and table='{}'.\",session.planId(),partitionKey,cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamReader.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Start streaming file {} to {}, repairedAt = {}, totalSize = {}\",session.planId(),sstable.getFilename(),session.peer,sstable.getSSTableMetadata().repairedAt,totalSize", "lineLoc": 61, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamWriter.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Writing section {} with length {} to stream.\",session.planId(),sectionIdxPLUSPLUS,length", "lineLoc": 77, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamWriter.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Finished streaming file {} to {}, bytesTransferred = {}, totalSize = {}\",session.planId(),sstable.getFilename(),session.peer,FBUtilities.prettyPrintMemory(progress),FBUtilities.prettyPrintMemory(totalSize)", "lineLoc": 98, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraCompressedStreamWriter.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Started receiving sstable #{} from {}, size = {}, table = {}\",session.planId(),fileSequenceNumber,session.peer,prettyPrintMemory(totalSize),cfs.metadata()", "lineLoc": 97, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamReader.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Started receiving {} component from {}, componentSize = {}, readBytes = {}, totalSize = {}\",session.planId(),component,session.peer,prettyPrintMemory(length),prettyPrintMemory(bytesRead),prettyPrintMemory(totalSize)", "lineLoc": 114, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamReader.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Finished receiving {} component from {}, componentSize = {}, readBytes = {}, totalSize = {}\",session.planId(),component,session.peer,prettyPrintMemory(length),prettyPrintMemory(bytesRead),prettyPrintMemory(totalSize)", "lineLoc": 126, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamReader.java"}, {"severity": "error", "msg": "\"[Stream {}] Error while reading sstable from stream for table = {}\",session.planId(),cfs.metadata(),e", "lineLoc": 140, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamReader.java"}, {"severity": "debug", "msg": "\"[Table #{}] {} Components to write: {}\",cfs.metadata(),desc.filenameFor(Component.DATA),components", "lineLoc": 174, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamReader.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Start streaming sstable {} to {}, repairedAt = {}, totalSize = {}\",session.planId(),sstable.getFilename(),session.peer,sstable.getSSTableMetadata().repairedAt,prettyPrintMemory(totalSize)", "lineLoc": 68, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamWriter.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Finished streaming {}.{} gen {} component {} to {}, xfered = {}, length = {}, totalSize = {}\",session.planId(),sstable.getKeyspaceName(),sstable.getColumnFamilyName(),sstable.descriptor.generation,component,session.peer,prettyPrintMemory(bytesWritten),prettyPrintMemory(length),prettyPrintMemory(totalSize)", "lineLoc": 98, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamWriter.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Finished streaming sstable {} to {}, xfered = {}, totalSize = {}\",session.planId(),sstable.getFilename(),session.peer,prettyPrintMemory(progress),prettyPrintMemory(totalSize)", "lineLoc": 112, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraEntireSSTableStreamWriter.java"}, {"severity": "debug", "msg": "\"Incoming stream entireSSTable={} components={}\",streamHeader.isEntireSSTable,streamHeader.componentManifest", "lineLoc": 63, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraIncomingFile.java"}, {"severity": "debug", "msg": "\"ViewFilter for {}/{} sstables\",sstables.size(),Iterables.size(view.select(SSTableSet.CANONICAL))", "lineLoc": 140, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamManager.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Start receiving file #{} from {}, repairedAt = {}, size = {}, ks = '{}', table = '{}', pendingRepair = '{}'.\",session.planId(),fileSeqNum,session.peer,repairedAt,totalSize,cfs.keyspace.getName(),cfs.getTableName(),pendingRepair", "lineLoc": 112, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamReader.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Finished receiving file #{} from {} readBytes = {}, totalSize = {}\",session.planId(),fileSeqNum,session.peer,FBUtilities.prettyPrintMemory(in.getBytesRead()),FBUtilities.prettyPrintMemory(totalSize)", "lineLoc": 129, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamReader.java"}, {"severity": "warn", "msg": "\"[Stream {}] Error while reading partition {} from stream on ks='{}' and table='{}'.\",session.planId(),partitionKey,cfs.keyspace.getName(),cfs.getTableName(),e", "lineLoc": 136, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamReader.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Invalidated {} row cache entries on table {}.{} after stream \" + \"receive task completed.\",session.planId(),invalidatedKeys,cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 251, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamReceiver.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Invalidated {} counter cache entries on table {}.{} after stream \" + \"receive task completed.\",session.planId(),invalidatedKeys,cfs.keyspace.getName(),cfs.getTableName()", "lineLoc": 260, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamReceiver.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Start streaming file {} to {}, repairedAt = {}, totalSize = {}\",session.planId(),sstable.getFilename(),session.peer,sstable.getSSTableMetadata().repairedAt,totalSize", "lineLoc": 82, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamWriter.java"}, {"severity": "debug", "msg": "\"[Stream #{}] Finished streaming file {} to {}, bytesTransferred = {}, totalSize = {}\",session.planId(),sstable.getFilename(),session.peer,FBUtilities.prettyPrintMemory(progress),FBUtilities.prettyPrintMemory(totalSize)", "lineLoc": 123, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CassandraStreamWriter.java"}, {"severity": "warn", "msg": "\"Error while reading compressed input stream.\",e", "lineLoc": 273, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/streaming/CompressedInputStream.java"}, {"severity": "debug", "msg": "\"Stopping current view builder due to schema change\"", "lineLoc": 222, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/View.java"}, {"severity": "debug", "msg": "\"View already marked built for {}.{}\",ksName,view.name", "lineLoc": 89, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java"}, {"severity": "debug", "msg": "\"Starting build of view({}.{}). Flushing base table {}.{}\",ksName,view.name,ksName,baseCfs.name", "lineLoc": 97, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java"}, {"severity": "debug", "msg": "\"Stopped build for view({}.{}) after covering {} keys\",ksName,view.name,keysBuilt", "lineLoc": 135, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java"}, {"severity": "info", "msg": "\"Interrupted build for view({}.{}) after covering {} keys\",ksName,view.name,keysBuilt", "lineLoc": 195, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java"}, {"severity": "warn", "msg": "\"Materialized View failed to complete, sleeping 5 minutes before restarting\",t", "lineLoc": 200, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java"}, {"severity": "debug", "msg": "\"Marking view({}.{}) as built after covering {} keys \",ksName,view.name,keysBuilt", "lineLoc": 209, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java"}, {"severity": "warn", "msg": "\"Failed to update the distributed status of view, sleeping 5 minutes before retrying\",e", "lineLoc": 224, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilder.java"}, {"severity": "trace", "msg": "\"Skipping {}, view query filters\",key", "lineLoc": 99, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilderTask.java"}, {"severity": "debug", "msg": "\"Starting new view build for range {}\",range", "lineLoc": 127, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilderTask.java"}, {"severity": "debug", "msg": "\"Resuming view build for range {} from token {} with {} covered keys\",range,prevToken,keysBuilt", "lineLoc": 129, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilderTask.java"}, {"severity": "warn", "msg": "\"Failed to get schema to converge before building view {}.{}\",baseCfs.keyspace.getName(),view.name", "lineLoc": 138, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilderTask.java"}, {"severity": "debug", "msg": "\"Completed build of view({}.{}) for range {} after covering {} keys \",ksName,view.name,range,keysBuilt", "lineLoc": 185, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilderTask.java"}, {"severity": "debug", "msg": "\"Stopped build for view({}.{}) for range {} after covering {} keys\",ksName,view.name,range,keysBuilt", "lineLoc": 189, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewBuilderTask.java"}, {"severity": "info", "msg": "\"Not submitting build tasks for views in keyspace {} as \" + \"storage service is not initialized\",keyspace.getName()", "lineLoc": 125, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewManager.java"}, {"severity": "warn", "msg": "\"Not adding view {} because the base table {} is unknown\",definition.name(),definition.baseTableId", "lineLoc": 143, "fileLoc": "cassandra/src/java/org/apache/cassandra/db/view/ViewManager.java"}, {"severity": "trace", "msg": "\"Beginning bootstrap process\"", "lineLoc": 65, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/BootStrapper.java"}, {"severity": "warn", "msg": "\"manually specified tokens override automatic allocation\"", "lineLoc": 158, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/BootStrapper.java"}, {"severity": "warn", "msg": "\"Picking random token for a single vnode.  You should probably add more vnodes and/or use the automatic token allocation mechanism.\"", "lineLoc": 176, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/BootStrapper.java"}, {"severity": "info", "msg": "\"tokens manually specified as {}\",initialTokens", "lineLoc": 186, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/BootStrapper.java"}, {"severity": "info", "msg": "\"Generated random tokens. tokens are {}\",tokens", "lineLoc": 228, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/BootStrapper.java"}, {"severity": "info", "msg": "\"Using other DC endpoints for streaming for range: {} and keyspace {}\",trivialRange,keyspace", "lineLoc": 179, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeFetchMapCalculator.java"}, {"severity": "debug", "msg": "\"Not optimising trivial range {} for keyspace {}\",range,keyspace", "lineLoc": 320, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeFetchMapCalculator.java"}, {"severity": "info", "msg": "\"Using other DC endpoints for streaming for range: {} and keyspace {}\",range,keyspace", "lineLoc": 331, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeFetchMapCalculator.java"}, {"severity": "info", "msg": "\"Not adding ranges for Local Strategy keyspace={}\",keyspaceName", "lineLoc": 315, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "info", "msg": "\"{}: range {} exists on {} for keyspace {}\",description,entry.getKey(),entry.getValue(),keyspaceName", "lineLoc": 323, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "trace", "msg": "\"{}: range source {} local range {} for keyspace {}\",description,r.remote,r.local,keyspaceName", "lineLoc": 345, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Keyspace: {}\",keyspace", "lineLoc": 412, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"To fetch RN: {}\",fetchRanges", "lineLoc": 413, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Fetch ranges: {}\",rangeAddresses", "lineLoc": 414, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"To fetch {}\",toFetch", "lineLoc": 429, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Old endpoints {}\",oldEndpoints", "lineLoc": 451, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"New endpoints {}\",newEndpoints", "lineLoc": 452, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Endpoints to fetch for {} are {}\",toFetch,sources", "lineLoc": 503, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "warn", "msg": "\"A node required to move the data consistently is down\"", "lineLoc": 526, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "warn", "msg": "\"Unable to find sufficient sources for streaming range {} in keyspace {} with RF=1. \" + \"Keyspace might be missing data.\",toFetch,keyspace", "lineLoc": 531, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "warn", "msg": "\"A node required to move the data consistently is down\"", "lineLoc": 537, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Work map {}\",workMap", "lineLoc": 561, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "info", "msg": "\"Output from RangeFetchMapCalculator for keyspace {}\",keyspace", "lineLoc": 586, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "info", "msg": "\"Streaming range {} from endpoint {} for keyspace {}\",entry.getValue(),entry.getKey(),keyspace", "lineLoc": 632, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Keyspace {} Sources {}\",keyspace,sources", "lineLoc": 646, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "info", "msg": "\"Some ranges of {} are already available. Skipping streaming those ranges. Skipping {}. Fully available {} Transiently available {}\",fetchReplicas,skipped,available.full,available.trans", "lineLoc": 673, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "trace", "msg": "\"{}ing from {} ranges {}\",description,source,StringUtils.join(remaining,\", \")", "lineLoc": 678, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Source and our replicas {}\",fetchReplicas", "lineLoc": 690, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "debug", "msg": "\"Source {} Keyspace {}  streaming full {} transient {}\",source,keyspace,full,transientReplicas", "lineLoc": 691, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/RangeStreamer.java"}, {"severity": "warn", "msg": "\"Selected tokens {}\",tokens", "lineLoc": 61, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocation.java"}, {"severity": "warn", "msg": "\"Replicated node load in datacenter before allocation {}\",statToString(os)", "lineLoc": 65, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocation.java"}, {"severity": "warn", "msg": "\"Replicated node load in datacenter after allocation {}\",statToString(ns)", "lineLoc": 66, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocation.java"}, {"severity": "warn", "msg": "\"Unexpected growth in standard deviation after allocation.\"", "lineLoc": 70, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocation.java"}, {"severity": "info", "msg": "\"Using NoReplicationTokenAllocator.\"", "lineLoc": 39, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocatorFactory.java"}, {"severity": "info", "msg": "\"Using ReplicationAwareTokenAllocator.\"", "lineLoc": 44, "fileLoc": "cassandra/src/java/org/apache/cassandra/dht/tokenallocator/TokenAllocatorFactory.java"}, {"severity": "debug", "msg": "\"Returning {} {} events for key {} (limit {}) (includeKey {})\",ret.size(),eventClazz,key,limit,includeKey", "lineLoc": 92, "fileLoc": "cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventPersistence.java"}, {"severity": "debug", "msg": "\"Enabling events: {}\",eventClazz", "lineLoc": 100, "fileLoc": "cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventPersistence.java"}, {"severity": "debug", "msg": "\"Disabling events: {}\",eventClazz", "lineLoc": 113, "fileLoc": "cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventPersistence.java"}, {"severity": "trace", "msg": "\"Persisting received {} event\",cls.getName()", "lineLoc": 126, "fileLoc": "cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventPersistence.java"}, {"severity": "trace", "msg": "\"Publishing: {}\",event", "lineLoc": 80, "fileLoc": "cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventService.java"}, {"severity": "debug", "msg": "\"Adding subscriber: {}\",consumer", "lineLoc": 114, "fileLoc": "cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventService.java"}, {"severity": "debug", "msg": "\"Total subscribers: {}\",subscribersByClass.values().size()", "lineLoc": 119, "fileLoc": "cassandra/src/java/org/apache/cassandra/diag/DiagnosticEventService.java"}, {"severity": "warn", "msg": "\"Overriding max local pause time to {}ms\",pause", "lineLoc": 67, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "info", "msg": "\"Overriding FD INITIAL_VALUE to {}ms\",newvalue", "lineLoc": 102, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "error", "msg": "\"Unknown endpoint: \" + ep,NEWIllegalArgumentException(\"\")", "lineLoc": 281, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"Average for {} is {}ns\",ep,heartbeatWindow.mean()", "lineLoc": 304, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "warn", "msg": "\"Not marking nodes down due to local pause of {}ns > {}ns\",diff,MAX_LOCAL_PAUSE_IN_NANOS", "lineLoc": 319, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "debug", "msg": "\"Still not marking nodes down due to local pause\"", "lineLoc": 325, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"PHI for {} : {}\",ep,phi", "lineLoc": 330, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"Node {} phi {} > {}; intervals: {} mean: {}ns\",NEWObjectLBRACKETRBRACKETLBRACEep,PHI_FACTORSTARphi,getPhiConvictThreshold(),hbWnd,hbWnd.mean()RBRACE", "lineLoc": 335, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "debug", "msg": "\"PHI for {} : {}\",ep,phi", "lineLoc": 343, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"PHI for {} : {}\",ep,phi", "lineLoc": 347, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"mean for {} : {}ns\",ep,hbWnd.mean()", "lineLoc": 348, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "debug", "msg": "\"Forcing conviction of {}\",ep", "lineLoc": 354, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "info", "msg": "\"Overriding FD MAX_INTERVAL to {}ms\",newvalue", "lineLoc": 470, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"Reporting interval time of {}ns for {}\",interArrivalTime,ep", "lineLoc": 484, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"Ignoring interval time of {}ns for {}\",interArrivalTime,ep", "lineLoc": 488, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/FailureDetector.java"}, {"severity": "trace", "msg": "\"Received a GossipDigestAck2Message from {}\",from", "lineLoc": 39, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAck2VerbHandler.java"}, {"severity": "trace", "msg": "\"Ignoring GossipDigestAck2Message because gossip is disabled\"", "lineLoc": 44, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAck2VerbHandler.java"}, {"severity": "trace", "msg": "\"Received a GossipDigestAckMessage from {}\",from", "lineLoc": 43, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java"}, {"severity": "trace", "msg": "\"Ignoring GossipDigestAckMessage because gossip is disabled\"", "lineLoc": 47, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java"}, {"severity": "trace", "msg": "\"Received ack with {} digests and {} states\",gDigestList.size(),epStateMap.size()", "lineLoc": 54, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java"}, {"severity": "debug", "msg": "\"Received an ack from {}, which may trigger exit from shadow round\",from", "lineLoc": 59, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java"}, {"severity": "trace", "msg": "\"Ignoring unrequested GossipDigestAck from {}\",from", "lineLoc": 74, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java"}, {"severity": "trace", "msg": "\"Sending a GossipDigestAck2Message to {}\",from", "lineLoc": 95, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestAckVerbHandler.java"}, {"severity": "trace", "msg": "\"Received a GossipDigestSynMessage from {}\",from", "lineLoc": 42, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "trace", "msg": "\"Ignoring GossipDigestSynMessage because gossip is disabled\"", "lineLoc": 46, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "warn", "msg": "\"ClusterName mismatch from {} {}!={}\",from,gDigestMessage.clusterId,DatabaseDescriptor.getClusterName()", "lineLoc": 54, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "warn", "msg": "\"Partitioner mismatch from {} {}!={}\",from,gDigestMessage.partioner,DatabaseDescriptor.getPartitionerName()", "lineLoc": 60, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "debug", "msg": "\"Ignoring non-empty GossipDigestSynMessage because currently in gossip shadow round\"", "lineLoc": 77, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "debug", "msg": "\"Received a shadow round syn from {}. Gossip is disabled but \" + \"currently also in shadow round, responding with a minimal ack\",from", "lineLoc": 81, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "trace", "msg": "\"Gossip syn digests are : {}\",sb", "lineLoc": 97, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "trace", "msg": "\"sending {} digests and {} deltas\",deltaGossipDigestList.size(),deltaEpStateMap.size()", "lineLoc": 103, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "trace", "msg": "\"Sending a GossipDigestAckMessage to {}\",from", "lineLoc": 106, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipDigestSynVerbHandler.java"}, {"severity": "trace", "msg": "\"My heartbeat is now {}\",endpointStateMap.get(FBUtilities.getBroadcastAddressAndPort()).getHeartBeatState().getHeartBeatVersion()", "lineLoc": 239, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "error", "msg": "\"Gossip error\",e", "lineLoc": 280, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"Convicting {} with status {} - alive {}\",endpoint,getGossipStatus(epState),epState.isAlive()", "lineLoc": 471, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"evicting {} from gossip\",endpoint", "lineLoc": 532, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"removed {} from seeds, updated seeds list = {}\",endpoint,seeds", "lineLoc": 550, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"removing endpoint {}\",endpoint", "lineLoc": 559, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Gossip Digests are : {}\",sb", "lineLoc": 646, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Removing host: {}\",hostId", "lineLoc": 663, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Sleeping for {}ms to ensure {} does not change\",StorageService.RING_DELAY,endpoint", "lineLoc": 664, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Completing removal of {}\",endpoint", "lineLoc": 697, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Gossiper.unsafeAssassinateEndpoint is deprecated and will be removed in the next release; use assassinateEndpoint instead\"", "lineLoc": 706, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Assassinating {} via gossip\",endpoint", "lineLoc": 724, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Sleeping for {}ms to ensure {} does not change\",StorageService.RING_DELAY,endpoint", "lineLoc": 734, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Endpoint {} disappeared while trying to assassinate, continuing anyway\",endpoint", "lineLoc": 739, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Finished assassinating {}\",endpoint", "lineLoc": 766, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Sending a GossipDigestSyn to {} ...\",to", "lineLoc": 798, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Performing status check ...\"", "lineLoc": 916, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Gossip stage has {} pending tasks; skipping status check (no nodes will be marked down)\",pending", "lineLoc": 930, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"FatClient {} has been silent for {}ms, removing from gossip\",endpoint,fatClientTimeout", "lineLoc": 951, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"time is expiring for endpoint : {} ({})\",endpoint,expireTime", "lineLoc": 965, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"{} elapsed, {} gossip quarantine over\",QUARANTINE_DELAY,entry.getKey()", "lineLoc": 979, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"local heartbeat version {} greater than {} for {}\",localHbVersion,version,forEndpoint", "lineLoc": 1065, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Adding state {}: {}\",key,value.value", "lineLoc": 1080, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"Clearing interval times for {} due to generation change\",endpoint", "lineLoc": 1129, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Sending ECHO_REQ to {}\",addr", "lineLoc": 1156, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"marking as alive {}\",addr", "lineLoc": 1173, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"removing expire time for endpoint : {}\",addr", "lineLoc": 1179, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"InetAddress {} is now UP\",addr", "lineLoc": 1180, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Notified {}\",subscribers", "lineLoc": 1184, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"marking as down {}\",addr", "lineLoc": 1194, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"InetAddress {} is now DOWN\",addr", "lineLoc": 1198, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Notified {}\",subscribers", "lineLoc": 1202, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Node {} has restarted, now UP\",ep", "lineLoc": 1220, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Node {} is now part of the cluster\",ep", "lineLoc": 1222, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Adding endpoint state for {}\",ep", "lineLoc": 1225, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"Not marking {} alive due to dead state\",ep", "lineLoc": 1238, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Ignoring gossip for {} because it is quarantined\",ep", "lineLoc": 1310, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"{} local generation {}, remote generation {}\",ep,localGeneration,remoteGeneration", "lineLoc": 1327, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Updating heartbeat state generation to {} from {} for {}\",remoteGeneration,localGeneration,ep", "lineLoc": 1338, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Ignoring remote version {} <= {} for {}\",remoteMaxVersion,localMaxVersion,ep", "lineLoc": 1353, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Ignoring remote generation {} < {}\",remoteGeneration,localGeneration", "lineLoc": 1361, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Updating heartbeat state version to {} from {} for {} ...\",localState.getHeartBeatState().getHeartBeatVersion(),oldVersion,addr", "lineLoc": 1380, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Updating {} state version to {} for {}\",entry.getKey().toString(),entry.getValue().version,addr", "lineLoc": 1412, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"requestAll for {}\",gDigest.getEndpoint()", "lineLoc": 1445, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"gossip started with generation {}\",localState.getHeartBeatState().getGeneration()", "lineLoc": 1549, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Sending shadow round GOSSIP DIGEST SYN to known peers {}\",peers", "lineLoc": 1619, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Triggering reload of seed node list\"", "lineLoc": 1666, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Error while getting seed node list: {}\",e.getLocalizedMessage()", "lineLoc": 1685, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"New seed node list is empty. Not updating seed list.\"", "lineLoc": 1691, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"New seed node list matches the existing list.\"", "lineLoc": 1697, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"New seed node list after reload {}\",seeds", "lineLoc": 1705, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"Attempt to add self as saved endpoint\"", "lineLoc": 1746, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"not replacing a previous epState for {}, but reusing it: {}\",ep,epState", "lineLoc": 1754, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "trace", "msg": "\"Adding saved endpoint {} {}\",ep,epState.getHeartBeatState().getGeneration()", "lineLoc": 1766, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Announcing shutdown\"", "lineLoc": 1813, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"No local state, state is in silent shutdown, or node hasn't joined, not announcing shutdown\"", "lineLoc": 1822, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Received an ack from {}, who isn't a seed. Ensure your seed list includes a live node. Exiting shadow round\",respondent", "lineLoc": 1839, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"Received a regular ack from {}, can now exit shadow round\",respondent", "lineLoc": 1841, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"All seeds are in a shadow round, clearing this node to exit its own\"", "lineLoc": 1857, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"adding expire time for endpoint : {} ({})\",endpoint,expireTime", "lineLoc": 1907, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Waiting for gossip to settle...\"", "lineLoc": 1963, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"Gossip looks settled.\"", "lineLoc": 1975, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Gossip not settled after {} polls.\",totalPolls", "lineLoc": 1980, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "warn", "msg": "\"Gossip not settled but startup forced by cassandra.skip_wait_for_gossip_to_settle. Gossip total polls: {}\",totalPolls", "lineLoc": 1986, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"Gossip settled after {} extra polls; proceeding\",totalPollsSUBGOSSIP_SETTLE_POLL_SUCCESSES_REQUIRED", "lineLoc": 1992, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "info", "msg": "\"No gossip backlog; proceeding\"", "lineLoc": 1994, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/Gossiper.java"}, {"severity": "debug", "msg": "\"Ignoring shutdown message from {} because gossip is disabled\",message.from()", "lineLoc": 36, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/GossipShutdownVerbHandler.java"}, {"severity": "trace", "msg": "\"Reading token of {}\",FBUtilities.prettyPrintMemory(size)", "lineLoc": 58, "fileLoc": "cassandra/src/java/org/apache/cassandra/gms/TokenSerializer.java"}, {"severity": "warn", "msg": "\"Some hosts failed: {}\",loader.getFailedHosts()", "lineLoc": 280, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlBulkRecordWriter.java"}, {"severity": "trace", "msg": "\"partitioner is {}\",partitioner", "lineLoc": 127, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlInputFormat.java"}, {"severity": "trace", "msg": "\"adding {}\",split", "lineLoc": 325, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlInputFormat.java"}, {"severity": "trace", "msg": "\"cqlQuery {}\",cqlQuery", "lineLoc": 161, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlRecordReader.java"}, {"severity": "trace", "msg": "\"created {}\",rowIterator", "lineLoc": 164, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlRecordReader.java"}, {"severity": "trace", "msg": "\"Finished scanning {} rows (estimate was: {})\",rowIterator.totalRead,totalRowCount", "lineLoc": 199, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlRecordReader.java"}, {"severity": "warn", "msg": "\"Error closing connection\",t", "lineLoc": 233, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/CqlRecordWriter.java"}, {"severity": "warn", "msg": "\"Invalid replica host name: {}, skipping it\",replica", "lineLoc": 71, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "trace", "msg": "\"Created instance with the following replicas: {}\",Arrays.asList(replicas)", "lineLoc": 75, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "trace", "msg": "\"Initialized with replica hosts: {}\",replicaHosts", "lineLoc": 90, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "trace", "msg": "\"Using the following hosts order for the new query plan: {} | {}\",local,remote", "lineLoc": 131, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "trace", "msg": "\"Added a new host {}\",host", "lineLoc": 142, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "trace", "msg": "\"The host {} is now up\",host", "lineLoc": 152, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "trace", "msg": "\"The host {} is now down\",host", "lineLoc": 161, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "trace", "msg": "\"Removed the host {}\",host", "lineLoc": 171, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "warn", "msg": "\"Could not retrieve local network interfaces.\",e", "lineLoc": 204, "fileLoc": "cassandra/src/java/org/apache/cassandra/hadoop/cql3/LimitedLocalNodeFirstLocalBalancingPolicy.java"}, {"severity": "error", "msg": "\"Unable to sync directory {}\",hintsDirectory.getAbsolutePath(),e", "lineLoc": 160, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsCatalog.java"}, {"severity": "error", "msg": "\"Unable to open directory {}\",hintsDirectory.getAbsolutePath()", "lineLoc": 166, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsCatalog.java"}, {"severity": "warn", "msg": "\"failed to create encyption context for hints file. ignoring encryption for hints.\",ioe", "lineLoc": 174, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDescriptor.java"}, {"severity": "error", "msg": "\"Failed to deserialize hints descriptor {}\",path.toString(),e", "lineLoc": 243, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDescriptor.java"}, {"severity": "warn", "msg": "\"Hint dispatch was interrupted\",e", "lineLoc": 231, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatcher.java"}, {"severity": "info", "msg": "\"Transferring all hints to {}: {}\",address,hostId", "lineLoc": 158, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "warn", "msg": "\"Failed to transfer all hints to {}: {}; will retry in {} seconds\",address,hostId,10", "lineLoc": 162, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "info", "msg": "\"Transferring all hints to {}: {}\",address,hostId", "lineLoc": 174, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "error", "msg": "\"Failed to transfer all hints to {}: {}\",address,hostId", "lineLoc": 177, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "error", "msg": "String.format(\"Failed to dispatch hints file %s: file is corrupted\",descriptor.fileName()),e", "lineLoc": 243, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "trace", "msg": "\"Dispatching hints file {}\",descriptor.fileName()", "lineLoc": 256, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "info", "msg": "\"Finished hinted handoff of file {} to endpoint {}: {}\",descriptor.fileName(),address,hostId", "lineLoc": 282, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "info", "msg": "\"Finished hinted handoff of file {} to endpoint {}: {}, partially\",descriptor.fileName(),address,hostId", "lineLoc": 289, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "info", "msg": "\"Finished converting hints file {}\",descriptor.fileName()", "lineLoc": 305, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsDispatchExecutor.java"}, {"severity": "warn", "msg": "\"Unexpected EOF replaying hints ({}), likely due to unflushed hint file on shutdown; continuing\",descriptor.fileName(),e", "lineLoc": 195, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsReader.java"}, {"severity": "warn", "msg": "\"Failed to read a hint for {}: {} - table with id {} is unknown in file {}\",StorageService.instance.getEndpointForHostId(descriptor.hostId),descriptor.hostId,e.id,descriptor.fileName()", "lineLoc": 236, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsReader.java"}, {"severity": "warn", "msg": "\"Unexpected EOF replaying hints ({}), likely due to unflushed hint file on shutdown; continuing\",descriptor.fileName(),e", "lineLoc": 293, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsReader.java"}, {"severity": "info", "msg": "\"Paused hints dispatch\"", "lineLoc": 220, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsService.java"}, {"severity": "info", "msg": "\"Resumed hints dispatch\"", "lineLoc": 228, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsService.java"}, {"severity": "info", "msg": "\"Deleted hint file {}\",descriptor.fileName()", "lineLoc": 133, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsStore.java"}, {"severity": "error", "msg": "\"Failed to delete hint file {}\",descriptor.fileName()", "lineLoc": 135, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsStore.java"}, {"severity": "error", "msg": "\"Unable to flush hint buffer: {}\",e.getLocalizedMessage(),e", "lineLoc": 167, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintsWriteExecutor.java"}, {"severity": "trace", "msg": "\"Failed to decode and apply a hint for {}: {} - table with id {} is unknown\",address,hostId,message.payload.unknownTableID", "lineLoc": 60, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintVerbHandler.java"}, {"severity": "warn", "msg": "\"Failed to validate a hint for {}: {} - skipped\",address,hostId", "lineLoc": 75, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintVerbHandler.java"}, {"severity": "debug", "msg": "\"Failed to apply hint\",e", "lineLoc": 97, "fileLoc": "cassandra/src/java/org/apache/cassandra/hints/HintVerbHandler.java"}, {"severity": "info", "msg": "\"No defined indexes with the supplied names: {}\",Joiner.on(,).join(indexNames)", "lineLoc": 349, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "info", "msg": "\"Submitting index build of {} for data in {}\",indexes.stream().map(iARROWi.getIndexMetadata().name).collect(Collectors.joining(\",\")),sstables.stream().map(SSTableReaderCOLCOLtoString).collect(Collectors.joining(\",\"))", "lineLoc": 454, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "info", "msg": "\"Index build of {} completed\",getIndexNames(groupedIndexes)", "lineLoc": 486, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "info", "msg": "\"Index flush of {} failed\",indexNames", "lineLoc": 523, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "info", "msg": "\"Index flush of {} completed\",indexNames", "lineLoc": 529, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "warn", "msg": "\"Index build of {} failed. Please run full index rebuild to fix it.\",getIndexNames(indexes),indexBuildFailure", "lineLoc": 665, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "warn", "msg": "\"Index build of {} failed. Please run full index rebuild to fix it.\",getIndexNames(indexes)", "lineLoc": 667, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "info", "msg": "\"Executing pre-join{} tasks for: {}\",hadBootstrapQUES\" post-bootstrap\":\"\",this.baseCfs", "lineLoc": 770, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "trace", "msg": "\"Indexing partition {}\",baseCfs.metadata().partitionKeyType.getString(key.getKey())", "lineLoc": 835, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "trace", "msg": "\"Calculated page size {} for indexing {}.{} ({}/{}/{}/{})\",pageSize,baseCfs.metadata.keyspace,baseCfs.metadata.name,meanPartitionSize,meanCellsPerPartition,meanRowsPerPartition,meanRowSize", "lineLoc": 943, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "trace", "msg": "\"Command contains a custom index expression, using target index {}\",customExpression.getTargetIndex().name", "lineLoc": 1026, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "trace", "msg": "\"No applicable indexes found\"", "lineLoc": 1040, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "trace", "msg": "\"Registered index {}\",name", "lineLoc": 1091, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "trace", "msg": "removedEQEQnullQUES\"Index {} was not registered\":\"Removed index {} from registry\",name", "lineLoc": 1102, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "error", "msg": "\"failed to flush indexes: {} because flush task is missing.\",indexers", "lineLoc": 1456, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/SecondaryIndexManager.java"}, {"severity": "trace", "msg": "\"Removed index entry for stale value {}\",indexKey", "lineLoc": 514, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndex.java"}, {"severity": "trace", "msg": "\"Inserted entry into index for value {}\",valueKey", "lineLoc": 532, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndex.java"}, {"severity": "trace", "msg": "\"Removed index entry for value {}\",indexKey", "lineLoc": 578, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndex.java"}, {"severity": "info", "msg": "\"No SSTable data for {}.{} to build index {} from, marking empty index as built\",baseCfs.metadata.keyspace,baseCfs.metadata.name,metadata.name", "lineLoc": 699, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndex.java"}, {"severity": "info", "msg": "\"Submitting index build of {} for data in {}\",metadata.name,getSSTableNames(sstables)", "lineLoc": 706, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndex.java"}, {"severity": "info", "msg": "\"Index build of {} complete\",metadata.name", "lineLoc": 718, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/internal/CassandraIndex.java"}, {"severity": "info", "msg": "\"Search Concurrency Factor is set to {} for {}\",concurrencyFactor,currentThread", "lineLoc": 53, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/TermIterator.java"}, {"severity": "debug", "msg": "String.format(\"Failed search an index %s, skipping.\",index.getPath()),e1", "lineLoc": 145, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/TermIterator.java"}, {"severity": "error", "msg": "String.format(\"Failed to release index %s\",index.getPath()),e", "lineLoc": 217, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/TermIterator.java"}, {"severity": "error", "msg": "\"Failed to deserialize value with \" + validator,e", "lineLoc": 96, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/NonTokenizingAnalyzer.java"}, {"severity": "info", "msg": "\"An unhandled exception to occurred while processing \" + \"pipeline [{}]\",task.getName(),e", "lineLoc": 48, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/FilterPipelineExecutor.java"}, {"severity": "error", "msg": "\"Failed to get stemmer constructor\",e", "lineLoc": 56, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StemmerFactory.java"}, {"severity": "debug", "msg": "\"Failed to create new SnowballStemmer instance \" + \"for language [{}]\",locale.getLanguage(),e", "lineLoc": 100, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StemmerFactory.java"}, {"severity": "error", "msg": "\"Failed to populate Stop Words Cache for language [{}]\",locale.getLanguage(),e", "lineLoc": 69, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StopWordFactory.java"}, {"severity": "error", "msg": "\"Failed to retrieve Stop Terms resource for language [{}]\",language,e", "lineLoc": 92, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/analyzer/filter/StopWordFactory.java"}, {"severity": "info", "msg": "\"SSTableIndex.open(column: {}, minTerm: {}, maxTerm: {}, minKey: {}, maxKey: {}, sstable: {})\",columnIndex.getColumnName(),columnIndex.getValidator().getString(index.minTerm()),columnIndex.getValidator().getString(index.maxTerm()),keyValidator.getString(index.minKey()),keyValidator.getString(index.maxKey()),index.getSSTable()", "lineLoc": 161, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/conf/DataTracker.java"}, {"severity": "error", "msg": "\"Can't open index file at \" + indexFile.getAbsolutePath() + \", skipping.\",t", "lineLoc": 179, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/conf/DataTracker.java"}, {"severity": "error", "msg": "\"Failed to create new instance of analyzer with class [{}]\",analyzerClass.getName(),e", "lineLoc": 90, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/conf/IndexMode.java"}, {"severity": "error", "msg": "\"failed to parse {} option, defaulting to 'false'.\",INDEX_IS_LITERAL_OPTION", "lineLoc": 186, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/conf/IndexMode.java"}, {"severity": "error", "msg": "\"Rejecting value (value size {}, maximum size {}).\",FBUtilities.prettyPrintMemory(term.remaining()),FBUtilities.prettyPrintMemory(Short.MAX_VALUE)", "lineLoc": 170, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/OnDiskIndexBuilder.java"}, {"severity": "info", "msg": "\"Rejecting value (size {}, maximum {}) for column {} (analyzed {}) at {} SSTable.\",FBUtilities.prettyPrintMemory(term.remaining()),FBUtilities.prettyPrintMemory(OnDiskIndexBuilder.MAX_TERM_SIZE),columnIndex.getColumnName(),columnIndex.getMode().isAnalyzed,descriptor", "lineLoc": 212, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java"}, {"severity": "info", "msg": "\"({}) Failed to add {} to index for key: {}, value size was {}, validator is {}.\",outputFile,columnIndex.getColumnName(),keyValidator.getString(key.getKey()),FBUtilities.prettyPrintMemory(size),columnIndex.getValidator()", "lineLoc": 225, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java"}, {"severity": "error", "msg": "\"Failed to build index segment {}\",segmentFile,e", "lineLoc": 263, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java"}, {"severity": "info", "msg": "\"Flushed index segment {}, took {} ms.\",segmentFile,TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstart)", "lineLoc": 269, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java"}, {"severity": "info", "msg": "\"Scheduling index flush to {}\",outputFile", "lineLoc": 276, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java"}, {"severity": "error", "msg": "\"Failed to flush index {}.\",outputFile,e", "lineLoc": 322, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java"}, {"severity": "info", "msg": "\"Index flush to {} took {} ms.\",outputFile,TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstart1)", "lineLoc": 327, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/disk/PerSSTableIndexWriter.java"}, {"severity": "error", "msg": "\"Can't add column {} to index for key: {}, value size {}, validator: {}.\",index.columnIndex.getColumnName(),index.columnIndex.keyValidator().getString(key.getKey()),FBUtilities.prettyPrintMemory(size),validator", "lineLoc": 56, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/memory/IndexMemtable.java"}, {"severity": "info", "msg": "\"Can't add term of column {} to index for key: {}, term size {}, max allowed size {}, use analyzed = true (if not yet set) for that column.\",columnIndex.getColumnName(),keyValidator.getString(key.getKey()),FBUtilities.prettyPrintMemory(term.remaining()),FBUtilities.prettyPrintMemory(OnDiskIndexBuilder.MAX_TERM_SIZE)", "lineLoc": 86, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/memory/TrieMemIndex.java"}, {"severity": "error", "msg": "\"Can't cast value for {} to size accepted by {}, value size is {}.\",index.getColumnName(),validator,FBUtilities.prettyPrintMemory(size)", "lineLoc": 212, "fileLoc": "cassandra/src/java/org/apache/cassandra/index/sasi/plan/Expression.java"}, {"severity": "warn", "msg": "\"'{}' parameter is ignored when '{}' is '{}'\",LZ4_HIGH_COMPRESSION_LEVEL,LZ4_COMPRESSOR_TYPE,LZ4_FAST_COMPRESSOR", "lineLoc": 65, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/compress/LZ4Compressor.java"}, {"severity": "warn", "msg": "\"Cannot initialize native Snappy library. Compression on new sstables will be disabled.\"", "lineLoc": 41, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/compress/SnappyCompressor.java"}, {"severity": "trace", "msg": "\"Creating Zstd Compressor with compression level={}\",compressionLevel", "lineLoc": 81, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/compress/ZstdCompressor.java"}, {"severity": "warn", "msg": "\"min_index_interval of {} is too low for {} expected keys of avg size {}; using interval of {} instead\",minIndexInterval,expectedKeys,defaultExpectedKeySize,effectiveMinInterval", "lineLoc": 115, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryBuilder.java"}, {"severity": "info", "msg": "\"Initializing index summary manager with a memory pool size of {} MB and a resize interval of {} minutes\",indexSummarySizeInMB,interval", "lineLoc": 87, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryManager.java"}, {"severity": "error", "msg": "\"Got exception during index summary redistribution\",e", "lineLoc": 243, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryManager.java"}, {"severity": "info", "msg": "\"Redistributing index summaries\"", "lineLoc": 83, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"Beginning redistribution of index summaries for {} sstables with memory pool size {} MB; current spaced used is {} MB\",redistribute.size(),memoryPoolBytesSLASH1024SLASH1024,totalSLASH1024.0SLASH1024.0", "lineLoc": 94, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"Total reads/sec across all sstables in index summary resize process: {}\",totalReadsPerSec", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"Index summaries for compacting SSTables are using {} MB of space\",(memoryPoolBytesSUBremainingBytes)SLASH1024.0SLASH1024.0", "lineLoc": 119, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"Completed resizing of index summaries; current approximate memory used: {}\",FBUtilities.prettyPrintMemory(total)", "lineLoc": 133, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"min_index_interval changed from {} to {}, so the current sampling level for {} is effectively now {} (was {})\",sstable.getMinIndexInterval(),minIndexInterval,sstable,effectiveSamplingLevel,currentSamplingLevel", "lineLoc": 175, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"{} has {} reads/sec; ideal space for index summary: {} ({} entries); considering moving \" + \"from level {} ({} entries, {}) \" + \"to level {} ({} entries, {})\",sstable.getFilename(),readsPerSec,FBUtilities.prettyPrintMemory(idealSpace),targetNumEntries,currentSamplingLevel,currentNumEntries,FBUtilities.prettyPrintMemory((long)(currentNumEntriesSTARavgEntrySize)),newSamplingLevel,numEntriesAtNewSamplingLevel,FBUtilities.prettyPrintMemory((long)(numEntriesAtNewSamplingLevelSTARavgEntrySize))", "lineLoc": 186, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"Re-sampling index summary for {} from {}/{} to {}/{} of the original number of entries\",sstable,sstable.getIndexSummarySamplingLevel(),Downsampling.BASE_SAMPLING_LEVEL,entry.newSamplingLevel,Downsampling.BASE_SAMPLING_LEVEL", "lineLoc": 255, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "trace", "msg": "\"Using leftover space to keep {} at the current sampling level ({})\",entry.sstable,entry.sstable.getIndexSummarySamplingLevel()", "lineLoc": 291, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/IndexSummaryRedistribution.java"}, {"severity": "warn", "msg": "\"Failed to delete snapshot [{}]. Will retry after further sstable deletions. Folder will be deleted on JVM shutdown or next node restart on crash.\",path", "lineLoc": 43, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/SnapshotDeletingTask.java"}, {"severity": "info", "msg": "\"Successfully deleted snapshot {}.\",path", "lineLoc": 58, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/SnapshotDeletingTask.java"}, {"severity": "debug", "msg": "\"Deleting sstable: {}\",desc", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/SSTable.java"}, {"severity": "error", "msg": "\"Missing component: {}\",descriptor.filenameFor(component)", "lineLoc": 316, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/SSTable.java"}, {"severity": "warn", "msg": "\"Reading cardinality from Statistics.db failed for {}\",sstable.getFilename()", "lineLoc": 267, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "warn", "msg": "\"Reading cardinality from Statistics.db failed.\",e", "lineLoc": 279, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "warn", "msg": "\"Cardinality merge failed.\",e", "lineLoc": 285, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Got a null cardinality estimator in: {}\",sstable.getFilename()", "lineLoc": 317, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "warn", "msg": "\"Could not read up compaction metadata for {}\",sstable,e", "lineLoc": 321, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Estimated compaction gain: {}/{}={}\",totalKeyCountAfter,totalKeyCountBefore,((double)totalKeyCountAfter)SLASHtotalKeyCountBefore", "lineLoc": 333, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "warn", "msg": "\"Could not merge cardinalities\",e", "lineLoc": 346, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "error", "msg": "\"Cannot open {}; partitioner {} does not match system partitioner {}.  Note that the default partitioner starting with Cassandra 1.2 is Murmur3Partitioner, so you will need to edit that to match your old partitioner if upgrading.\",descriptor,validationMetadata.partitioner,partitionerName", "lineLoc": 427, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "debug", "msg": "\"Opening {} ({})\",descriptor,FBUtilities.prettyPrintMemory(fileLength)", "lineLoc": 434, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "error", "msg": "\"Cannot open {}; partitioner {} does not match system partitioner {}.  Note that the default partitioner starting with Cassandra 1.2 is Murmur3Partitioner, so you will need to edit that to match your old partitioner if upgrading.\",descriptor,validationMetadata.partitioner,partitionerName", "lineLoc": 527, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "debug", "msg": "\"Opening {} ({})\",descriptor,FBUtilities.prettyPrintMemory(fileLength)", "lineLoc": 534, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"INDEX LOAD TIME for {}: {} ms.\",descriptor,TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstart)", "lineLoc": 557, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"key cache contains {}/{} keys\",sstable.getKeyCache().size(),sstable.getKeyCache().getCapacity()", "lineLoc": 564, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "error", "msg": "\"Corrupt sstable {}; skipping table\",entry,ex", "lineLoc": 595, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "error", "msg": "\"Cannot read sstable {}; file system error, skipping table\",entry,ex", "lineLoc": 601, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Cannot deserialize SSTable Summary File {}: {}\",summariesFile.getPath(),e.getMessage()", "lineLoc": 928, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Cannot save SSTable Summary: \",e", "lineLoc": 974, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Cannot save SSTable bloomfilter: \",e", "lineLoc": 997, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Adding cache entry for {} -> {}\",cacheKey,info", "lineLoc": 1548, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Marking {} compacted\",getFilename()", "lineLoc": 1726, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Marking {} as a suspect for blacklisting.\",getFilename()", "lineLoc": 1746, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Running instance tidier for {} with setup {}\",descriptor,setup", "lineLoc": 2215, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Async instance tidier for {}, before barrier\",descriptor", "lineLoc": 2236, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Async instance tidier for {}, after barrier\",descriptor", "lineLoc": 2242, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"Async instance tidier for {}, completed\",descriptor", "lineLoc": 2257, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "error", "msg": "message", "lineLoc": 2471, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "error", "msg": "msg", "lineLoc": 2477, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "info", "msg": "\"Renaming new SSTable {} to {}\",oldDescriptor,newDescriptor", "lineLoc": 2481, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "error", "msg": "\"Aborting import of sstables. {} was corrupt\",newDescriptor", "lineLoc": 2491, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/SSTableReader.java"}, {"severity": "trace", "msg": "\"wrote {} at {}\",decoratedKey,dataEnd", "lineLoc": 137, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableWriter.java"}, {"severity": "error", "msg": "\"Key size {} exceeds maximum of {}, skipping row\",key.getKey().remaining(),FBUtilities.MAX_UNSIGNED_SHORT", "lineLoc": 156, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableWriter.java"}, {"severity": "warn", "msg": "\"Writing large partition {}/{}:{} ({}) to sstable {}\",metadata.keyspace,metadata.name,keyString,FBUtilities.prettyPrintMemory(rowSize),getFilename()", "lineLoc": 209, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableWriter.java"}, {"severity": "trace", "msg": "\"wrote index entry: {} at {}\",indexEntry,indexStart", "lineLoc": 471, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableWriter.java"}, {"severity": "info", "msg": "\"Writing component {} to {} length {}\",type,componentWriters.get(type).getPath(),prettyPrintMemory(size)", "lineLoc": 203, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableZeroCopyWriter.java"}, {"severity": "info", "msg": "\"Block Writing component to {} length {}\",writer.getPath(),prettyPrintMemory(size)", "lineLoc": 213, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/format/big/BigTableZeroCopyWriter.java"}, {"severity": "trace", "msg": "\"Load metadata for {}\",descriptor", "lineLoc": 116, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataSerializer.java"}, {"severity": "trace", "msg": "\"No sstable stats for {}\",descriptor", "lineLoc": 120, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataSerializer.java"}, {"severity": "trace", "msg": "\"Mutating {} to level {}\",descriptor.filenameFor(Component.STATS),newLevel", "lineLoc": 225, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataSerializer.java"}, {"severity": "trace", "msg": "\"Mutating {} to repairedAt time {} and pendingRepair {}\",descriptor.filenameFor(Component.STATS),newRepairedAt,newPendingRepair", "lineLoc": 236, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/sstable/metadata/MetadataSerializer.java"}, {"severity": "error", "msg": "\"Failed to close mapped regions\",err", "lineLoc": 423, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileHandle.java"}, {"severity": "error", "msg": "\"FATAL: Cannot initialize optimized memory deallocator. Some data, both in-memory and on-disk, may live longer due to garbage collection.\"", "lineLoc": 93, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "trace", "msg": "\"Could not move file \" + from + \" to \" + to,e", "lineLoc": 225, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "trace", "msg": "\"Renaming {} to {}\",from.getPath(),to.getPath()", "lineLoc": 238, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "trace", "msg": "\"Could not do an atomic move\",e", "lineLoc": 265, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "warn", "msg": "\"Failed closing {}\",c,e", "lineLoc": 291, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "warn", "msg": "\"Failed closing {}\",c,e", "lineLoc": 304, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "warn", "msg": "\"Failed closing stream {}\",c,ex", "lineLoc": 327, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "warn", "msg": "\"Failed closing {}\",c,ex", "lineLoc": 344, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "trace", "msg": "\"Scheduling deferred deletion of file: {}\",dir", "lineLoc": 568, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "error", "msg": "\"Error while getting {} folder size. {}\",folder,e.getMessage()", "lineLoc": 618, "fileLoc": "cassandra/src/java/org/apache/cassandra/io/util/FileUtils.java"}, {"severity": "trace", "msg": "\"clearing cached endpoints\"", "lineLoc": 89, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/AbstractReplicationStrategy.java"}, {"severity": "warn", "msg": "\"Ignoring {}\",e.getMessage()", "lineLoc": 364, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/AbstractReplicationStrategy.java"}, {"severity": "info", "msg": "\"EC2Snitch using publicIP as identifier: {}\",localPublicAddress", "lineLoc": 51, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/Ec2MultiRegionSnitch.java"}, {"severity": "info", "msg": "\"broadcast_rpc_address unset, broadcasting public IP as rpc_address: {}\",localPublicAddress", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/Ec2MultiRegionSnitch.java"}, {"severity": "info", "msg": "\"EC2Snitch using region: {}, zone: {}.\",ec2region,ec2zone", "lineLoc": 96, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/Ec2Snitch.java"}, {"severity": "error", "msg": "\"This ec2-enabled snitch appears to be using the {} naming scheme for regions, \" + \"but existing nodes in cluster are using the opposite: region(s) = {}, availability zone(s) = {}. \" + \"Please check the {} property in the {} configuration file for more details.\",usingLegacyNamingQUES\"legacy\":\"standard\",datacenters,racks,SNITCH_PROP_NAMING_SCHEME,SnitchProperties.RACKDC_PROPERTY_FILENAME", "lineLoc": 201, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/Ec2Snitch.java"}, {"severity": "info", "msg": "\"GCESnitch using region: {}, zone: {}.\",gceRegion,gceZone", "lineLoc": 67, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/GoogleCloudSnitch.java"}, {"severity": "info", "msg": "\"Loaded {} for compatibility\",PropertyFileSnitch.SNITCH_PROPERTIES_FILENAME", "lineLoc": 63, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/GossipingPropertyFileSnitch.java"}, {"severity": "info", "msg": "\"Unable to load {}; compatibility mode disabled\",PropertyFileSnitch.SNITCH_PROPERTIES_FILENAME", "lineLoc": 67, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/GossipingPropertyFileSnitch.java"}, {"severity": "info", "msg": "\"Configured datacenter replicas are {}\",FBUtilities.toString(datacenters)", "lineLoc": 84, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/NetworkTopologyStrategy.java"}, {"severity": "error", "msg": "\"{} found, but does not look like a plain file. Will not watch it for changes\",SNITCH_PROPERTIES_FILENAME", "lineLoc": 85, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java"}, {"severity": "trace", "msg": "\"Could not find end point information for {}, will use default\",endpoint", "lineLoc": 108, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java"}, {"severity": "trace", "msg": "\"Loaded network topology from property file: {}\",StringUtils.removeEnd(sb.toString(),\", \")", "lineLoc": 208, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java"}, {"severity": "error", "msg": "\"Cannot update data center or rack from {} to {} for live host {}, property file NOT RELOADED\",origValue,updateValue,host", "lineLoc": 250, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java"}, {"severity": "error", "msg": "\"Error in getting the IP address resolved: \",e", "lineLoc": 62, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/ReconnectableSnitchHelper.java"}, {"severity": "debug", "msg": "\"InternodeAuthenticator said don't reconnect to {} on {}\",publicAddress,localAddress", "lineLoc": 71, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/ReconnectableSnitchHelper.java"}, {"severity": "debug", "msg": "\"Initiated reconnect to an Internal IP {} for the {}\",localAddress,publicAddress", "lineLoc": 78, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/ReconnectableSnitchHelper.java"}, {"severity": "trace", "msg": "String.format(\"Local replicas %s are insufficient to satisfy LOCAL_QUORUM requirement of %d live replicas and %d full replicas in '%s'\",allLive.filter(InOurDcTester.replicas()),blockFor,blockForFullReplicas,DatabaseDescriptor.getLocalDataCenter())", "lineLoc": 136, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/ReplicaPlans.java"}, {"severity": "trace", "msg": "\"Live nodes {} do not satisfy ConsistencyLevel ({} required)\",Iterables.toString(allLive),blockFor", "lineLoc": 169, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/ReplicaPlans.java"}, {"severity": "warn", "msg": "\"Token {} changing ownership from {} to {}\",token,prev,endpoint", "lineLoc": 210, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "warn", "msg": "\"Changing {}'s host ID from {} to {}\",endpoint,storedId,hostId", "lineLoc": 252, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "debug", "msg": "\"Replacing {} with {}\",newNode,oldNode", "lineLoc": 367, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "debug", "msg": "\"Node {} failed during replace.\",endpoint", "lineLoc": 468, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "info", "msg": "\"Updating topology for {}\",endpoint", "lineLoc": 490, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "info", "msg": "\"Updating topology for all endpoints that have changed\"", "lineLoc": 510, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "trace", "msg": "\"No bootstrapping, leaving or moving nodes -> empty pending ranges for {}\",keyspaceName", "lineLoc": 836, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "trace", "msg": "\"No bootstrapping, leaving or moving nodes -> empty pending ranges for {}\",keyspaceName", "lineLoc": 840, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "debug", "msg": "\"Starting pending range calculation for {}\",keyspaceName", "lineLoc": 860, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "debug", "msg": "\"Pending range calculation for {} completed (took: {}ms)\",keyspaceName,took", "lineLoc": 865, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "trace", "msg": "\"Calculated pending ranges for {}:\\n{}\",keyspaceName,(pendingRanges.isEmpty()QUES\"<empty>\":printPendingRanges())", "lineLoc": 867, "fileLoc": "cassandra/src/java/org/apache/cassandra/locator/TokenMetadata.java"}, {"severity": "trace", "msg": "\"Failure to offer sample\",e", "lineLoc": 94, "fileLoc": "cassandra/src/java/org/apache/cassandra/metrics/FrequencySampler.java"}, {"severity": "warn", "msg": "\"{} has {} dropped hints, because node is down past configured hint window.\",entry.getKey(),difference", "lineLoc": 72, "fileLoc": "cassandra/src/java/org/apache/cassandra/metrics/HintedHandoffMetrics.java"}, {"severity": "warn", "msg": "\"Invalid negative latency in hint delivery delay: {}\",delay", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/metrics/HintsServiceMetrics.java"}, {"severity": "info", "msg": "GT0)StatusLogger.log(", "lineLoc": 189, "fileLoc": "cassandra/src/java/org/apache/cassandra/metrics/MessagingMetrics.java"}, {"severity": "error", "msg": "\"Failed to invoke listener {} to {}\",listener,future,t", "lineLoc": 368, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/AsyncPromise.java"}, {"severity": "trace", "msg": "\"Writing {} bytes at position {} of {}\",toWrite,bytesTransferred,length", "lineLoc": 196, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/AsyncStreamingOutputPlus.java"}, {"severity": "trace", "msg": "\"Setting version {} for {}\",version,endpoint", "lineLoc": 45, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/EndpointMessagingVersions.java"}, {"severity": "trace", "msg": "\"Resetting version for {}\",endpoint", "lineLoc": 53, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/EndpointMessagingVersions.java"}, {"severity": "trace", "msg": "\"creating inbound netty SslContext: context={}, engine={}\",sslContext.getClass().getName(),sslHandler.engine().getClass().getName()", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "info", "msg": "\"Listening on {}\",initializer.settings", "lineLoc": 130, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "error", "msg": "\"Timeout handshaking with {} (on {})\",SocketFactory.addressId(initiate.from,(InetSocketAddress)ctx.channel().remoteAddress()),settings.bindAddress", "lineLoc": 215, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "info", "msg": "\"connection from peer {}, protocol = {}, cipher suite = {}\",ctx.channel().remoteAddress(),session.getProtocol(),session.getCipherSuite()", "lineLoc": 242, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "trace", "msg": "\"Received handshake initiation message from peer {}, message = {}\",ctx.channel().remoteAddress(),initiate", "lineLoc": 261, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "trace", "msg": "\"Connection version {} (min {}) from {}\",initiate.acceptVersions.max,initiate.acceptVersions.min,initiate.from", "lineLoc": 264, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "info", "msg": "\"peer {} only supports messaging versions higher ({}) than this node supports ({})\",ctx.channel().remoteAddress(),initiate.acceptVersions.min,current_version", "lineLoc": 283, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "info", "msg": "\"peer {} only supports messaging versions lower ({}) than this node supports ({})\",ctx.channel().remoteAddress(),initiate.acceptVersions.max,minimum_version", "lineLoc": 288, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "trace", "msg": "\"Connection version {} from {}\",version,ctx.channel().remoteAddress()", "lineLoc": 303, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "warn", "msg": "\"Received stream using protocol version {} (my version {}). Terminating connection\",version,settings.acceptStreaming.max", "lineLoc": 310, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "trace", "msg": "\"Received third handshake message from peer {}, message = {}\",ctx.channel().remoteAddress(),confirmOutboundPre40", "lineLoc": 345, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "error", "msg": "\"Failed to properly handshake with peer {}. Closing the channel.\",channel.remoteAddress(),cause", "lineLoc": 357, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "error", "msg": "\"Unexpected exception in {}.exceptionCaught\",this.getClass().getSimpleName(),t", "lineLoc": 364, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "info", "msg": "\"{} connection established, version = {}, framing = {}, encryption = {}\",handler.id(true),useMessagingVersion,initiate.framing,pipeline.get(\"ssl\")BANGEQnullQUESencryptionLogStatement(settings.encryption):\"disabled\"", "lineLoc": 450, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundConnectionInitiator.java"}, {"severity": "error", "msg": "\"{} unexpected exception caught while deserializing a message\",id(),t", "lineLoc": 335, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundMessageHandler.java"}, {"severity": "error", "msg": "\"Unexpected exception in {}.exceptionCaught\",this.getClass().getSimpleName(),t", "lineLoc": 644, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundMessageHandler.java"}, {"severity": "error", "msg": "\"{} invalid, unrecoverable CRC mismatch detected while reading messages - closing the connection\",id()", "lineLoc": 655, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundMessageHandler.java"}, {"severity": "error", "msg": "\"{} unexpected exception caught while processing inbound messages; terminating connection\",id(),cause", "lineLoc": 657, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundMessageHandler.java"}, {"severity": "error", "msg": "\"{} unexpected exception caught while deserializing a message\",id(),t", "lineLoc": 832, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundMessageHandler.java"}, {"severity": "error", "msg": "\"{} exception caught while reactivating a handler\",handler.id(),t", "lineLoc": 1158, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/InboundMessageHandler.java"}, {"severity": "trace", "msg": "\"{} sending {} to {}@{}\",FBUtilities.getBroadcastAddressAndPort(),message.verb(),message.id(),to", "lineLoc": 318, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/MessagingService.java"}, {"severity": "trace", "msg": "\"Message-to-self {} going over MessagingService\",message", "lineLoc": 321, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/MessagingService.java"}, {"severity": "info", "msg": "\"Waiting for messaging service to quiesce\"", "lineLoc": 500, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/MessagingService.java"}, {"severity": "warn", "msg": "\"{} dropping message of type {} due to error\",id(),message.verb(),t", "lineLoc": 477, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "info", "msg": "\"{} channel closed by provider\",id(),cause", "lineLoc": 1041, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "error", "msg": "\"{} channel in potentially inconsistent state after error; closing\",id(),cause", "lineLoc": 1043, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "error", "msg": "\"Unexpected exception in {}.exceptionCaught\",this.getClass().getSimpleName(),t", "lineLoc": 1129, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "info", "msg": "\"{} successfully connected, version = {}, framing = {}, encryption = {}\",id(true),success.messagingVersion,settings.framing,encryptionLogStatement(settings.encryption)", "lineLoc": 1135, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "trace", "msg": "\"{} incorrect legacy peer version predicted; reconnecting\",id()", "lineLoc": 1144, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "info", "msg": "\"{} updating connection settings\",id()", "lineLoc": 1272, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "info", "msg": "\"Problem closing channel {}\",closeIfIs,future.cause()", "lineLoc": 1348, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "error", "msg": "\"Failed to close connection cleanly:\",t", "lineLoc": 1451, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnection.java"}, {"severity": "trace", "msg": "\"creating outbound bootstrap to {}, requestVersion: {}\",settings,requestMessagingVersion", "lineLoc": 128, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java"}, {"severity": "trace", "msg": "\"creating outbound netty SslContext: context={}, engine={}\",sslContext.getClass().getName(),sslHandler.engine().getClass().getName()", "lineLoc": 207, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java"}, {"severity": "trace", "msg": "\"starting handshake with peer {}, msg = {}\",settings.connectTo,msg", "lineLoc": 232, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java"}, {"severity": "trace", "msg": "\"received second handshake message from peer {}, msg = {}\",settings.connectTo,msg", "lineLoc": 269, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java"}, {"severity": "info", "msg": "\"Failed to connect to peer {}\",settings.to,cause", "lineLoc": 371, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java"}, {"severity": "error", "msg": "\"Failed to handshake with peer {}\",settings.to,cause", "lineLoc": 373, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java"}, {"severity": "error", "msg": "\"Unexpected exception in {}.exceptionCaught\",this.getClass().getSimpleName(),t", "lineLoc": 378, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundConnectionInitiator.java"}, {"severity": "error", "msg": "\"Unexpected error when executing deferred lock-intending functions\",t", "lineLoc": 281, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/OutboundMessageQueue.java"}, {"severity": "info", "msg": "\"Initialized back-pressure with high ratio: {}, factor: {}, flow: {}, window size: {}.\",highRatio,factor,flow,windowSize", "lineLoc": 128, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/RateBasedBackPressure.java"}, {"severity": "trace", "msg": "\"Back-pressure state for {}: incoming rate {}, outgoing rate {}, ratio {}, rate limiting {}\",backPressure.getHost(),incomingRate,outgoingRate,actualRatio,limiter.getRate()", "lineLoc": 194, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/RateBasedBackPressure.java"}, {"severity": "trace", "msg": "\"Expired {} entries\",n", "lineLoc": 154, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/RequestCallbacks.java"}, {"severity": "trace", "msg": "msg,message.id(),message.from()", "lineLoc": 42, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/ResponseVerbHandler.java"}, {"severity": "debug", "msg": "\"using netty {} event loop for pool prefix {}\",name(),threadNamePrefix", "lineLoc": 153, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/SocketFactory.java"}, {"severity": "debug", "msg": "\"Creating SSL handler for {}:{}\",peer.getHostString(),peer.getPort()", "lineLoc": 222, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/SocketFactory.java"}, {"severity": "warn", "msg": "\"setting the block-for-peers timeout (in seconds) to {} might be a bit excessive, but using it nonetheless\",timeoutSecs", "lineLoc": 61, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/StartupClusterConnectivityChecker.java"}, {"severity": "info", "msg": "\"Blocking coordination until only a single peer is DOWN in the local datacenter, timeout={}s\",TimeUnit.NANOSECONDS.toSeconds(timeoutNanos)", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/StartupClusterConnectivityChecker.java"}, {"severity": "info", "msg": "\"Blocking coordination until only a single peer is DOWN in each datacenter, timeout={}s\",TimeUnit.NANOSECONDS.toSeconds(timeoutNanos)", "lineLoc": 116, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/StartupClusterConnectivityChecker.java"}, {"severity": "info", "msg": "\"Ensured sufficient healthy connections with {} after {} milliseconds\",numDown.keySet(),TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstartNanos)", "lineLoc": 166, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/StartupClusterConnectivityChecker.java"}, {"severity": "warn", "msg": "\"Timed out after {} milliseconds, was waiting for remaining peers to connect: {}\",TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstartNanos),numDown", "lineLoc": 171, "fileLoc": "cassandra/src/java/org/apache/cassandra/net/StartupClusterConnectivityChecker.java"}, {"severity": "info", "msg": "\"{} {}\",previewKind.logPrefix(desc.sessionId),message", "lineLoc": 110, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/LocalSyncTask.java"}, {"severity": "info", "msg": "\"{} {}\",previewKind.logPrefix(desc.sessionId),message", "lineLoc": 151, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/LocalSyncTask.java"}, {"severity": "info", "msg": "\"{} {} is fully synced\",session.previewKind.logPrefix(session.getId()),desc.columnFamily", "lineLoc": 141, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "warn", "msg": "\"{} {} sync failed\",session.previewKind.logPrefix(session.getId()),desc.columnFamily", "lineLoc": 155, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "debug", "msg": "\"diffs = {}\",diffHolder", "lineLoc": 284, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "debug", "msg": "\"{} is about to fetch {} from {}\",address,toFetch,fetchFrom", "lineLoc": 309, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "debug", "msg": "\"Node {} has nothing to stream\",address", "lineLoc": 326, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "info", "msg": "\"{} {}\",session.previewKind.logPrefix(desc.sessionId),message", "lineLoc": 346, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "info", "msg": "\"{} {}\",session.previewKind.logPrefix(desc.sessionId),message", "lineLoc": 366, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "info", "msg": "\"Validating {}\",address", "lineLoc": 374, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "info", "msg": "\"Validating {}\",nextAddress", "lineLoc": 387, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "info", "msg": "\"{} {}\",session.previewKind.logPrefix(desc.sessionId),message", "lineLoc": 408, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "info", "msg": "\"Validating {}\",address", "lineLoc": 431, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "info", "msg": "\"Validating {}\",nextAddress", "lineLoc": 444, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairJob.java"}, {"severity": "debug", "msg": "\"Preparing, {}\",prepareMessage", "lineLoc": 69, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "debug", "msg": "\"Snapshotting {}\",desc", "lineLoc": 94, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "debug", "msg": "\"Enqueuing response to snapshot request {} to {}\",desc.sessionId,message.from()", "lineLoc": 113, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "debug", "msg": "\"Validating {}\",validationRequest", "lineLoc": 119, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "error", "msg": "\"Table {}.{} was dropped during snapshot phase of repair\",desc.keyspace,desc.columnFamily", "lineLoc": 124, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "debug", "msg": "\"Syncing {}\",request", "lineLoc": 138, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "debug", "msg": "\"Syncing {}\",asymmetricSyncRequest", "lineLoc": 153, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "debug", "msg": "\"cleaning up repair\"", "lineLoc": 166, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "error", "msg": "\"Got error, removing parent repair session\"", "lineLoc": 213, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "error", "msg": "errorMessage", "lineLoc": 222, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairMessageVerbHandler.java"}, {"severity": "error", "msg": "\"Repair {} failed:\",parentSession,e", "lineLoc": 163, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "info", "msg": "message", "lineLoc": 171, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "error", "msg": "\"Repair {} failed:\",parentSession,e", "lineLoc": 220, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "error", "msg": "\"Repair {} failed:\",parentSession,e", "lineLoc": 234, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "error", "msg": "\"Repair {} failed:\",parentSession,t", "lineLoc": 266, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "debug", "msg": "\"Repair result: {}\",results", "lineLoc": 314, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "debug", "msg": "\"Starting preview repair for {}\",parentSession", "lineLoc": 400, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "info", "msg": "message", "lineLoc": 421, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "info", "msg": "message", "lineLoc": 427, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "error", "msg": "\"Error completing preview repair\",t", "lineLoc": 441, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "error", "msg": "\"Error completing preview repair\",t", "lineLoc": 450, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "debug", "msg": "\"Preview repair {} completed\",parentSession", "lineLoc": 457, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "info", "msg": "\"Starting RepairSession for {}\",commonRange", "lineLoc": 482, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "info", "msg": "message", "lineLoc": 525, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "error", "msg": "message,t", "lineLoc": 538, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "info", "msg": "message", "lineLoc": 621, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairRunnable.java"}, {"severity": "debug", "msg": "\"force flag set, removing dead endpoints\"", "lineLoc": 149, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "info", "msg": "\"Removing a dead node from Repair due to -force {}\",endpoint", "lineLoc": 155, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "info", "msg": "\"{} {}\",previewKind.logPrefix(getId()),message", "lineLoc": 226, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "debug", "msg": "\"{} Repair completed between {} and {} on {}\",previewKind.logPrefix(getId()),nodes.coordinator,nodes.peer,desc.columnFamily", "lineLoc": 248, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "info", "msg": "\"{} new session: will sync {} on range {} for {}.{}\",previewKind.logPrefix(getId()),repairedNodes(),commonRange,keyspace,Arrays.toString(cfnames)", "lineLoc": 281, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "info", "msg": "\"{} {}\",previewKind.logPrefix(getId()),messageEQString.format(\"No neighbors to repair with on range %s: session completed\",commonRange)", "lineLoc": 290, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "error", "msg": "\"{} {}\",previewKind.logPrefix(getId()),message", "lineLoc": 306, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "error", "msg": "\"{} Session completed with the following error\",previewKind.logPrefix(getId()),t", "lineLoc": 343, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "error", "msg": "\"{} session completed with the following error\",previewKind.logPrefix(getId()),exception", "lineLoc": 400, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/RepairSession.java"}, {"severity": "info", "msg": "\"[streaming task #{}] Performing streaming repair of {} ranges with {}\",desc.sessionId,ranges.size(),dst", "lineLoc": 75, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/StreamingRepairTask.java"}, {"severity": "info", "msg": "\"[repair #{}] streaming task succeed, returning response to {}\",desc.sessionId,initiator", "lineLoc": 105, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/StreamingRepairTask.java"}, {"severity": "info", "msg": "\"{} {}\",previewKind.logPrefix(desc.sessionId),message", "lineLoc": 69, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/SymmetricRemoteSyncTask.java"}, {"severity": "info", "msg": "String.format(format,\"are consistent\")", "lineLoc": 78, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/SyncTask.java"}, {"severity": "error", "msg": "\"Error executing query \" + fmtQry,t", "lineLoc": 348, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/SystemDistributedKeyspace.java"}, {"severity": "debug", "msg": "\"Validation of {} partitions (~{}) finished in {} msec, for {}\",partitionCount,FBUtilities.prettyPrintMemory(estimatedTotalBytes),duration,validator.desc", "lineLoc": 143, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/ValidationManager.java"}, {"severity": "debug", "msg": "\"Prepared AEService trees of size {} for {}\",trees.size(),desc", "lineLoc": 152, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/Validator.java"}, {"severity": "debug", "msg": "\"Validated {} partitions for {}.  Partition sizes are:\",validated,desc.sessionId", "lineLoc": 379, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/Validator.java"}, {"severity": "error", "msg": "\"Failed creating a merkle tree for {}, {} (see log for details)\",desc,initiator", "lineLoc": 393, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/Validator.java"}, {"severity": "info", "msg": "\"{} Sending completed merkle tree to {} for {}.{}\",previewKind.logPrefix(desc.sessionId),initiator,desc.keyspace,desc.columnFamily", "lineLoc": 404, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/Validator.java"}, {"severity": "info", "msg": "\"{} Local completed merkle tree for {} for {}.{}\",previewKind.logPrefix(desc.sessionId),initiator,desc.keyspace,desc.columnFamily", "lineLoc": 409, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/Validator.java"}, {"severity": "error", "msg": "\"Failed to move local merkle tree for {} off heap\",desc,e", "lineLoc": 444, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/Validator.java"}, {"severity": "trace", "msg": "\"adding incoming range {} from {}\",range,streamFromNode", "lineLoc": 65, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/asymmetric/IncomingRepairStreamTracker.java"}, {"severity": "trace", "msg": "\"Denormalizing range={} incoming={}\",range,incoming", "lineLoc": 50, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/asymmetric/RangeDenormalizer.java"}, {"severity": "trace", "msg": "\"denormalized {} to {}\",range,newInput", "lineLoc": 73, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/asymmetric/RangeDenormalizer.java"}, {"severity": "trace", "msg": "\"denormalized incoming to {}\",incoming", "lineLoc": 74, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/asymmetric/RangeDenormalizer.java"}, {"severity": "trace", "msg": "\"Setting coordinator state to {} for repair {}\",state,sessionID", "lineLoc": 96, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "trace", "msg": "\"Setting participant {} to state {} for repair {}\",participant,state,sessionID", "lineLoc": 108, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "trace", "msg": "\"Sending {} to {}\",message,destination", "lineLoc": 144, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Beginning prepare phase of incremental repair session {}\",sessionID", "lineLoc": 153, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"{} failed the prepare phase for incremental repair session {}\",participant,sessionID", "lineLoc": 166, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "trace", "msg": "\"Successful prepare response received from {} for repair session {}\",participant,sessionID", "lineLoc": 172, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "info", "msg": "\"Incremental repair session {} successfully prepared.\",sessionID", "lineLoc": 182, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Proposing finalization of repair session {}\",sessionID", "lineLoc": 200, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "trace", "msg": "\"Incremental repair {} has failed, ignoring finalize promise from {}\",sessionID,participant", "lineLoc": 213, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Finalization proposal of session {} rejected by {}. Aborting session\",sessionID,participant", "lineLoc": 217, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "trace", "msg": "\"Successful finalize promise received from {} for repair session {}\",participant,sessionID", "lineLoc": 223, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Finalization proposal for repair session {} accepted by all participants.\",sessionID", "lineLoc": 227, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Committing finalization of repair session {}\",sessionID", "lineLoc": 236, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "info", "msg": "\"Incremental repair session {} completed\",sessionID", "lineLoc": 243, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "info", "msg": "\"Incremental repair session {} failed\",sessionID", "lineLoc": 260, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "info", "msg": "\"Beginning coordination of incremental repair session {}\",sessionID", "lineLoc": 284, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Incremental repair {} prepare phase completed in {}\",sessionID,formatDuration(sessionStart,repairStart)", "lineLoc": 299, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Incremental repair {} validation/stream phase completed in {}\",sessionID,formatDuration(repairStart,finalizeStart)", "lineLoc": 322, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Incremental repair {} finalization phase completed in {}\",sessionID,formatDuration(finalizeStart,System.currentTimeMillis())", "lineLoc": 348, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Incremental repair {} phase completed in {}\",sessionID,formatDuration(sessionStart,System.currentTimeMillis())", "lineLoc": 353, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "debug", "msg": "\"Incremental repair {} phase failed in {}\",sessionID,formatDuration(sessionStart,System.currentTimeMillis())", "lineLoc": 375, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/CoordinatorSession.java"}, {"severity": "info", "msg": "\"Cancelling local repair session {}\",sessionID", "lineLoc": 185, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "warn", "msg": "\"Unable to load malformed repair session {}, ignoring\",row.has(\"parent_id\")QUESrow.getUUID(\"parent_id\"):null", "lineLoc": 218, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"Running LocalSessions.cleanup\"", "lineLoc": 251, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"node not initialized, aborting local session cleanup\"", "lineLoc": 254, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "warn", "msg": "\"Auto failing timed out repair session {}\",session", "lineLoc": 265, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Auto deleting repair session {}\",session", "lineLoc": 272, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "warn", "msg": "\"Skipping delete of LocalSession {} because it still contains sstables\",session.sessionID", "lineLoc": 277, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"sending {} to {}\",message,destination", "lineLoc": 496, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"Changing LocalSession state from {} -> {} for {}\",session.getState(),state,session.sessionID", "lineLoc": 508, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "info", "msg": "\"Failing local repair session {}\",sessionID", "lineLoc": 535, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Deleting local repair session {}\",sessionID", "lineLoc": 548, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"received {} from {}\",request,from", "lineLoc": 599, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "error", "msg": "\"Error retrieving ParentRepairSession for session {}, responding with failure\",sessionID", "lineLoc": 611, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "info", "msg": "\"Beginning local incremental repair session {}\",session", "lineLoc": 618, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "info", "msg": "\"Prepare phase for incremental repair session {} completed\",sessionID", "lineLoc": 633, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "info", "msg": "\"Session {} failed before anticompaction completed\",sessionID", "lineLoc": 641, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "error", "msg": "\"Prepare phase for incremental repair session {} failed\",sessionID,t", "lineLoc": 655, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Setting local incremental repair session {} to REPAIRING\",session", "lineLoc": 672, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"received {} from {}\",propose,from", "lineLoc": 679, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Received FinalizePropose message for unknown repair session {}, responding with failure\",sessionID", "lineLoc": 684, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Received FinalizePropose message for incremental repair session {}, responded with FinalizePromise\",sessionID", "lineLoc": 703, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "error", "msg": "String.format(\"Error handling FinalizePropose message for %s\",session),e", "lineLoc": 707, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"received {} from {}\",commit,from", "lineLoc": 734, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "warn", "msg": "\"Ignoring FinalizeCommit message for unknown repair session {}\",sessionID", "lineLoc": 739, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "info", "msg": "\"Finalized local repair session {}\",sessionID", "lineLoc": 744, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"received {} from {}\",msg,from", "lineLoc": 749, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Attempting to learn the outcome of unfinished local incremental repair session {}\",session.sessionID", "lineLoc": 755, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"received {} from {}\",request,from", "lineLoc": 768, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "warn", "msg": "\"Received status response message for unknown session {}\",sessionID", "lineLoc": 773, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Responding to status response message for incremental repair session {} with local state {}\",sessionID,session.getState()", "lineLoc": 779, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "trace", "msg": "\"received {} from {}\",response,from", "lineLoc": 785, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "warn", "msg": "\"Received StatusResponse message for unknown repair session {}\",sessionID", "lineLoc": 790, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "info", "msg": "\"Unfinished local incremental repair session {} set to state {}\",sessionID,response.state", "lineLoc": 799, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "debug", "msg": "\"Received StatusResponse for repair session {} with state {}, which is not actionable. Doing nothing.\",sessionID,response.state", "lineLoc": 803, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/consistent/LocalSessions.java"}, {"severity": "warn", "msg": "\"Sequential repair disabled when memory-mapped I/O is configured on Windows. Reverting to parallel.\"", "lineLoc": 283, "fileLoc": "cassandra/src/java/org/apache/cassandra/repair/messages/RepairOption.java"}, {"severity": "warn", "msg": "\"Compaction strategy {} does not have a static validateOptions method. Validation ignored\",klass.getName()", "lineLoc": 155, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/CompactionParams.java"}, {"severity": "warn", "msg": "CRC_CHECK_CHANCE_WARNING", "lineLoc": 291, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/CompressionParams.java"}, {"severity": "warn", "msg": "\"The {} option has been deprecated. You should use {} instead\",CHUNK_LENGTH_KB,CHUNK_LENGTH_IN_KB", "lineLoc": 406, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/CompressionParams.java"}, {"severity": "warn", "msg": "\"The {} option has been deprecated. You should use {} instead\",SSTABLE_COMPRESSION,CLASS", "lineLoc": 471, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/CompressionParams.java"}, {"severity": "info", "msg": "\"Indexer {} does not have a static validateOptions method. Validation ignored\",indexerClass.getName()", "lineLoc": 156, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/IndexMetadata.java"}, {"severity": "debug", "msg": "\"Not pulling schema because release version in Gossip is not major version {}, it is {}\",ourMajorVersion,releaseVersion", "lineLoc": 78, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Not pulling schema from {}, because local schema version is not known yet\",endpoint", "lineLoc": 83, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Not pulling schema from {}, because schema versions match ({})\",endpoint,Schema.schemaVersionToString(theirVersion)", "lineLoc": 90, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Not pulling schema from {}, because versions match ({}/{}), or shouldPullSchemaFrom returned false\",endpoint,Schema.instance.getVersion(),theirVersion", "lineLoc": 98, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"epState vanished for {}, not submitting migration task\",endpoint", "lineLoc": 124, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Not submitting migration task for {} because our versions match ({})\",endpoint,epSchemaVersion", "lineLoc": 129, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Submitting migration task for {}, schema version mismatch: local={}, remote={}\",endpoint,Schema.schemaVersionToString(Schema.instance.getVersion()),Schema.schemaVersionToString(epSchemaVersion)", "lineLoc": 132, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "error", "msg": "\"Migration task failed to complete\"", "lineLoc": 183, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "error", "msg": "\"Migration task was interrupted\"", "lineLoc": 188, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Create new Keyspace: {}\",ksm", "lineLoc": 210, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Create new table: {}\",cfm", "lineLoc": 245, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Update Keyspace '{}' From {} To {}\",ksm.name,oldKsm,ksm", "lineLoc": 257, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Update table '{}/{}' From {} To {}\",current.keyspace,current.name,current,updated", "lineLoc": 279, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Drop Keyspace '{}'\",oldKsm.name", "lineLoc": 291, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Drop table '{}/{}'\",tm.keyspace,tm.name", "lineLoc": 302, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Starting local schema reset...\"", "lineLoc": 387, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Truncating schema tables...\"", "lineLoc": 389, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Clearing local schema keyspace definitions...\"", "lineLoc": 395, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "debug", "msg": "\"Requesting schema from {}\",node", "lineLoc": 407, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "info", "msg": "\"Local schema reset is complete.\"", "lineLoc": 413, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationManager.java"}, {"severity": "warn", "msg": "\"Can't send schema pull request: node {} is down.\",endpoint", "lineLoc": 68, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationTask.java"}, {"severity": "info", "msg": "\"Skipped sending a migration request: node {} has a higher major version now.\",endpoint", "lineLoc": 78, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationTask.java"}, {"severity": "error", "msg": "\"Configuration exception merging remote schema\",e", "lineLoc": 95, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/MigrationTask.java"}, {"severity": "error", "msg": "errorMsg,\"\",exc", "lineLoc": 944, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java"}, {"severity": "error", "msg": "errorMsg,\"restart cassandra with -Dcassandra.ignore_corrupted_schema_tables=true and \"", "lineLoc": 948, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java"}, {"severity": "trace", "msg": "\"Skipping duplicate compilation of already existing UDF {}\",name", "lineLoc": 1210, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java"}, {"severity": "error", "msg": "String.format(\"Cannot load function '%s' from schema: this function won't be available (on this node)\",name),e", "lineLoc": 1221, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/SchemaKeyspace.java"}, {"severity": "trace", "msg": "\"Received schema pull request from {}\",message.from()", "lineLoc": 43, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/SchemaPullVerbHandler.java"}, {"severity": "trace", "msg": "\"Received schema push request from {}\",message.from()", "lineLoc": 45, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/SchemaPushVerbHandler.java"}, {"severity": "trace", "msg": "\"Received schema version request from {}\",message.from()", "lineLoc": 38, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/SchemaVersionVerbHandler.java"}, {"severity": "warn", "msg": "COMPACT_STORAGE_DEPRECATION_MESSAGE,builder.keyspace,builder.name,builder.flags,DEPRECATED_CS_FLAGS,flags", "lineLoc": 140, "fileLoc": "cassandra/src/java/org/apache/cassandra/schema/TableMetadata.java"}, {"severity": "info", "msg": "\"initializing CipherFactory\"", "lineLoc": 67, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/CipherFactory.java"}, {"severity": "info", "msg": "\"loading secret key for alias {}\",alias", "lineLoc": 92, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/CipherFactory.java"}, {"severity": "error", "msg": "\"could not build cipher\",e", "lineLoc": 133, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/CipherFactory.java"}, {"severity": "info", "msg": "\"initializing keystore from file {}\",options.get(PROP_KEYSTORE)", "lineLoc": 50, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/JKSKeyProvider.java"}, {"severity": "warn", "msg": "\"Certificate for {} expired on {}\",alias,expires", "lineLoc": 222, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/SSLFactory.java"}, {"severity": "warn", "msg": "\"Filtering out {} as it isn't supported by the socket\",Iterables.toString(missing)", "lineLoc": 246, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/SSLFactory.java"}, {"severity": "debug", "msg": "\"Checking whether certificates have been updated {}\",hotReloadableFiles", "lineLoc": 337, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/SSLFactory.java"}, {"severity": "info", "msg": "\"SSL certificates have been updated. Reseting the ssl contexts for new connections.\"", "lineLoc": 341, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/SSLFactory.java"}, {"severity": "error", "msg": "\"Failed to hot reload the SSL Certificates! Please check the certificate files.\",e", "lineLoc": 349, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/SSLFactory.java"}, {"severity": "debug", "msg": "\"Initializing hot reloading SSLContext\"", "lineLoc": 367, "fileLoc": "cassandra/src/java/org/apache/cassandra/security/SSLFactory.java"}, {"severity": "trace", "msg": "\"Got failure from {}\",from", "lineLoc": 243, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/AbstractWriteResponseHandler.java"}, {"severity": "debug", "msg": "\"Removing {} in parent repair sessions\",toRemove", "lineLoc": 671, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/ActiveRepairService.java"}, {"severity": "info", "msg": "\"Initializing key cache with capacity of {} MBs.\",DatabaseDescriptor.getKeyCacheSizeInMB()", "lineLoc": 100, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CacheService.java"}, {"severity": "info", "msg": "\"Initializing row cache with capacity of {} MBs\",DatabaseDescriptor.getRowCacheSizeInMB()", "lineLoc": 122, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CacheService.java"}, {"severity": "info", "msg": "\"Initializing counter cache with capacity of {} MBs\",DatabaseDescriptor.getCounterCacheSizeInMB()", "lineLoc": 151, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CacheService.java"}, {"severity": "info", "msg": "\"Scheduling counter cache save to every {} seconds (going to save {} keys).\",DatabaseDescriptor.getCounterCacheSavePeriod(),keysToSaveEQEQInteger.MAX_VALUEQUES\"all\":keysToSave", "lineLoc": 162, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CacheService.java"}, {"severity": "debug", "msg": "\"submitting cache saves\"", "lineLoc": 332, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CacheService.java"}, {"severity": "debug", "msg": "\"cache saves completed\"", "lineLoc": 339, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CacheService.java"}, {"severity": "warn", "msg": "\"JMX settings in cassandra-env.sh have been bypassed as the JMX connector server is \" + \"already initialized. Please refer to cassandra-env.(sh|ps1) for JMX configuration info\"", "lineLoc": 117, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "error", "msg": "\"Exception in thread \" + t,e", "lineLoc": 227, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "error", "msg": "\"Exception in thread \" + t,e2", "lineLoc": 243, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "error", "msg": "\"Error while loading schema: \",e", "lineLoc": 262, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "debug", "msg": "\"opening keyspace {}\",keyspaceName", "lineLoc": 295, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "warn", "msg": "\"Error loading key or row cache\",t", "lineLoc": 314, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "warn", "msg": "\"Unable to start GCInspector (currently only supported on the Sun JVM)\"", "lineLoc": 324, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Trying to load metrics-reporter-config from file: {}\",metricsReporterConfigFile", "lineLoc": 360, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "warn", "msg": "\"Failed to load metrics-reporter-config, file does not exist: {}\",metricsReporterConfigFile", "lineLoc": 372, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "warn", "msg": "\"Failed to load metrics-reporter-config, metric sinks will not be activated\",e", "lineLoc": 382, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "debug", "msg": "\"Completed submission of build tasks for any materialized views defined at startup\"", "lineLoc": 405, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Hostname: {}\",InetAddress.getLocalHost().getHostName() + \":\" + DatabaseDescriptor.getStoragePort() + \":\" + DatabaseDescriptor.getSSLStoragePort()", "lineLoc": 480, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Could not resolve local host\"", "lineLoc": 484, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"JVM vendor/version: {}/{}\",System.getProperty(\"java.vm.name\"),System.getProperty(\"java.version\")", "lineLoc": 487, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Heap size: {}/{}\",FBUtilities.prettyPrintMemory(Runtime.getRuntime().totalMemory()),FBUtilities.prettyPrintMemory(Runtime.getRuntime().maxMemory())", "lineLoc": 488, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"{} {}: {}\",pool.getName(),pool.getType(),pool.getPeakUsage()", "lineLoc": 493, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Classpath: {}\",System.getProperty(\"java.class.path\")", "lineLoc": 495, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"JVM Arguments: {}\",ManagementFactory.getRuntimeMXBean().getInputArguments()", "lineLoc": 497, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Not starting client transports in write_survey mode as it's bootstrapping or \" + \"auth is enabled\"", "lineLoc": 536, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Not starting client transports as bootstrap has not completed\"", "lineLoc": 545, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Not starting native transport as requested. Use JMX (StorageService->startNativeTransport()) or nodetool (enablebinary) to start it\"", "lineLoc": 558, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "error", "msg": "\"Error shutting down local JMX server: \",e", "lineLoc": 588, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "error", "msg": "\"Exception encountered during startup\",e", "lineLoc": 647, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "error", "msg": "\"Exception encountered during startup: {}\",e.getMessage()", "lineLoc": 655, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "error", "msg": "message,cause", "lineLoc": 754, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/CassandraDaemon.java"}, {"severity": "info", "msg": "\"Using {} as query handler for native protocol queries (as requested with -Dcassandra.custom_query_handler_class)\",customHandlerClass", "lineLoc": 99, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/ClientState.java"}, {"severity": "info", "msg": "\"Cannot use class {} as query handler ({}), ignoring by defaulting on normal query handling\",customHandlerClass,e.getMessage()", "lineLoc": 104, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/ClientState.java"}, {"severity": "error", "msg": "\"Exiting forcefully due to file system exception on startup, disk failure policy \\\"{}\\\"\",DatabaseDescriptor.getDiskFailurePolicy(),t", "lineLoc": 92, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/DefaultFSErrorHandler.java"}, {"severity": "trace", "msg": "\"Sending ECHO_RSP to {}\",message.from()", "lineLoc": 38, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/EchoVerbHandler.java"}, {"severity": "debug", "msg": "\"Error accessing field of java.nio.Bits\",t", "lineLoc": 87, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/GCInspector.java"}, {"severity": "warn", "msg": "sb.toString()", "lineLoc": 297, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/GCInspector.java"}, {"severity": "info", "msg": "sb.toString()", "lineLoc": 299, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/GCInspector.java"}, {"severity": "trace", "msg": "sb.toString()", "lineLoc": 301, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/GCInspector.java"}, {"severity": "trace", "msg": "\"Error accessing field of java.nio.Bits\",t", "lineLoc": 341, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/GCInspector.java"}, {"severity": "trace", "msg": "\"Disseminating load info ...\"", "lineLoc": 91, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/LoadBroadcaster.java"}, {"severity": "info", "msg": "\"Netty using native Epoll event loop\"", "lineLoc": 66, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/NativeTransportService.java"}, {"severity": "info", "msg": "\"Netty using Java NIO event loop\"", "lineLoc": 71, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/NativeTransportService.java"}, {"severity": "warn", "msg": "\"epoll not available\",Epoll.unavailabilityCause()", "lineLoc": 149, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/NativeTransportService.java"}, {"severity": "trace", "msg": "\"Finished PendingRangeTask for {} keyspaces in {}ms\",keyspaces.size(),System.currentTimeMillis()SUBstart", "lineLoc": 79, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/PendingRangeCalculatorService.java"}, {"severity": "debug", "msg": "\"Need to stream {}, current endpoints {}, new endpoints {}\",toStream,oldEndpoints,newEndpoints", "lineLoc": 125, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Current tmd: {}, Updated tmd: {}\",tokenMetaClone,tokenMetaCloneAllSettled", "lineLoc": 166, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "info", "msg": "\"Calculating ranges to stream and request for keyspace {}\",keyspace", "lineLoc": 173, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "info", "msg": "\"Endpoint ranges to stream to \" + rangesToStream", "lineLoc": 204, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Will stream range {} of keyspace {} to endpoint {}\",rangesToStream.get(address),keyspace,address", "lineLoc": 209, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Will request range {} of keyspace {} from endpoint {}\",rangesToFetch.get(address),keyspace,address", "lineLoc": 226, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Keyspace {}: work map {}.\",keyspace,rangesToFetch", "lineLoc": 230, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Calculating toStream\"", "lineLoc": 257, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Calculating toFetch\"", "lineLoc": 260, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"To stream {}\",toStream", "lineLoc": 263, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"To fetch {}\",toFetch", "lineLoc": 264, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Comparing {} and {}\",src,dst", "lineLoc": 276, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"    Doesn't intersect adding {}\",src", "lineLoc": 303, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"    Intersects adding {}\",remainder", "lineLoc": 309, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/RangeRelocator.java"}, {"severity": "debug", "msg": "\"Enqueuing response to snapshot request {} to {}\",command.snapshot_name,message.from()", "lineLoc": 43, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/SnapshotVerbHandler.java"}, {"severity": "warn", "msg": "\"jemalloc shared library could not be preloaded to speed up memory allocations\"", "lineLoc": 135, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "info", "msg": "\"jemalloc preload explicitly disabled\"", "lineLoc": 137, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "info", "msg": "\"jemalloc seems to be preloaded from {}\",jemalloc", "lineLoc": 139, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"JMX is not enabled to receive remote connections. Please see cassandra-env.sh for more info.\"", "lineLoc": 168, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "error", "msg": "\"cassandra.jmx.local.port missing from cassandra-env.sh, unable to start local JMX service.\"", "lineLoc": 171, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "info", "msg": "\"JMX is enabled to receive remote connections on port: {}\",jmxPort", "lineLoc": 175, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"Use of com.sun.management.jmxremote.port at startup is deprecated. \" + \"Please use cassandra.jmx.remote.port instead.\"", "lineLoc": 186, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"32bit JVM detected.  It is recommended to run Cassandra on a 64bit JVM for better performance.\"", "lineLoc": 198, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"Non-Oracle JVM detected.  Some features, such as immediate unmap of compacted SSTables, may not work as intended\"", "lineLoc": 203, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"The JVM is not configured to stop on OutOfMemoryError which can cause data corruption.\" + \" Use one of the following JVM options to configure the behavior on OutOfMemoryError: \" + \" -XX:+ExitOnOutOfMemoryError, -XX:+CrashOnOutOfMemoryError, or -XX:OnOutOfMemoryError=\\\"<cmd args>;<cmd args>\\\"\"", "lineLoc": 219, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"The JVM is not configured to stop on OutOfMemoryError which can cause data corruption.\" + \" Either upgrade your JRE to a version greater or equal to 8u92 and use -XX:+ExitOnOutOfMemoryError/-XX:+CrashOnOutOfMemoryError\" + \" or use -XX:OnOutOfMemoryError=\\\"<cmd args>;<cmd args>\\\" on your current JRE.\"", "lineLoc": 226, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"Unable to parse {}.\",path,e", "lineLoc": 288, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"IO exception while reading file {}.\",path,e", "lineLoc": 294, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"Maximum number of memory map areas per process (vm.max_map_count) {} \" + \"is too low, recommended value: {}, you can change it with sysctl.\",maxMapCount,EXPECTED_MAX_MAP_COUNT", "lineLoc": 310, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "debug", "msg": "\"Checking directory {}\",dataDir", "lineLoc": 325, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "warn", "msg": "\"Directory {} doesn't exist\",dataDir", "lineLoc": 331, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StartupChecks.java"}, {"severity": "error", "msg": "\"Failed paxos prepare locally\",ex", "lineLoc": 456, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "error", "msg": "\"Failed paxos propose locally\",ex", "lineLoc": 486, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "error", "msg": "\"Failed to apply paxos commit locally : \",ex", "lineLoc": 580, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "warn", "msg": "\"Received base materialized view mutation for key {} that does not belong \" + \"to this node. There is probably a range movement happening (move or decommission),\" + \"but this node hasn't updated its ring metadata yet. Adding mutation to \" + \"local batchlog to be replayed later.\",mutation.key()", "lineLoc": 780, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "error", "msg": "\"Error applying local view update to keyspace {}: {}\",mutation.getKeyspaceName(),mutation", "lineLoc": 802, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "warn", "msg": "\"Exception occurred updating coordinatorWriteLatency metric\",ex", "lineLoc": 979, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "trace", "msg": "\"Sending batchlog store request {} to {} for {} mutations\",batch.id,replica,batch.size()", "lineLoc": 994, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "trace", "msg": "\"Sending batchlog remove request {} to {}\",uuid,target", "lineLoc": 1010, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "trace", "msg": "\"Adding FWD message to {}@{}\",message.id(),replica", "lineLoc": 1301, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "trace", "msg": "\"Sending message to {}@{}\",message.id(),targets.get(0)", "lineLoc": 1312, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "error", "msg": "\"Failed to apply mutation locally : \",ex", "lineLoc": 1327, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "error", "msg": "\"Failed to apply mutation locally : \",ex", "lineLoc": 1353, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "error", "msg": "t.getMessage()", "lineLoc": 1796, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "trace", "msg": "\"Didn't get enough response rows; actual rows per range: {}; remaining rows: {}, new concurrent requests: {}\",rowsPerRange,remainingRows,concurrencyFactor", "lineLoc": 2024, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "trace", "msg": "\"Estimated result rows per range: {}; requested rows: {}, ranges.size(): {}; concurrent range requests: {}\",resultsPerRange,command.limits().count(),ranges.rangeCount(),concurrencyFactor", "lineLoc": 2138, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "debug", "msg": "\"Hosts not in agreement. Didn't get a response from everybody: {}\",StringUtils.join(results.get(UNREACHABLE),\",\")", "lineLoc": 2211, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "debug", "msg": "\"{} disagrees ({})\",host,entry.getKey()", "lineLoc": 2218, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "debug", "msg": "\"Schemas are in agreement.\"", "lineLoc": 2221, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "debug", "msg": "\"Starting a blocking truncate operation on keyspace {}, CF {}\",keyspace,cfname", "lineLoc": 2350, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "info", "msg": "\"Cannot perform truncate, some hosts are down\"", "lineLoc": 2353, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "warn", "msg": "\"Some hints were not written before shutdown.  This is not supposed to happen.  You should (a) run repair, and (b) file a bug report\"", "lineLoc": 2563, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "debug", "msg": "\"Discarding hint for endpoint not part of ring: {}\",target", "lineLoc": 2603, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "trace", "msg": "\"Adding hints for {}\",validTargets", "lineLoc": 2605, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageProxy.java"}, {"severity": "info", "msg": "\"Overriding RING_DELAY to {}ms\",newdelay", "lineLoc": 138, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Setting tokens to {}\",tokens", "lineLoc": 257, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Stopping gossip by operator request\"", "lineLoc": 304, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Starting gossip by operator request\"", "lineLoc": 317, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Stopping gossiper\"", "lineLoc": 394, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Stopping native transport\"", "lineLoc": 399, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Gathering node replacement information for {}\",replaceAddress", "lineLoc": 469, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Skipping endpoint collision check as cassandra.allow_unsafe_join=true\"", "lineLoc": 505, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Starting shadow gossip round to check for endpoint collision\"", "lineLoc": 509, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Unable to gossip with any peers but continuing anyway since node is in its own seed list\"", "lineLoc": 513, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Populating token metadata from system tables\"", "lineLoc": 593, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Token metadata: {}\",tokenMetadata", "lineLoc": 600, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Cassandra version: {}\",FBUtilities.getReleaseVersionString()", "lineLoc": 611, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"CQL version: {}\",QueryProcessor.CQL_VERSION", "lineLoc": 612, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Native protocol supported versions: {} (default: {})\",StringUtils.join(ProtocolVersion.supportedVersions(),\", \"),ProtocolVersion.CURRENT", "lineLoc": 613, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Not starting gossip as requested.\"", "lineLoc": 648, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Error loading counter cache\",t", "lineLoc": 665, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Not joining ring as requested. Use JMX (StorageService->joinRing()) to initiate ring joining\"", "lineLoc": 686, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Loading persisted ring state\"", "lineLoc": 696, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Replace address on first boot requested; this node is already bootstrapped\"", "lineLoc": 720, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"This node was decommissioned, but overriding by operator request.\"", "lineLoc": 758, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Starting up server gossip\"", "lineLoc": 815, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"current schema version: {}\",Schema.instance.getVersion()", "lineLoc": 837, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Bootstrap variables: {} {} {} {}\",DatabaseDescriptor.isAutoBootstrap(),SystemKeyspace.bootstrapInProgress(),SystemKeyspace.bootstrapComplete(),DatabaseDescriptor.getSeeds().contains(FBUtilities.getBroadcastAddressAndPort())", "lineLoc": 868, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"This node will not auto bootstrap because it is configured to be a seed node.\"", "lineLoc": 876, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Detected previous bootstrap failure; retrying\"", "lineLoc": 884, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"... got ring + schema info\"", "lineLoc": 894, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Using saved tokens {}\",bootstrapTokens", "lineLoc": 981, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Some data streaming failed. Use nodetool to check bootstrap state and resume. For more, see `nodetool help bootstrap`. {}\",SystemKeyspace.getBootstrapState()", "lineLoc": 1005, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Startup complete, but write survey mode is active, not becoming an active ring member. Use JMX (StorageService->joinRing()) to finalize ring joining.\"", "lineLoc": 1011, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Some data streaming failed. Use nodetool to check bootstrap state and resume. For more, see `nodetool help bootstrap`. {}\",SystemKeyspace.getBootstrapState()", "lineLoc": 1013, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Joining ring by operator request\"", "lineLoc": 1042, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Leaving write survey mode and joining ring at operator request\"", "lineLoc": 1058, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Can't join the ring because in write_survey mode and bootstrap hasn't completed\"", "lineLoc": 1065, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Attempted to create new keyspace {}, but it already exists\",ksm.name", "lineLoc": 1132, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"rebuild from dc: {}, {}, {}\",sourceDcEQEQnullQUES\"(any dc)\":sourceDc,keyspaceEQEQnullQUES\"(All keyspaces)\":keyspace,tokensEQEQnullQUES\"(All tokens)\":tokens", "lineLoc": 1193, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"adding range: ({},{}]\",startToken,endToken", "lineLoc": 1232, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set rpc timeout to {} ms\",value", "lineLoc": 1310, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set read rpc timeout to {} ms\",value", "lineLoc": 1321, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set range rpc timeout to {} ms\",value", "lineLoc": 1332, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set write rpc timeout to {} ms\",value", "lineLoc": 1343, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set internode tcp connect timeout to {} ms\",value", "lineLoc": 1354, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set internode tcp user timeout to {} ms\",value", "lineLoc": 1365, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set counter write rpc timeout to {} ms\",value", "lineLoc": 1376, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set cas contention rpc timeout to {} ms\",value", "lineLoc": 1387, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"set truncate rpc timeout to {} ms\",value", "lineLoc": 1398, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"setstreamthroughput: throttle set to {}\",value", "lineLoc": 1409, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"setinterdcstreamthroughput: throttle set to {}\",value", "lineLoc": 1420, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "logMsg", "lineLoc": 1508, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "logMsg", "lineLoc": 1510, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Resetting bootstrap progress to start fresh\"", "lineLoc": 1553, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Bootstrap completed! for the tokens {}\",tokens", "lineLoc": 1570, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Error during bootstrap.\",e", "lineLoc": 1576, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Error while waiting on bootstrap to complete. Bootstrap will have to be restarted.\",e", "lineLoc": 1586, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Resuming bootstrap...\"", "lineLoc": 1628, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Startup complete, but write survey mode is active, not becoming an active ring member. Use JMX (StorageService->joinRing()) to finalize ring joining.\"", "lineLoc": 1644, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Resume complete\"", "lineLoc": 1654, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "message,e", "lineLoc": 1669, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Resuming bootstrap is requested, but the node is already bootstrapped.\"", "lineLoc": 1678, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Ignoring state change for dead or unknown endpoint: {}\",endpoint", "lineLoc": 2104, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Node {} state bootstrapping, token {}\",endpoint,tokens", "lineLoc": 2357, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Node {} state jump to bootstrap\",endpoint", "lineLoc": 2370, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Node {} tried to replace malformed endpoint {}.\",newNode,piecesLBRACKET1RBRACKET,e", "lineLoc": 2389, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Node {} is replacing {}, tokens {}\",newNode,oldNode,tokens", "lineLoc": 2408, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Node {} state {}, tokens {}\",endpoint,status,tokens", "lineLoc": 2421, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Node {} state jump to {}\",endpoint,status", "lineLoc": 2428, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Node {} '{}' token mismatch. Long network partition?\",endpoint,status", "lineLoc": 2433, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"New node {} at token {}\",endpoint,token", "lineLoc": 2454, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Nodes {} and {} have the same token {}. {} is the new owner\",endpoint,currentOwner,token,endpoint", "lineLoc": 2476, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Nodes () and {} have the same token {}.  Ignoring {}\",endpoint,currentOwner,token,endpoint", "lineLoc": 2480, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Node {} state {}, token {}\",endpoint,status,tokens", "lineLoc": 2506, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Node {} state jump to {}\",endpoint,status", "lineLoc": 2509, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Node {} is in state normal but it has no tokens, state: {}\",endpoint,Gossiper.instance.getEndpointStateForEndpoint(endpoint)", "lineLoc": 2512, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Node {} will complete replacement of {} for tokens {}\",endpoint,replacingNode.get(),tokens", "lineLoc": 2520, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Node {} cannot complete replacement of alive node {}.\",endpoint,replacingNode.get()", "lineLoc": 2523, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Node {} is currently being replaced by node {}.\",endpoint,replacementNode.get()", "lineLoc": 2532, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Not updating token metadata for {} because I am replacing it\",endpoint", "lineLoc": 2541, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Not updating host ID {} for {} because it's mine\",hostId,endpoint", "lineLoc": 2548, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Host ID collision for {} between {} and {}; {} is the new owner\",hostId,existing,endpoint,endpoint", "lineLoc": 2554, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Host ID collision for {} between {} and {}; ignored {}\",hostId,existing,endpoint,endpoint", "lineLoc": 2561, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Node {} state left, tokens {}\",endpoint,tokens", "lineLoc": 2620, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Node {} state moving, new token {}\",endpoint,token", "lineLoc": 2639, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Received removenode gossip about myself. Is this node rejoining after an explicit removenode?\"", "lineLoc": 2658, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Tokens {} removed manually (endpoint was {})\",removeTokens,endpoint", "lineLoc": 2683, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Removing tokens {} for {}\",tokens,endpoint", "lineLoc": 2706, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Getting new source replicas for {}\",leavingReplicas", "lineLoc": 2765, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Possible replicas for newReplica {} are {}\",ourReplica,possibleReplicas", "lineLoc": 2778, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Sorted possible replicas starts as {}\",sortedPossibleReplicas", "lineLoc": 2781, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Skipping down replica {}\",possibleReplica", "lineLoc": 2799, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Didn't find live replica to restore replication for \" + ourReplica", "lineLoc": 2804, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Notifying {} of replication completion\\n\",remote", "lineLoc": 2821, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Restoring replica count for keyspace {}\",keyspaceName", "lineLoc": 2898, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Changed replicas for leaving {}, myNewReplicas {}\",changedReplicas,myNewReplicas", "lineLoc": 2912, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Requesting keyspace {} sources\",keyspaceName", "lineLoc": 2918, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Source and our replicas are {}\",fetchReplicas", "lineLoc": 2920, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Requesting from {} full replicas {} transient replicas {}\",sourceAddress,StringUtils.join(full,\", \"),StringUtils.join(transientReplicas,\", \")", "lineLoc": 2933, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Streaming to restore replica count failed\",t", "lineLoc": 2948, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Node {} replicas [{}]\",endpoint,StringUtils.join(replicas,\", \")", "lineLoc": 2977, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Replica {} already in all replicas\",replica", "lineLoc": 3023, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Replica {} will be responsibility of {}\",replica,StringUtils.join(newReplicaEndpoints,\", \")", "lineLoc": 3025, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Verifying {}.{} with options = {}\",keyspaceName,Arrays.toString(tableNames),options", "lineLoc": 3358, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Cleared out snapshot directories\"", "lineLoc": 3642, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Forcing flush on keyspace {}, CF {}\",keyspaceName,cfStore.name", "lineLoc": 3736, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "trace", "msg": "\"computing ranges for {}\",StringUtils.join(sortedTokens,\", \")", "lineLoc": 3944, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"DECOMMISSIONING\"", "lineLoc": 4126, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"failed to shutdown message service: {}\",ioe", "lineLoc": 4182, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Error while decommissioning node \",e.getCause()", "lineLoc": 4198, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Announcing that I have left the ring for {}ms\",delay", "lineLoc": 4216, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Ranges needing transfer are [{}]\",StringUtils.join(rangesMM.keySet(),\",\")", "lineLoc": 4229, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"stream acks all received.\"", "lineLoc": 4252, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Unable to stream hints since no live endpoints seen\"", "lineLoc": 4280, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Invalid request to move(Token); This node has more than one token and cannot be moved thusly.\"", "lineLoc": 4326, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Successfully moved to new token {}\",getLocalTokens().iterator().next()", "lineLoc": 4371, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Removal not confirmed for for {}\",StringUtils.join(this.replicatingNodes,\",\")", "lineLoc": 4418, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"No nodes to force removal on, call 'removenode' first\"", "lineLoc": 4430, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Node {} is already being removed, continuing removal anyway\",endpoint", "lineLoc": 4464, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Endpoint {} is down and will not receive data for re-replication of {}\",ep,endpoint", "lineLoc": 4487, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Received unexpected REPLICATION_FINISHED message from {}. Was this node recently a removal coordinator?\",node", "lineLoc": 4528, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Cannot drain node (did it already happen?)\"", "lineLoc": 4586, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Attempting to continue draining after pre-shutdown hooks returned exception\",preShutdownHookThrowable", "lineLoc": 4595, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Batchlog manager timed out shutting down\",t", "lineLoc": 4608, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "warn", "msg": "\"Failed to wait for non periodic tasks to shutdown\"", "lineLoc": 4704, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Caught an exception while draining \",t", "lineLoc": 4711, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "error", "msg": "\"Post-shutdown hooks returned exception\",postShutdownHookThrowable", "lineLoc": 4717, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Created new dynamic snitch {} with update-interval={}, reset-interval={}, badness-threshold={}\",((DynamicEndpointSnitch)newSnitch).subsnitch.getClass().getName(),DatabaseDescriptor.getDynamicUpdateInterval(),DatabaseDescriptor.getDynamicResetInterval(),DatabaseDescriptor.getDynamicBadnessThreshold()", "lineLoc": 5041, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Created new non-dynamic snitch {}\",newSnitch.getClass().getName()", "lineLoc": 5047, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Applying config change to dynamic snitch {} with update-interval={}, reset-interval={}, badness-threshold={}\",((DynamicEndpointSnitch)oldSnitch).subsnitch.getClass().getName(),DatabaseDescriptor.getDynamicUpdateInterval(),DatabaseDescriptor.getDynamicResetInterval(),DatabaseDescriptor.getDynamicBadnessThreshold()", "lineLoc": 5061, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "debug", "msg": "\"Skipping transferred range {} of keyspace {}, endpoint {}\",local,keyspace,remote", "lineLoc": 5104, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Updated batch_size_fail_threshold_in_kb to {}\",threshold", "lineLoc": 5387, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Updated batch_size_warn_threshold_in_kb to {}\",threshold", "lineLoc": 5398, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Updated hinted_handoff_throttle_in_kb to {}\",throttleInKB", "lineLoc": 5404, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Cleared connection history\"", "lineLoc": 5411, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Auditlog is disabled\"", "lineLoc": 5416, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"AuditLog is enabled with logger: [{}], included_keyspaces: [{}], excluded_keyspaces: [{}], \" + \"included_categories: [{}], excluded_categories: [{}], included_users: [{}], \" + \"excluded_users: [{}], archive_command: [{}]\",loggerName,auditLogOptions.included_keyspaces,auditLogOptions.excluded_keyspaces,auditLogOptions.included_categories,auditLogOptions.excluded_categories,auditLogOptions.included_users,auditLogOptions.excluded_users,auditLogOptions.archive_command", "lineLoc": 5439, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "info", "msg": "\"Setting corrupted tombstone strategy to {}\",strategy", "lineLoc": 5460, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/StorageService.java"}, {"severity": "trace", "msg": "\"Prepare response {} from {}\",response,message.from()", "lineLoc": 65, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/paxos/PrepareCallback.java"}, {"severity": "trace", "msg": "\"Propose response {} from {}\",msg.payload,msg.from()", "lineLoc": 62, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/paxos/ProposeCallback.java"}, {"severity": "trace", "msg": "\"reading {} locally\",readCommand.isDigestQuery()QUES\"digest\":\"data\"", "lineLoc": 159, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/AbstractReadExecutor.java"}, {"severity": "trace", "msg": "\"speculating read retry on {}\",extraReplica", "lineLoc": 313, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/AbstractReadExecutor.java"}, {"severity": "trace", "msg": "\"Timed out waiting on digest mismatch repair requests\"", "lineLoc": 409, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/AbstractReadExecutor.java"}, {"severity": "trace", "msg": "\"responsesMatch: {} ms.\",TimeUnit.NANOSECONDS.toMillis(System.nanoTime()SUBstart)", "lineLoc": 130, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/DigestResolver.java"}, {"severity": "trace", "msg": "\"Blockfor is {}; setting up requests to {}\",blockFor,this.replicaPlan", "lineLoc": 78, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/ReadCallback.java"}, {"severity": "debug", "msg": "\"{}; received {} of {} responses{}\",NEWObjectLBRACKETRBRACKETLBRACE(failedQUES\"Failed\":\"Timed out\"),received,blockFor,gotDataRBRACE", "lineLoc": 114, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/ReadCallback.java"}, {"severity": "error", "msg": "\"Encountered error while trying to preprocess the message {}, in command {}, replica plan: {}\",message,command,replicaPlan", "lineLoc": 68, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/ResponseResolver.java"}, {"severity": "info", "msg": "\"Requesting {} extra rows from {} for short read protection\",toQuery,source", "lineLoc": 149, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/ShortReadPartitionsProtection.java"}, {"severity": "debug", "msg": "\"Timeout while read-repairing after receiving all {} data and digest responses\",blockFor", "lineLoc": 102, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/repair/BlockingReadRepair.java"}, {"severity": "debug", "msg": "\"Encountered an oversized ({}/{}) read repair mutation for table {}, key {}, node {}\",mutationSize,maxMutationSize,metadata,metadata.partitionKeyType.getString(key.getKey()),destination", "lineLoc": 69, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/repair/BlockingReadRepairs.java"}, {"severity": "warn", "msg": "\"Encountered an oversized ({}/{}) read repair mutation for table {}, key {}, node {}\",mutationSize,maxMutationSize,metadata,metadata.partitionKeyType.getString(key.getKey()),destination", "lineLoc": 79, "fileLoc": "cassandra/src/java/org/apache/cassandra/service/reads/repair/BlockingReadRepairs.java"}, {"severity": "debug", "msg": "\"Replying to {}@{}\",msg.id(),msg.from()", "lineLoc": 37, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/ReplicationDoneVerbHandler.java"}, {"severity": "debug", "msg": "\"Connecting next session {} with {}.\",next.planId(),next.peer.toString()", "lineLoc": 141, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamCoordinator.java"}, {"severity": "debug", "msg": "\"Finished connecting all sessions\"", "lineLoc": 145, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamCoordinator.java"}, {"severity": "info", "msg": "\"[Stream #{}, ID#{}] Beginning stream session with {}\",session.planId(),session.sessionIndex(),session.peer", "lineLoc": 261, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamCoordinator.java"}, {"severity": "warn", "msg": "\"[{}] Received stream {} on already finished stream received task. Aborting stream.\",session.planId(),stream.getName()", "lineLoc": 79, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamReceiveTask.java"}, {"severity": "debug", "msg": "\"received {} of {} total files {} of total bytes {}\",remoteStreamsReceived,totalStreams,bytesReceived,totalSize", "lineLoc": 88, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamReceiveTask.java"}, {"severity": "info", "msg": "\"[Stream #{}] Executing streaming plan for {}\",planId,streamOperation.getDescription()", "lineLoc": 89, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java"}, {"severity": "info", "msg": "\"[Stream #{} ID#{}] Creating new streaming plan for {} from {} channel.remote {} channel.local {}\" + \" channel.id {}\",planId,sessionIndex,streamOperation.getDescription(),from,channel.remoteAddress(),channel.localAddress(),channel.id()", "lineLoc": 113, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java"}, {"severity": "info", "msg": "\"[Stream #{}, ID#{}] Received streaming plan for {} from {} channel.remote {} channel.local {} channel.id {}\",planId,sessionIndex,streamOperation.getDescription(),from,channel.remoteAddress(),channel.localAddress(),channel.id()", "lineLoc": 122, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java"}, {"severity": "info", "msg": "\"[Stream #{} ID#{}] Prepare completed. Receiving {} files({}), sending {} files({})\",session.planId(),session.sessionIndex(),sessionInfo.getTotalFilesToReceive(),FBUtilities.prettyPrintMemory(sessionInfo.getTotalSizeToReceive()),sessionInfo.getTotalFilesToSend(),FBUtilities.prettyPrintMemory(sessionInfo.getTotalSizeToSend())", "lineLoc": 178, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java"}, {"severity": "info", "msg": "\"[Stream #{}] Session with {} is complete\",session.planId(),session.peer", "lineLoc": 192, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java"}, {"severity": "warn", "msg": "\"[Stream #{}] Stream failed\",planId", "lineLoc": 219, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java"}, {"severity": "info", "msg": "\"[Stream #{}] All sessions completed\",planId", "lineLoc": 224, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamResultFuture.java"}, {"severity": "debug", "msg": "\"Creating stream session to {}\",template", "lineLoc": 200, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "info", "msg": "\"[Stream #{}] Session does not have any tasks.\",planId()", "lineLoc": 270, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "info", "msg": "\"[Stream #{}] Starting streaming to {}{}\",planId(),peer,template.connectToEQEQnullQUES\"\":\" through \" + template.connectTo", "lineLoc": 277, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "warn", "msg": "\"failed to abort some streaming tasks\",e", "lineLoc": 429, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "error", "msg": "\"[Stream #{}] Did not receive response from peer {}{} for {} secs. Is peer down? \" + \"If not, maybe try increasing streaming_keep_alive_period_in_secs.\",planId(),peer.getHostAddress(true),template.connectToEQEQnullQUES\"\":\" through \" + template.connectTo.getHostAddress(true),2STARDatabaseDescriptor.getStreamingKeepAlivePeriod(),e", "lineLoc": 535, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "error", "msg": "\"[Stream #{}] Streaming error occurred on session with peer {}{}\",planId(),peer.getHostAddress(true),template.connectToEQEQnullQUES\"\":\" through \" + template.connectTo.getHostAddress(true),e", "lineLoc": 544, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "debug", "msg": "\"handling Complete message, state = {}, completeSent = {}\",state,completeSent", "lineLoc": 664, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "error", "msg": "\"[Stream #{}] Remote peer {} failed stream session.\",planId(),peer.toString()", "lineLoc": 685, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "error", "msg": "\"[Stream #{}] Session failed because remote peer {} has left.\",planId(),peer.toString()", "lineLoc": 724, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "error", "msg": "\"[Stream #{}] Session failed because remote peer {} was restarted.\",planId(),peer.toString()", "lineLoc": 730, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamSession.java"}, {"severity": "debug", "msg": "\"recevied sequenceNumber {}, remaining files {}\",sequenceNumber,streams.keySet()", "lineLoc": 89, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/StreamTransferTask.java"}, {"severity": "debug", "msg": "\"{} Scheduling keep-alive task with {}s period.\",createLogTag(session,channel),keepAlivePeriod", "lineLoc": 176, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "debug", "msg": "\"Creating channel id {} local {} remote {}\",channel.id(),channel.localAddress(),channel.remoteAddress()", "lineLoc": 190, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "debug", "msg": "\"{} Sending {}\",createLogTag(session,null),message", "lineLoc": 220, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "debug", "msg": "\"{} Sending {}\",createLogTag(session,channel),message", "lineLoc": 240, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "error", "msg": "\"{} failed to send a stream message/data to peer {}: msg = {}\",createLogTag(session,channel),template.to,msg,future.cause()", "lineLoc": 278, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "info", "msg": "\"{} waiting to acquire a permit to begin streaming {}. This message logs every {} minutes\",createLogTag(session,null),ofm.getName(),logInterval", "lineLoc": 366, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "trace", "msg": "\"{} Sending keep-alive to {}.\",createLogTag(session,channel),session.peer", "lineLoc": 469, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "debug", "msg": "\"{} Could not send keep-alive message (perhaps stream session is finished?).\",createLogTag(session,channel),future.cause()", "lineLoc": 484, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "debug", "msg": "\"{} Closing stream connection channels on {}\",createLogTag(session,null),template.to", "lineLoc": 518, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/NettyStreamingMessageSender.java"}, {"severity": "trace", "msg": "\"connection problem while streaming\",cause", "lineLoc": 135, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/StreamingInboundHandler.java"}, {"severity": "warn", "msg": "\"exception occurred while in processing streaming data\",cause", "lineLoc": 137, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/StreamingInboundHandler.java"}, {"severity": "debug", "msg": "\"{} Received {}\",createLogTag(session,channel),message", "lineLoc": 193, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/StreamingInboundHandler.java"}, {"severity": "debug", "msg": "\"{} Received {}\",createLogTag(session,channel),message", "lineLoc": 201, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/StreamingInboundHandler.java"}, {"severity": "error", "msg": "\"{} stream operation from {} failed\",createLogTag(session,channel),remoteAddress,t", "lineLoc": 223, "fileLoc": "cassandra/src/java/org/apache/cassandra/streaming/async/StreamingInboundHandler.java"}, {"severity": "error", "msg": "\"Failure serializing partition key.\",e", "lineLoc": 195, "fileLoc": "cassandra/src/java/org/apache/cassandra/tools/JsonTransformer.java"}, {"severity": "error", "msg": "\"Fatal error parsing partition: {}\",key,e", "lineLoc": 248, "fileLoc": "cassandra/src/java/org/apache/cassandra/tools/JsonTransformer.java"}, {"severity": "error", "msg": "\"Fatal error parsing row.\",e", "lineLoc": 305, "fileLoc": "cassandra/src/java/org/apache/cassandra/tools/JsonTransformer.java"}, {"severity": "error", "msg": "\"Failure parsing tombstone.\",e", "lineLoc": 335, "fileLoc": "cassandra/src/java/org/apache/cassandra/tools/JsonTransformer.java"}, {"severity": "error", "msg": "\"Failure parsing ColumnData.\",e", "lineLoc": 414, "fileLoc": "cassandra/src/java/org/apache/cassandra/tools/JsonTransformer.java"}, {"severity": "error", "msg": "\"Failure parsing cell.\",e", "lineLoc": 505, "fileLoc": "cassandra/src/java/org/apache/cassandra/tools/JsonTransformer.java"}, {"severity": "trace", "msg": "\"Adding <{}> to trace events\",message", "lineLoc": 70, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/TraceStateImpl.java"}, {"severity": "trace", "msg": "\"Waiting for up to {} seconds for {} trace events to complete\", + WAIT_FOR_PENDING_EVENTS_TIMEOUT_SECS,pendingFutures.size()", "lineLoc": 84, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/TraceStateImpl.java"}, {"severity": "trace", "msg": "\"Failed to wait for tracing events to complete in {} seconds\",WAIT_FOR_PENDING_EVENTS_TIMEOUT_SECS", "lineLoc": 93, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/TraceStateImpl.java"}, {"severity": "error", "msg": "\"Got exception whilst waiting for tracing events to complete\",t", "lineLoc": 99, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/TraceStateImpl.java"}, {"severity": "warn", "msg": "\"Failed to insert pending future, tracing synchronization may not work\"", "lineLoc": 116, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/TraceStateImpl.java"}, {"severity": "warn", "msg": "\"Too many nodes are overloaded to save trace events\"", "lineLoc": 127, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/TraceStateImpl.java"}, {"severity": "info", "msg": "\"Using {} as tracing queries (as requested with -Dcassandra.custom_tracing_class)\",customTracingClass", "lineLoc": 122, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/Tracing.java"}, {"severity": "error", "msg": "String.format(\"Cannot use class %s for tracing, ignoring by defaulting to normal tracing\",customTracingClass),e", "lineLoc": 127, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/Tracing.java"}, {"severity": "trace", "msg": "\"request complete\"", "lineLoc": 207, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/Tracing.java"}, {"severity": "warn", "msg": "\"failed to capture the tracing info for an outbound message to {}, ignoring\",sendTo,e", "lineLoc": 301, "fileLoc": "cassandra/src/java/org/apache/cassandra/tracing/Tracing.java"}, {"severity": "trace", "msg": "\"Discarded request of size: {}. InflightChannelRequestPayload: {}, InflightEndpointRequestPayload: {}, InflightOverallRequestPayload: {}, Request: {}\",frameSize,channelPayloadBytesInFlight,endpointAndGlobalPayloadsInFlight.endpoint().using(),endpointAndGlobalPayloadsInFlight.global().using(),request", "lineLoc": 653, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Message.java"}, {"severity": "trace", "msg": "\"Received: {}, v={}\",request,connection.getVersion()", "lineLoc": 722, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Message.java"}, {"severity": "trace", "msg": "\"Responding: {}, v={}\",response,connection.getVersion()", "lineLoc": 742, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Message.java"}, {"severity": "info", "msg": "\"Enabling optionally encrypted CQL connections between client and server\"", "lineLoc": 148, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "info", "msg": "\"Enabling encrypted CQL connections between client and server\"", "lineLoc": 153, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "info", "msg": "\"Starting listening for CQL clients on {} ({})...\",socket,this.useSSLQUES\"encrypted\":\"unencrypted\"", "lineLoc": 164, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "info", "msg": "\"Stop listening for CQL clients\"", "lineLoc": 213, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "info", "msg": "\"Closing client connection {} after timeout of {}ms\",channel.remoteAddress(),idleTimeout", "lineLoc": 419, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "trace", "msg": "\"Sending event for endpoint {}, rpc address {}\",endpoint,event.nodeAddress()", "lineLoc": 588, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "trace", "msg": "\"Topology changed event : {}, {}\",endpoint,event.change", "lineLoc": 641, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "trace", "msg": "\"Status changed event : {}, {}\",endpoint,event.status", "lineLoc": 655, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/Server.java"}, {"severity": "error", "msg": "\"Failed to get peer certificates for peer {}\",channel().remoteAddress(),e", "lineLoc": 140, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/ServerConnection.java"}, {"severity": "error", "msg": "\"Exception in response\",cause", "lineLoc": 339, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/SimpleClient.java"}, {"severity": "warn", "msg": "\"Invalid compression/checksum options supplied. %s / %s\",checksumType,compressor.getClass().getName()", "lineLoc": 133, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/frame/checksum/ChecksummingTransformer.java"}, {"severity": "info", "msg": "\"IO error during compression of frame body chunk\",e", "lineLoc": 332, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/frame/checksum/ChecksummingTransformer.java"}, {"severity": "info", "msg": "\"IO error during decompression of frame body chunk\",e", "lineLoc": 348, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/frame/checksum/ChecksummingTransformer.java"}, {"severity": "error", "msg": "\"Unexpected exception during request\",e", "lineLoc": 390, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/messages/ErrorMessage.java"}, {"severity": "error", "msg": "\"Unexpected error during query\",e", "lineLoc": 124, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/messages/QueryMessage.java"}, {"severity": "error", "msg": "\"Received invalid message for supported protocol version {}\",version", "lineLoc": 42, "fileLoc": "cassandra/src/java/org/apache/cassandra/transport/messages/UnsupportedMessageCodec.java"}, {"severity": "info", "msg": "\"Loading new jar {}\",inputJar.getAbsolutePath()", "lineLoc": 91, "fileLoc": "cassandra/src/java/org/apache/cassandra/triggers/CustomClassLoader.java"}, {"severity": "trace", "msg": "\"Class not found using parent class loader,\",ex", "lineLoc": 119, "fileLoc": "cassandra/src/java/org/apache/cassandra/triggers/CustomClassLoader.java"}, {"severity": "info", "msg": "\"Scheduling approximate time-check task with a precision of {} milliseconds\",ALMOST_NOW_UPDATE_INTERVAL_MS", "lineLoc": 157, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/ApproximateTime.java"}, {"severity": "info", "msg": "\"Scheduling approximate time conversion task with an interval of {} milliseconds\",ALMOST_SAME_TIME_UPDATE_INTERVAL_MS", "lineLoc": 164, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/ApproximateTime.java"}, {"severity": "debug", "msg": "String.format(formatstr,namesLBRACKETiRBRACKET,count)", "lineLoc": 317, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/EstimatedHistogram.java"}, {"severity": "warn", "msg": "\"Trigger directory doesn't exist, please create it and try again.\"", "lineLoc": 321, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/FBUtilities.java"}, {"severity": "warn", "msg": "\"Unable to load version.properties\",e", "lineLoc": 342, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/FBUtilities.java"}, {"severity": "warn", "msg": "\"Cannot provide an optimal BloomFilter for {} elements ({}/{} buckets per element).\",numElements,bucketsPerElement,targetBucketsPerElem", "lineLoc": 43, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/FilterFactory.java"}, {"severity": "info", "msg": "\"Trying to log the heap histogram using jcmd\"", "lineLoc": 44, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/HeapUtils.java"}, {"severity": "error", "msg": "\"The process ID could not be retrieved. Skipping heap histogram generation.\"", "lineLoc": 49, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/HeapUtils.java"}, {"severity": "error", "msg": "\"The heap histogram could not be generated due to the following error: \",e", "lineLoc": 66, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/HeapUtils.java"}, {"severity": "info", "msg": "builder.toString()", "lineLoc": 109, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/HeapUtils.java"}, {"severity": "error", "msg": "\"Underlying string constructor threw an error: {}\",causeEQEQnullQUESite.getMessage():cause.getMessage()", "lineLoc": 109, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/Hex.java"}, {"severity": "trace", "msg": "\"Creating IntervalNode from {}\",toBisect", "lineLoc": 161, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/IntervalTree.java"}, {"severity": "error", "msg": "\"Some JRE information could not be retrieved for the JRE version: \" + jreVersion,e", "lineLoc": 51, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/JavaUtils.java"}, {"severity": "info", "msg": "\"Configured JMX server at: {}\",url", "lineLoc": 248, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/JMXServerUtils.java"}, {"severity": "debug", "msg": "\"JMX SSL configuration. { protocols: [{}], cipher_suites: [{}], require_client_auth: {} }\",serverFactory.getEnabledProtocols()EQEQnullQUES\"'JVM defaults'\":Arrays.stream(serverFactory.getEnabledProtocols()).collect(Collectors.joining(\"','\",\"'\",\"'\")),serverFactory.getEnabledCipherSuites()EQEQnullQUES\"'JVM defaults'\":Arrays.stream(serverFactory.getEnabledCipherSuites()).collect(Collectors.joining(\"','\",\"'\",\"'\")),serverFactory.getNeedClientAuth()", "lineLoc": 254, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/JMXServerUtils.java"}, {"severity": "error", "msg": "\"OutOfMemory error letting the JVM handle the error:\",t", "lineLoc": 79, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/JVMStabilityInspector.java"}, {"severity": "error", "msg": "\"Exiting due to error while processing commit log during initialization.\",t", "lineLoc": 110, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/JVMStabilityInspector.java"}, {"severity": "error", "msg": "t.getMessage()", "lineLoc": 136, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/JVMStabilityInspector.java"}, {"severity": "error", "msg": "\"JVM state determined to be unstable.  Exiting forcefully due to:\",t", "lineLoc": 170, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/JVMStabilityInspector.java"}, {"severity": "error", "msg": "\"Error in MBean wrapper: \",e", "lineLoc": 170, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MBeanWrapper.java"}, {"severity": "debug", "msg": "\"Digest mismatch detected among leaf nodes {}, {}\",lnode,rnode", "lineLoc": 219, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"Digest mismatch detected, traversing trees [{}, {}]\",ltree,rtree", "lineLoc": 224, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"Range {} fully inconsistent\",active", "lineLoc": 227, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Hashing sub-ranges [{}, {}] for {} divided by midpoint {}\",active.depth,left,right,active,midpoint", "lineLoc": 262, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Inconsistent digest on left sub-range {}: [{}, {}]\",active.depth,left,lnode,rnode", "lineLoc": 272, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Left sub-range fully inconsistent {}\",active.depth,left", "lineLoc": 281, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Inconsistent digest on right sub-range {}: [{}, {}]\",active.depth,right,lnode,rnode", "lineLoc": 292, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Right sub-range fully inconsistent {}\",active.depth,right", "lineLoc": 301, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Adding left sub-range to diff as fully inconsistent {}\",active.depth,left", "lineLoc": 313, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Adding right sub-range to diff as fully inconsistent {}\",active.depth,right", "lineLoc": 319, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"({}) Range {} partially inconstent\",active.depth,active", "lineLoc": 323, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "warn", "msg": "\"Configuration requests off-heap merkle trees, but partitioner does not support it. Ignoring.\"", "lineLoc": 730, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"Allocating direct buffer of size {} for an off-heap merkle tree\",size", "lineLoc": 741, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MerkleTree.java"}, {"severity": "debug", "msg": "\"Using custom clock implementation: {}\",sclock", "lineLoc": 86, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MonotonicClock.java"}, {"severity": "error", "msg": "e.getMessage(),e", "lineLoc": 91, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MonotonicClock.java"}, {"severity": "debug", "msg": "\"Using custom clock implementation: {}\",sclock", "lineLoc": 105, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MonotonicClock.java"}, {"severity": "error", "msg": "e.getMessage(),e", "lineLoc": 124, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MonotonicClock.java"}, {"severity": "info", "msg": "\"Scheduling approximate time conversion task with an interval of {} milliseconds\",UPDATE_INTERVAL_MS", "lineLoc": 199, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MonotonicClock.java"}, {"severity": "info", "msg": "\"Scheduling approximate time-check task with a precision of {} milliseconds\",UPDATE_INTERVAL_MS", "lineLoc": 335, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/MonotonicClock.java"}, {"severity": "trace", "msg": "\"Will try to load mx4j now, if it's in the classpath\"", "lineLoc": 44, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/Mx4jTool.java"}, {"severity": "info", "msg": "\"mx4j successfuly loaded\"", "lineLoc": 62, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/Mx4jTool.java"}, {"severity": "trace", "msg": "\"Will not load MX4J, mx4j-tools.jar is not in the classpath\"", "lineLoc": 67, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/Mx4jTool.java"}, {"severity": "warn", "msg": "\"Could not start register mbean in JMX\",e", "lineLoc": 71, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/Mx4jTool.java"}, {"severity": "warn", "msg": "\"the current operating system, {}, is unsupported by cassandra\",osName", "lineLoc": 144, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"Obsolete version of JNA present; unable to read errno. Upgrade to JNA 3.2.7 or later\"", "lineLoc": 161, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "info", "msg": "\"JNA mlockall successful\"", "lineLoc": 186, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"Unable to lock JVM memory (ENOMEM).\" + \" This can result in part of the JVM being swapped out, especially with mmapped I/O enabled.\" + \" Increase RLIMIT_MEMLOCK or run Cassandra as root.\"", "lineLoc": 199, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"Could not skip cache\",e", "lineLoc": 223, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"posix_fadvise({}, {}) failed, errno ({}).\",fd,offset,errno(e)", "lineLoc": 271, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"fcntl({}, {}, {}) failed, errno ({}).\",fd,command,flags,errno(e)", "lineLoc": 293, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"open({}, O_RDONLY) failed, errno ({}).\",path,errno(e)", "lineLoc": 316, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "errMsg", "lineLoc": 341, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "errMsg", "lineLoc": 365, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"Unable to read fd field from FileChannel\"", "lineLoc": 378, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"Unable to read fd field from FileDescriptor\"", "lineLoc": 397, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "info", "msg": "\"Failed to get PID from JNA\",e", "lineLoc": 414, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibrary.java"}, {"severity": "warn", "msg": "\"JNA not found. Native methods will be disabled.\"", "lineLoc": 60, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryDarwin.java"}, {"severity": "error", "msg": "\"Failed to link the C library against JNA. Native methods will be unavailable.\",e", "lineLoc": 64, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryDarwin.java"}, {"severity": "warn", "msg": "\"Obsolete version of JNA present; unable to register C library. Upgrade to JNA 3.2.7 or later\"", "lineLoc": 68, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryDarwin.java"}, {"severity": "warn", "msg": "\"JNA not found. Native methods will be disabled.\"", "lineLoc": 60, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryLinux.java"}, {"severity": "error", "msg": "\"Failed to link the C library against JNA. Native methods will be unavailable.\",e", "lineLoc": 64, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryLinux.java"}, {"severity": "warn", "msg": "\"Obsolete version of JNA present; unable to register C library. Upgrade to JNA 3.2.7 or later\"", "lineLoc": 68, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryLinux.java"}, {"severity": "warn", "msg": "\"JNA not found. Native methods will be disabled.\"", "lineLoc": 53, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryWindows.java"}, {"severity": "error", "msg": "\"Failed to link the Windows/Kernel32 library against JNA. Native methods will be unavailable.\",e", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryWindows.java"}, {"severity": "warn", "msg": "\"Obsolete version of JNA present; unable to register Windows/Kernel32 library. Upgrade to JNA 3.2.7 or later\"", "lineLoc": 61, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/NativeLibraryWindows.java"}, {"severity": "info", "msg": "msg", "lineLoc": 42, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/OutputHandler.java"}, {"severity": "trace", "msg": "msg", "lineLoc": 47, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/OutputHandler.java"}, {"severity": "warn", "msg": "msg", "lineLoc": 52, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/OutputHandler.java"}, {"severity": "warn", "msg": "msg,th", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/OutputHandler.java"}, {"severity": "error", "msg": "String.format(\"Timed run of %s failed.\",callback.getClass()),t", "lineLoc": 64, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/ResourceWatcher.java"}, {"severity": "info", "msg": "\"Initializing SIGAR library\"", "lineLoc": 44, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "info", "msg": "\"Could not initialize SIGAR library {} \",e.getMessage()", "lineLoc": 53, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "info", "msg": "\"Could not initialize SIGAR library {} \",linkError.getMessage()", "lineLoc": 57, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "warn", "msg": "\"Could not determine if max processes was acceptable. Error message: {}\",sigarException", "lineLoc": 86, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "warn", "msg": "\"Could not determine if max open file handle limit is correctly configured. Error message: {}\",sigarException", "lineLoc": 107, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "warn", "msg": "\"Could not determine if VirtualMemoryMax was acceptable. Error message: {}\",sigarException", "lineLoc": 132, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "warn", "msg": "\"Could not determine if swap configuration is acceptable. Error message: {}\",sigarException", "lineLoc": 154, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "warn", "msg": "\"Cassandra server running in degraded mode. Is swap disabled? : {},  Address space adequate? : {}, \" + \" nofile limit adequate? : {}, nproc limit adequate? : {} \",BANGswapEnabled,goodAddressSpace,goodFileLimits,goodProcNumber", "lineLoc": 174, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "info", "msg": "\"Checked OS settings and found them configured for optimal performance.\"", "lineLoc": 180, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "info", "msg": "\"Sigar could not be initialized, test for checking degraded mode omitted.\"", "lineLoc": 185, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SigarLibrary.java"}, {"severity": "trace", "msg": "\"StatusLogger is busy\"", "lineLoc": 58, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java"}, {"severity": "info", "msg": "String.format(\"%-28s%10s%10s%15s%10s%18s\",tpool.poolName,tpool.activeTasks.getValue(),tpool.pendingTasks.getValue(),tpool.completedTasks.getValue(),tpool.currentBlocked.getCount(),tpool.totalBlocked.getCount())", "lineLoc": 69, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java"}, {"severity": "info", "msg": "String.format(\"%-25s%10s%10s\",\"MessagingService\",\"n/a\",pendingLargeMessages + \"/\" + pendingSmallMessages)", "lineLoc": 91, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java"}, {"severity": "info", "msg": "String.format(\"%-25s%10s%25s%25s\",\"Cache Type\",\"Size\",\"Capacity\",\"KeysToSave\")", "lineLoc": 101, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java"}, {"severity": "info", "msg": "String.format(\"%-25s%10s%25s%25s\",\"KeyCache\",keyCache.weightedSize(),keyCache.getCapacity(),keyCacheKeysToSaveEQEQInteger.MAX_VALUEQUES\"all\":keyCacheKeysToSave)", "lineLoc": 103, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java"}, {"severity": "info", "msg": "String.format(\"%-25s%10s%25s%25s\",\"RowCache\",rowCache.weightedSize(),rowCache.getCapacity(),rowCacheKeysToSaveEQEQInteger.MAX_VALUEQUES\"all\":rowCacheKeysToSave)", "lineLoc": 109, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java"}, {"severity": "info", "msg": "String.format(\"%-25s%20s\",cfs.keyspace.getName() + \".\" + cfs.name,cfs.metric.memtableColumnsCount.getValue() + \",\" + cfs.metric.memtableLiveDataSize.getValue())", "lineLoc": 119, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/StatusLogger.java"}, {"severity": "info", "msg": "\"Skip fsync enabled due to property {} and environment {}\",skipSyncProperty,skipSyncEnv", "lineLoc": 95, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/SyncUtil.java"}, {"severity": "warn", "msg": "\"JNA not found. winmm.dll cannot be registered. Performance will be negatively impacted on this node.\"", "lineLoc": 39, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/WindowsTimer.java"}, {"severity": "error", "msg": "\"Failed to register winmm.dll. Performance will be negatively impacted on this node.\"", "lineLoc": 43, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/WindowsTimer.java"}, {"severity": "warn", "msg": "\"Failed to set timer to : {}. Performance will be degraded.\",period", "lineLoc": 58, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/WindowsTimer.java"}, {"severity": "warn", "msg": "\"Failed to end accelerated timer period. System timer will remain set to: {} ms.\",period", "lineLoc": 67, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/WindowsTimer.java"}, {"severity": "error", "msg": "\"Unexpected exception in binary log thread\",t", "lineLoc": 198, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/BinLog.java"}, {"severity": "debug", "msg": "\"Chronicle store file {} rolled file size {}\",file.getPath(),file.length()", "lineLoc": 59, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/DeletingArchiver.java"}, {"severity": "error", "msg": "\"Failed to delete chronicle store file: {} store file size: {} bytes in store files: {}. \" + \"You will need to clean this up manually or reset full query logging.\",toDelete.getPath(),toDeleteLength,bytesInStoreFiles", "lineLoc": 66, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/DeletingArchiver.java"}, {"severity": "info", "msg": "\"Deleted chronicle store file: {} store file size: {} bytes in store files: {} max log size: {}.\",file.getPath(),toDeleteLength,bytesInStoreFiles,maxLogSize", "lineLoc": 73, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/DeletingArchiver.java"}, {"severity": "error", "msg": "\"Got error archiving {}, retrying in {} minutes\",toArchive.file,TimeUnit.MINUTES.convert(retryDelayMs,TimeUnit.MILLISECONDS),t", "lineLoc": 99, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "error", "msg": "\"Max retries {} reached for {}, leaving on disk\",toArchive.retries,toArchive.file,t", "lineLoc": 104, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "error", "msg": "\"Got error waiting for files to archive\",t", "lineLoc": 108, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "debug", "msg": "\"Exiting archiver thread\"", "lineLoc": 111, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "debug", "msg": "\"BinLog file released: {}\",file", "lineLoc": 117, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "debug", "msg": "\"Archiving existing file {}\",f", "lineLoc": 154, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "error", "msg": "\"Got error archiving existing file {}\",f,e", "lineLoc": 159, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "debug", "msg": "\"Executing archive command: {}\",cmd", "lineLoc": 167, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/binlog/ExternalArchiver.java"}, {"severity": "error", "msg": "\"BAD RELEASE: attempted to release a reference ({}) that has already been released\",id", "lineLoc": 217, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/concurrent/Ref.java"}, {"severity": "error", "msg": "\"LEAK DETECTED: a reference ({}) to {} was not released before the reference was garbage collected\",id,globalState", "lineLoc": 228, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/concurrent/Ref.java"}, {"severity": "error", "msg": "\"Error when closing {}\",globalState,fail", "lineLoc": 237, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/concurrent/Ref.java"}, {"severity": "error", "msg": "\"Allocate trace {}:\\n{}\",id,print(allocateThread,allocateTrace)", "lineLoc": 259, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/concurrent/Ref.java"}, {"severity": "error", "msg": "\"Deallocate trace {}:\\n{}\",id,print(deallocateThread,deallocateTrace)", "lineLoc": 261, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/concurrent/Ref.java"}, {"severity": "warn", "msg": "\"Strong reference leak candidates detected: {}\",names", "lineLoc": 690, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/concurrent/Ref.java"}, {"severity": "info", "msg": "\"set log level to {} for classes under '{}' (if the level doesn't look like '{}' then the logger couldn't parse '{}')\",level,classQualifier,rawLevel,rawLevel", "lineLoc": 101, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/logging/LogbackLoggingSupport.java"}, {"severity": "warn", "msg": "\"You are using Cassandra with an unsupported deployment. The intended logging implementation library logback is not used by slf4j. Detected slf4j logger factory: {}. \" + \"You will not be able to dynamically manage log levels via JMX and may have performance or other issues.\",loggerFactoryClass", "lineLoc": 36, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/logging/LoggingSupportFactory.java"}, {"severity": "warn", "msg": "\"The log level was not changed, because you are using an unsupported slf4j logging implementation for which this functionality was not implemented.\"", "lineLoc": 21, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/logging/NoOpFallbackLoggingSupport.java"}, {"severity": "warn", "msg": "\"An empty map of logger names and their logging levels was returned, because you are using an unsupported slf4j logging implementation for which this functionality was not implemented.\"", "lineLoc": 27, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/logging/NoOpFallbackLoggingSupport.java"}, {"severity": "info", "msg": "\"Global buffer pool is disabled, allocating {}\",ALLOCATE_ON_HEAP_WHEN_EXAHUSTEDQUES\"on heap\":\"off heap\"", "lineLoc": 214, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/memory/BufferPool.java"}, {"severity": "info", "msg": "\"Global buffer pool is enabled, when pool is exhausted (max is {}) it will allocate {}\",prettyPrintMemory(MEMORY_USAGE_THRESHOLD),ALLOCATE_ON_HEAP_WHEN_EXAHUSTEDQUES\"on heap\":\"off heap\"", "lineLoc": 216, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/memory/BufferPool.java"}, {"severity": "trace", "msg": "\"Requested buffer size {} is bigger than {}; allocating directly\",prettyPrintMemory(size),prettyPrintMemory(NORMAL_CHUNK_SIZE)", "lineLoc": 663, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/memory/BufferPool.java"}, {"severity": "trace", "msg": "\"Requested buffer size {} has been allocated directly due to lack of capacity\",prettyPrintMemory(size)", "lineLoc": 670, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/memory/BufferPool.java"}, {"severity": "trace", "msg": "\"{} regions now allocated in {}\",regionCount,this", "lineLoc": 145, "fileLoc": "cassandra/src/java/org/apache/cassandra/utils/memory/SlabAllocator.java"}, {"severity": "info", "msg": "String.format(\"%s: Executed %d barriers with %d operations. %.0f%% complete.\",Thread.currentThread().getName(),count,opCount,100STAR(1SUB((untilSUBnow)SLASH(double)RUNTIME)))", "lineLoc": 100, "fileLoc": "cassandra/test/burn/org/apache/cassandra/concurrent/LongOpOrderTest.java"}, {"severity": "error", "msg": "\"Received size changed after barrier finished: {} vs {}\",checkCount,totalCount()", "lineLoc": 169, "fileLoc": "cassandra/test/burn/org/apache/cassandra/concurrent/LongOpOrderTest.java"}, {"severity": "error", "msg": "\"Received an operation that was created after the barrier was issued.\"", "lineLoc": 183, "fileLoc": "cassandra/test/burn/org/apache/cassandra/concurrent/LongOpOrderTest.java"}, {"severity": "error", "msg": "\"Missing registered operations. {} vs {}\",TestOrdering.this.count.get(e.getKey()).intValue(),e.getValue().intValue()", "lineLoc": 188, "fileLoc": "cassandra/test/burn/org/apache/cassandra/concurrent/LongOpOrderTest.java"}, {"severity": "error", "msg": "\"Unexpected exception\",t", "lineLoc": 311, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/ConnectionBurnTest.java"}, {"severity": "info", "msg": "\"Syncing connections: {}\",connections", "lineLoc": 385, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/ConnectionBurnTest.java"}, {"severity": "info", "msg": "\"Sync'd connections: {}\",connections", "lineLoc": 405, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/ConnectionBurnTest.java"}, {"severity": "error", "msg": "\"{}\",String.format(message,params)", "lineLoc": 453, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/Verifier.java"}, {"severity": "error", "msg": "\"Connection: {}\",currentConnection", "lineLoc": 454, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/Verifier.java"}, {"severity": "error", "msg": "\"{}\",String.format(message,params),t", "lineLoc": 459, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/Verifier.java"}, {"severity": "error", "msg": "\"Connection: {}\",currentConnection", "lineLoc": 460, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/Verifier.java"}, {"severity": "error", "msg": "\"{}\",String.format(message,params)", "lineLoc": 465, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/Verifier.java"}, {"severity": "error", "msg": "\"Unexpected error:\",t", "lineLoc": 1177, "fileLoc": "cassandra/test/burn/org/apache/cassandra/net/Verifier.java"}, {"severity": "info", "msg": "\"Overriding configured BufferPool.MEMORY_USAGE_THRESHOLD={} and enabling BufferPool.DEBUG\",poolSize", "lineLoc": 247, "fileLoc": "cassandra/test/burn/org/apache/cassandra/utils/memory/LongBufferPoolTest.java"}, {"severity": "info", "msg": "\"All threads did not free all memory in this time slot - skipping buffer recycle check\"", "lineLoc": 273, "fileLoc": "cassandra/test/burn/org/apache/cassandra/utils/memory/LongBufferPoolTest.java"}, {"severity": "info", "msg": "\"Reverting BufferPool.MEMORY_USAGE_THRESHOLD={}\",prevPoolSize", "lineLoc": 289, "fileLoc": "cassandra/test/burn/org/apache/cassandra/utils/memory/LongBufferPoolTest.java"}, {"severity": "error", "msg": "\"Got exception {}, current chunk {}\",ex.getMessage(),BufferPool.unsafeCurrentChunk()", "lineLoc": 562, "fileLoc": "cassandra/test/burn/org/apache/cassandra/utils/memory/LongBufferPoolTest.java"}, {"severity": "error", "msg": "\"Got throwable {}, current chunk {}\",tr.getMessage(),BufferPool.unsafeCurrentChunk()", "lineLoc": 570, "fileLoc": "cassandra/test/burn/org/apache/cassandra/utils/memory/LongBufferPoolTest.java"}, {"severity": "info", "msg": "\"Looking for dtest jars in \" + NEWFile(\"build\").getAbsolutePath()", "lineLoc": 148, "fileLoc": "cassandra/test/distributed/org/apache/cassandra/distributed/impl/Versions.java"}, {"severity": "info", "msg": "\"Found \" + e.getValue().stream().map(vARROWv.version).collect(Collectors.joining(\", \"))", "lineLoc": 169, "fileLoc": "cassandra/test/distributed/org/apache/cassandra/distributed/impl/Versions.java"}, {"severity": "info", "msg": "\"Using seed {}\",seed", "lineLoc": 64, "fileLoc": "cassandra/test/distributed/org/apache/cassandra/distributed/test/LargeColumnTest.java"}, {"severity": "info", "msg": "\"Bloom filter false positive: {}\",fp", "lineLoc": 46, "fileLoc": "cassandra/test/long/org/apache/cassandra/utils/LongBloomFilterTest.java"}, {"severity": "info", "msg": "\"Bloom filter false positive: {}\",fp", "lineLoc": 57, "fileLoc": "cassandra/test/long/org/apache/cassandra/utils/LongBloomFilterTest.java"}, {"severity": "info", "msg": "\"Bloom filter false positive: {}\",fp", "lineLoc": 72, "fileLoc": "cassandra/test/long/org/apache/cassandra/utils/LongBloomFilterTest.java"}, {"severity": "info", "msg": "\"Bloom filter mean false positive: {}\",sumfpSLASH10", "lineLoc": 173, "fileLoc": "cassandra/test/long/org/apache/cassandra/utils/LongBloomFilterTest.java"}, {"severity": "error", "msg": "statement", "lineLoc": 139, "fileLoc": "cassandra/test/unit/org/apache/cassandra/LogbackStatusListener.java"}, {"severity": "info", "msg": "statement", "lineLoc": 141, "fileLoc": "cassandra/test/unit/org/apache/cassandra/LogbackStatusListener.java"}, {"severity": "info", "msg": "\"Re-running {} times to verify it isn't failing more often than it should.\",rerunsOnFailure", "lineLoc": 635, "fileLoc": "cassandra/test/unit/org/apache/cassandra/Util.java"}, {"severity": "debug", "msg": "\"Test failed again, total num failures: {}\",rerunsFailed,t", "lineLoc": 646, "fileLoc": "cassandra/test/unit/org/apache/cassandra/Util.java"}, {"severity": "error", "msg": "\"Test failed in {} of the {} reruns.\",rerunsFailed,rerunsOnFailure", "lineLoc": 651, "fileLoc": "cassandra/test/unit/org/apache/cassandra/Util.java"}, {"severity": "info", "msg": "\"All reruns succeeded. Failure treated as flake.\"", "lineLoc": 655, "fileLoc": "cassandra/test/unit/org/apache/cassandra/Util.java"}, {"severity": "warn", "msg": "\"Protocol Version {} not supported by java driver\",version", "lineLoc": 146, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "error", "msg": "\"Failed to cleanup and recreate directories.\"", "lineLoc": 211, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "error", "msg": "\"Failed to lookup host\"", "lineLoc": 220, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "error", "msg": "\"Fatal exception in thread \" + t,e", "lineLoc": 228, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "\"Started Java Driver instance for protocol version {}\",version", "lineLoc": 431, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 602, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 618, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 633, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 641, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 662, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 678, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 685, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 692, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "formattedQuery", "lineLoc": 703, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "formattedQuery", "lineLoc": 715, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 814, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "fullQuery", "lineLoc": 821, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "\"Error performing schema change\",e", "lineLoc": 854, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "trace", "msg": "\"Executing: {} with values {}\",query,formatAllValues(values)", "lineLoc": 933, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "trace", "msg": "\"Executing: {}\",query", "lineLoc": 954, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "trace", "msg": "\"Got {} rows\",rs.size()", "lineLoc": 960, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "\"Extra row num {}: {}\",i,str.toString()", "lineLoc": 1090, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "\"Error serializing query parameter {}:\",value,ex", "lineLoc": 1491, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/CQLTester.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 599, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 704, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 803, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 906, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 1083, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 1192, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 1301, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 1418, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 1531, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Testing MV primary key: {}\",mvPrimaryKeys.get(i)", "lineLoc": 1656, "fileLoc": "cassandra/test/unit/org/apache/cassandra/cql3/ViewFilteringTest.java"}, {"severity": "info", "msg": "\"Seed : {}\",seed", "lineLoc": 55, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/NativeCellTest.java"}, {"severity": "debug", "msg": "\"forcing flush\"", "lineLoc": 117, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/RecoveryManagerFlushedTest.java"}, {"severity": "debug", "msg": "\"begin manual replay\"", "lineLoc": 120, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/RecoveryManagerFlushedTest.java"}, {"severity": "error", "msg": "\"expectCurrentCDCState violation! Expected state: {}. Found state: {}. Current CDC allocation: {}\",expectedState,currentState,((CommitLogSegmentManagerCDC)CommitLog.instance.segmentManager).updateCDCTotalSize()", "lineLoc": 443, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/commitlog/CommitLogSegmentManagerCDCTest.java"}, {"severity": "info", "msg": "\"Corrupting sstable {} [{}] at pos {} / {}\",currentSSTable,sstable.getFilename(),pos,raf.length()", "lineLoc": 184, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/compaction/BlacklistingCompactionsTest.java"}, {"severity": "debug", "msg": "\"Boundaries for {} disks is {}\",numDisks,Arrays.toString(boundaries)", "lineLoc": 161, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionStrategyManagerTest.java"}, {"severity": "debug", "msg": "\"Index for SSTable {} on boundary {} is {}\",reader.descriptor.generation,Arrays.toString(boundaries),index", "lineLoc": 465, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/compaction/CompactionStrategyManagerTest.java"}, {"severity": "error", "msg": "\"L1 or L2 has 0 sstables. Expected > 0 on both.\"", "lineLoc": 141, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/compaction/LeveledCompactionStrategyTest.java"}, {"severity": "error", "msg": "\"L1: \" + l1Count", "lineLoc": 142, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/compaction/LeveledCompactionStrategyTest.java"}, {"severity": "error", "msg": "\"L2: \" + l2Count", "lineLoc": 143, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/compaction/LeveledCompactionStrategyTest.java"}, {"severity": "info", "msg": "\"*** Note: java.util.UUID.compareTo() would have compared this differently\"", "lineLoc": 156, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/marshal/UUIDTypeTest.java"}, {"severity": "info", "msg": "\"SSTables: {}\",sstables", "lineLoc": 179, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionTest.java"}, {"severity": "info", "msg": "\"Expected: {}\",expected", "lineLoc": 180, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionTest.java"}, {"severity": "info", "msg": "\"Originals: {}\",result.txn.originals()", "lineLoc": 183, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionTest.java"}, {"severity": "info", "msg": "\"Checking {}\",sstable", "lineLoc": 187, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionTest.java"}, {"severity": "info", "msg": "\"Originals: {}\",result.txn.originals()", "lineLoc": 215, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionTest.java"}, {"severity": "info", "msg": "\"Originals: {}\",result.txn.originals()", "lineLoc": 244, "fileLoc": "cassandra/test/unit/org/apache/cassandra/db/repair/PendingAntiCompactionTest.java"}, {"severity": "debug", "msg": "\"Simulating digest ACK response\"", "lineLoc": 90, "fileLoc": "cassandra/test/unit/org/apache/cassandra/gms/ShadowRoundTest.java"}, {"severity": "debug", "msg": "\"Removed index entry for stale value {}\",indexKey", "lineLoc": 447, "fileLoc": "cassandra/test/unit/org/apache/cassandra/index/internal/CustomCassandraIndex.java"}, {"severity": "debug", "msg": "\"Inserted entry into index for value {}\",valueKey", "lineLoc": 465, "fileLoc": "cassandra/test/unit/org/apache/cassandra/index/internal/CustomCassandraIndex.java"}, {"severity": "debug", "msg": "\"Removed index entry for value {}\",indexKey", "lineLoc": 511, "fileLoc": "cassandra/test/unit/org/apache/cassandra/index/internal/CustomCassandraIndex.java"}, {"severity": "info", "msg": "\"No SSTable data for {}.{} to build index {} from, marking empty index as built\",baseCfs.metadata.keyspace,baseCfs.metadata.name,metadata.name", "lineLoc": 632, "fileLoc": "cassandra/test/unit/org/apache/cassandra/index/internal/CustomCassandraIndex.java"}, {"severity": "info", "msg": "\"Submitting index build of {} for data in {}\",metadata.name,getSSTableNames(sstables)", "lineLoc": 639, "fileLoc": "cassandra/test/unit/org/apache/cassandra/index/internal/CustomCassandraIndex.java"}, {"severity": "info", "msg": "\"Index build of {} complete\",metadata.name", "lineLoc": 651, "fileLoc": "cassandra/test/unit/org/apache/cassandra/index/internal/CustomCassandraIndex.java"}, {"severity": "info", "msg": "\"Loading legacy version: {}\",legacyVersion", "lineLoc": 182, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Loading legacy version: {}\",legacyVersion", "lineLoc": 222, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Loading legacy version: {}\",legacyVersion", "lineLoc": 243, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Loading legacy version: {}\",legacyVersion", "lineLoc": 324, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Loading legacy version: {}\",legacyVersion", "lineLoc": 336, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Streaming legacy version {}\",legacyVersion", "lineLoc": 354, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Truncating legacy version {}\",legacyVersion", "lineLoc": 379, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Compacting legacy version {}\",legacyVersion", "lineLoc": 388, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Preparing legacy version {}\",legacyVersion", "lineLoc": 397, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "debug", "msg": "\"for pk={} ck={}\",pk,ck", "lineLoc": 425, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "debug", "msg": "\"Read legacy_{}_clust_counter\",legacyVersion", "lineLoc": 442, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "debug", "msg": "\"Read legacy_{}_clust\",legacyVersion", "lineLoc": 452, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "debug", "msg": "\"Read legacy_{}_simple_counter\",legacyVersion", "lineLoc": 465, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "debug", "msg": "\"Read simple: legacy_{}_simple\",legacyVersion", "lineLoc": 475, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Loading legacy table {}\",table", "lineLoc": 523, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/LegacySSTableTest.java"}, {"severity": "info", "msg": "\"Seed {}\",seed", "lineLoc": 99, "fileLoc": "cassandra/test/unit/org/apache/cassandra/io/sstable/SSTableCorruptionDetectionTest.java"}, {"severity": "debug", "msg": "\"adding node {} at {}\",address,token", "lineLoc": 140, "fileLoc": "cassandra/test/unit/org/apache/cassandra/locator/NetworkTopologyStrategyTest.java"}, {"severity": "debug", "msg": "\"{}: {}\",testToken,replicas", "lineLoc": 157, "fileLoc": "cassandra/test/unit/org/apache/cassandra/locator/NetworkTopologyStrategyTest.java"}, {"severity": "info", "msg": "\"Running {} {} -> {}\",outbound.messagingVersion(),outbound.settings(),inboundSettings", "lineLoc": 257, "fileLoc": "cassandra/test/unit/org/apache/cassandra/net/ConnectionTest.java"}, {"severity": "info", "msg": "\"seed: {}, decoder: {}\",seed,decoder.getClass().getSimpleName()", "lineLoc": 124, "fileLoc": "cassandra/test/unit/org/apache/cassandra/net/FramingTest.java"}, {"severity": "debug", "msg": "\"seed: {}, ratio: {}, version: {}\",innerSeed,ratio,version", "lineLoc": 225, "fileLoc": "cassandra/test/unit/org/apache/cassandra/net/FramingTest.java"}, {"severity": "info", "msg": "\"seed: {}, iterations: {}, largeRatio: {}, messagingVersion: {}, decoder: {}\",seed,count,largeRatio,messagingVersion,decoder.getClass().getSimpleName()", "lineLoc": 252, "fileLoc": "cassandra/test/unit/org/apache/cassandra/net/FramingTest.java"}, {"severity": "debug", "msg": "\"inner seed: {}, iteration: {}\",innerSeed,i", "lineLoc": 257, "fileLoc": "cassandra/test/unit/org/apache/cassandra/net/FramingTest.java"}, {"severity": "trace", "msg": "\"Received matching message: {}\",message", "lineLoc": 136, "fileLoc": "cassandra/test/unit/org/apache/cassandra/net/MockMessagingSpy.java"}, {"severity": "trace", "msg": "\"Responding to intercepted message: {}\",response", "lineLoc": 143, "fileLoc": "cassandra/test/unit/org/apache/cassandra/net/MockMessagingSpy.java"}, {"severity": "warn", "msg": "\"OpenSSL not available in this application, so not testing the netty-openssl code paths\"", "lineLoc": 93, "fileLoc": "cassandra/test/unit/org/apache/cassandra/security/SSLFactoryTest.java"}, {"severity": "info", "msg": "\"Ranges to fetch with preferred endpoints\"", "lineLoc": 594, "fileLoc": "cassandra/test/unit/org/apache/cassandra/service/MoveTransientTest.java"}, {"severity": "info", "msg": "result.toString()", "lineLoc": 595, "fileLoc": "cassandra/test/unit/org/apache/cassandra/service/MoveTransientTest.java"}, {"severity": "info", "msg": "\"Ranges to stream by endpoint\"", "lineLoc": 690, "fileLoc": "cassandra/test/unit/org/apache/cassandra/service/MoveTransientTest.java"}, {"severity": "info", "msg": "result.toString()", "lineLoc": 691, "fileLoc": "cassandra/test/unit/org/apache/cassandra/service/MoveTransientTest.java"}, {"severity": "info", "msg": "\"No beta version found for testing\"", "lineLoc": 64, "fileLoc": "cassandra/test/unit/org/apache/cassandra/service/ProtocolBetaVersionTest.java"}, {"severity": "info", "msg": "\"No beta version found for testing\"", "lineLoc": 101, "fileLoc": "cassandra/test/unit/org/apache/cassandra/service/ProtocolBetaVersionTest.java"}, {"severity": "debug", "msg": "\"... everything looks good for {}\",cfs.name", "lineLoc": 223, "fileLoc": "cassandra/test/unit/org/apache/cassandra/streaming/StreamingTransferTest.java"}, {"severity": "info", "msg": "\"adding custom payload items {}\",StringUtils.join(customPayload.keySet(),,)", "lineLoc": 195, "fileLoc": "cassandra/test/unit/org/apache/cassandra/tracing/TracingTest.java"}, {"severity": "info", "msg": "statement,param)", "lineLoc": 152, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java"}, {"severity": "info", "msg": "statement,param)", "lineLoc": 153, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java"}, {"severity": "warn", "msg": "statement,param)", "lineLoc": 154, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java"}, {"severity": "error", "msg": "statement,param)", "lineLoc": 155, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java"}, {"severity": "info", "msg": "statement,param)", "lineLoc": 221, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java"}, {"severity": "warn", "msg": "statement,param)", "lineLoc": 226, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java"}, {"severity": "error", "msg": "statement,param)", "lineLoc": 231, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/NoSpamLoggerTest.java"}, {"severity": "debug", "msg": "\"Event time ranges are disjunctive - log invocations were made one after another\"", "lineLoc": 91, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/StatusLoggerTest.java"}, {"severity": "debug", "msg": "\"Time ranges {}, {}, disjunctive={}\",firstThreadTimeRange,secondThreadTimeRange,disjunctive", "lineLoc": 105, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/StatusLoggerTest.java"}, {"severity": "error", "msg": "\"Both event lists contain more than one entry. First = {}, Second = {}\",firstThreadEvents,secondThreadEvents", "lineLoc": 122, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/StatusLoggerTest.java"}, {"severity": "error", "msg": "\"No status log was recorded. First = {}, Second = {}\",firstThreadEvents,secondThreadEvents", "lineLoc": 127, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/StatusLoggerTest.java"}, {"severity": "info", "msg": "\"Checking if logger was busy. First = {}, Second = {}\",firstThreadEvents,secondThreadEvents", "lineLoc": 132, "fileLoc": "cassandra/test/unit/org/apache/cassandra/utils/StatusLoggerTest.java"}, {"severity": "debug", "msg": "\"Executing query: {}\",query", "lineLoc": 116, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/QueryReplayer.java"}, {"severity": "error", "msg": "\"QUERY %s got exception: %s\",query,t.getMessage()", "lineLoc": 142, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/QueryReplayer.java"}, {"severity": "info", "msg": "String.format(\"%d queries, rate = %.2f\",timer.getCount(),timer.getOneMinuteRate())", "lineLoc": 147, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/QueryReplayer.java"}, {"severity": "debug", "msg": "\"Switching keyspace from {} to {}\",session.getLoggedKeyspace(),query.keyspace()", "lineLoc": 159, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/QueryReplayer.java"}, {"severity": "error", "msg": "\"USE {} failed: {}\",query.keyspace(),t.getMessage()", "lineLoc": 165, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/QueryReplayer.java"}, {"severity": "error", "msg": "\"Could not close connection\",t", "lineLoc": 269, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/QueryReplayer.java"}, {"severity": "warn", "msg": "sb.toString(),mismatchUUID,query", "lineLoc": 104, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultComparator.java"}, {"severity": "error", "msg": "\"ERROR notifying listener\",t", "lineLoc": 112, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultComparator.java"}, {"severity": "warn", "msg": "sb.toString(),mismatchUUID,query", "lineLoc": 126, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultComparator.java"}, {"severity": "error", "msg": "\"ERROR notifying listener\",t", "lineLoc": 134, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultComparator.java"}, {"severity": "error", "msg": "\"Query {} against {} failure: {}\",query,targetHosts.get(i),results.get(i).getFailureException().getMessage()", "lineLoc": 65, "fileLoc": "cassandra/tools/fqltool/src/org/apache/cassandra/fqltool/ResultHandler.java"}]